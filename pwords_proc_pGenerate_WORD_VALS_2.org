#+TITLE: pwords_proc_pGenerate_WORD_VALS_2.org



* DONE Stage 0000: Init
** iPython ~autoreload~

   - https://ipython.readthedocs.io/en/stable/config/extensions/autoreload.html

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from IPython import get_ipython
get_ipython().magic('load_ext autoreload')

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[1]:
   :END:

** Imports

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from init.imports    import *
get_ipython().magic('autoreload')

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[2]:
   # output
   : ===========================================================================
   : importing/reloading "init.imports"...
   : The autoreload extension is already loaded. To reload it, use:
   :   %reload_ext autoreload
   : DONE: basic imports...
   : DONE: extra settings...
   :
   :END:

** Load

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from init.load       import *
get_ipython().magic('autoreload')

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[3]:
   # output
   : ===========================================================================
   : importing/reloading "init.load"...
   : ===========================================================================
   : importing/reloading "aux_nlp.aux_nlp"...
   : DONE: loading: sgjp...
   :
   :END:

** Auxiliary

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from aux_nlp.aux_nlp import *
get_ipython().magic('autoreload')

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[4]:
   :END:

* DONE Stage 0301: Clean and merge the data
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0301.py

pd.set_option("display.expand_frame_repr", False)

wv_2 = pd.read_excel( "./data_in/from_jdo_wv_2_pop/wv2_pop_sel_20190426001.xlsx", ignore_index=True, )

print( "="*75 )
print( "wv_2" )
print( "-"*75 )
print( wv_2.columns.values )

print( "="*75 )
print( wv_2.shape )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[134]:
    # output
    : ===========================================================================
    : wv_2
    : ---------------------------------------------------------------------------
    : ['WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS' 'SEM_WS' 'T_TEST_WS' 'P_VALUE_WS'
    :  'CONF_95_dol' 'CONF_95_gora_WS' 'ACCEPTANCE_WS' 'ACC_MEAN_WS'
    :  'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA' 'T_TEST_WA' 'P_VALUE_WA'
    :  'CONF_95_dol_WA' 'CONF_95_gora_WA' 'ACCEPTANCE_WA' 'ACC_MEAN_WA'
    :  'WS+WA_WAR' 'SYLL_START' 'SYLL_ULTIM' 'SYLL' 'CHAR_COUNT' 'SYLL_COUNT'
    :  'OLD_20' 'SYLL_FIRST' 'SYLL_from_1st_1st' 'COUNT_1st_1st'
    :  'SYLL_from_ANY_1st' 'COUNT_ANY_1st']
    : ===========================================================================
    : (415, 34)
    :
    :END:

*** DONE Get the list of input files

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage0001.py

import os
import pandas as pd

from glob import glob

from collections import OrderedDict

tmp_pattern = "./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form*.xlsx"

tmp_in_files = glob( tmp_pattern )

print( "="*75 )
print( "tmp_pattern: " + tmp_pattern )
print( "="*75 )
print( "number of files globbed: " + str( len( tmp_in_files ) ) )
print( "="*75 )
print( "\n".join( tmp_in_files ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[135]:
    # output
    : ===========================================================================
    : tmp_pattern: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form*.xlsx
    : ===========================================================================
    : number of files globbed: 12
    : ===========================================================================
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_011_base_data_reco_20190418-151957-814.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_010_base_data_reco_20190418-151957-753.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_009_base_data_reco_20190418-151957-692.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_008_base_data_reco_20190418-151957-630.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_007_base_data_reco_20190418-151957-571.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_006_base_data_reco_20190418-151957-505.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_005_base_data_reco_20190418-151957-440.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_004_base_data_reco_20190418-151957-381.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_003_base_data_reco_20190418-151957-306.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_002_base_data_reco_20190418-151957-243.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_001_base_data_reco_20190418-151957-177.xlsx
    : ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_000_base_data_reco_20190418-151957-091.xlsx
    :
    :END:

*** DONE Load form responses

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

strRecodeMap = {
    "v": 0,
    "n": 1,
    "a": 2,
    "o": 3,
    "u": 4,
}

st0001_form_001_base = OrderedDict()

print( "="*75 )
for ii, file_path in enumerate( tmp_in_files ):
    print( "loading data ( " +  f"{ii:>2d}" + " ) from: " + file_path )
    st0001_form_001_base[ ii ] = OrderedDict()
    st0001_form_001_base[ ii ][ "data" ] = OrderedDict()
    st0001_form_001_base[ ii ][ "data" ][ "orig" ] = pd.read_excel( file_path, ignore_index=True, )

    st0001_form_001_base[ ii ][ "data" ][ "orig" ] = st0001_form_001_base[ ii ][ "data" ][ "orig" ].replace(strRecodeMap)


    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[136]:
    # output
    : ===========================================================================
    : loading data (  0 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_011_base_data_reco_20190418-151957-814.xlsx
    : loading data (  1 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_010_base_data_reco_20190418-151957-753.xlsx
    : loading data (  2 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_009_base_data_reco_20190418-151957-692.xlsx
    : loading data (  3 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_008_base_data_reco_20190418-151957-630.xlsx
    : loading data (  4 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_007_base_data_reco_20190418-151957-571.xlsx
    : loading data (  5 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_006_base_data_reco_20190418-151957-505.xlsx
    : loading data (  6 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_005_base_data_reco_20190418-151957-440.xlsx
    : loading data (  7 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_004_base_data_reco_20190418-151957-381.xlsx
    : loading data (  8 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_003_base_data_reco_20190418-151957-306.xlsx
    : loading data (  9 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_002_base_data_reco_20190418-151957-243.xlsx
    : loading data ( 10 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_001_base_data_reco_20190418-151957-177.xlsx
    : loading data ( 11 ) from: ./data_in/from_jdo_wv_2_pop/resp_clean/st0001_form_000_base_data_reco_20190418-151957-091.xlsx
    :
    :END:

** Proc 01: Cleanup, reshape and concatenate
*** DONE Checkup (shape)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

print( "="*75 )
print( "number of dict items: " + str( len( st0001_form_001_base ) ) )

print( "="*75 )
for key, val in st0001_form_001_base.items():
    print( f"{key:>2d}: " + str( val[ "data" ][ "orig" ].shape ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[137]:
    # output
    : ===========================================================================
    : number of dict items: 12
    : ===========================================================================
    :  0: (26, 111)
    :  1: (25, 111)
    :  2: (25, 111)
    :  3: (26, 111)
    :  4: (24, 111)
    :  5: (27, 114)
    :  6: (27, 114)
    :  7: (23, 114)
    :  8: (33, 114)
    :  9: (26, 114)
    : 10: (27, 114)
    : 11: (23, 114)
    :
    :END:

*** DONE Check columns in form responses

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

tmp_idx = 4

print( str( st0001_form_001_base[ tmp_idx ][ "data" ][ "orig" ].columns.values ) )


    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[138]:
    # output
    : ['Unnamed: 0' 'KDX' 'YOB' 'GEN' 'ATTN' 'POL' 'SLI' 'EDU' 'LNG'
    :  'WS_chorukać' 'WS_socafiać' 'WS_grokunek' 'WS_chacynek' 'WS_bakdagra'
    :  'WS_mocetła' 'WS_nazycieć' 'WS_firdazja' 'WS_ociamać' 'WS_nichipić'
    :  'WS_skaboskić' 'WS_szabostić' 'WS_kanwijać' 'WS_kazychie' 'WS_rolibia'
    :  'WS_szaboznąć' 'WS_motaśmać' 'WS_dotaśmać' 'WS_rocezać' 'WS_omukawić'
    :  'WS_mocedać' 'WS_rorekia' 'WS_syparywać' 'WS_seracesza' 'WS_dotaspód'
    :  'WS_sypacykać' 'WS_seracezać' 'WS_czaboszić' 'WS_cobujać' 'WS_tkwicować'
    :  'WS_nichimit' 'WS_radnawać' 'WS_rocefać' 'WS_seracehać' 'WA_chorukać'
    :  'WA_socafiać' 'WA_grokunek' 'WA_chacynek' 'WA_bakdagra' 'WA_mocetła'
    :  'WA_nazycieć' 'WA_firdazja' 'WA_ociamać' 'WA_nichipić' 'WA_skaboskić'
    :  'WA_szabostić' 'WA_kanwijać' 'WA_kazychie' 'WA_rolibia' 'WA_szaboznąć'
    :  'WA_motaśmać' 'WA_dotaśmać' 'WA_rocezać' 'WA_omukawić' 'WA_mocedać'
    :  'WA_rorekia' 'WA_syparywać' 'WA_seracesza' 'WA_dotaspód' 'WA_sypacykać'
    :  'WA_seracezać' 'WA_czaboszić' 'WA_cobujać' 'WA_tkwicować' 'WA_nichimit'
    :  'WA_radnawać' 'WA_rocefać' 'WA_seracehać' 'WG_chorukać' 'WG_socafiać'
    :  'WG_grokunek' 'WG_chacynek' 'WG_bakdagra' 'WG_mocetła' 'WG_nazycieć'
    :  'WG_firdazja' 'WG_ociamać' 'WG_nichipić' 'WG_skaboskić' 'WG_szabostić'
    :  'WG_kanwijać' 'WG_kazychie' 'WG_rolibia' 'WG_szaboznąć' 'WG_motaśmać'
    :  'WG_dotaśmać' 'WG_rocezać' 'WG_omukawić' 'WG_mocedać' 'WG_rorekia'
    :  'WG_syparywać' 'WG_seracesza' 'WG_dotaspód' 'WG_sypacykać' 'WG_seracezać'
    :  'WG_czaboszić' 'WG_cobujać' 'WG_tkwicować' 'WG_nichimit' 'WG_radnawać'
    :  'WG_rocefać' 'WG_seracehać']
    :
    :END:


*** DONE Drop some columns in form responses

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

print( "="*75 )
for key in st0001_form_001_base.keys():
    print( "processing: " + str( key ) )
    st0001_form_001_base[key][ "data" ][ "orig" ].drop( columns=[ "Unnamed: 0", "KDX", "YOB", "GEN", "ATTN", "POL", "SLI", "EDU", "LNG", ], inplace=True, errors="raise", )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[139]:
    # output
    : ===========================================================================
    : processing: 0
    : processing: 1
    : processing: 2
    : processing: 3
    : processing: 4
    : processing: 5
    : processing: 6
    : processing: 7
    : processing: 8
    : processing: 9
    : processing: 10
    : processing: 11
    :
    :END:

*** DONE Check collumns in form responses

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

tmp_idx = 4

print( str( st0001_form_001_base[ tmp_idx ][ "data" ][ "orig" ].columns.values ) )


    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[140]:
    # output
    : ['WS_chorukać' 'WS_socafiać' 'WS_grokunek' 'WS_chacynek' 'WS_bakdagra'
    :  'WS_mocetła' 'WS_nazycieć' 'WS_firdazja' 'WS_ociamać' 'WS_nichipić'
    :  'WS_skaboskić' 'WS_szabostić' 'WS_kanwijać' 'WS_kazychie' 'WS_rolibia'
    :  'WS_szaboznąć' 'WS_motaśmać' 'WS_dotaśmać' 'WS_rocezać' 'WS_omukawić'
    :  'WS_mocedać' 'WS_rorekia' 'WS_syparywać' 'WS_seracesza' 'WS_dotaspód'
    :  'WS_sypacykać' 'WS_seracezać' 'WS_czaboszić' 'WS_cobujać' 'WS_tkwicować'
    :  'WS_nichimit' 'WS_radnawać' 'WS_rocefać' 'WS_seracehać' 'WA_chorukać'
    :  'WA_socafiać' 'WA_grokunek' 'WA_chacynek' 'WA_bakdagra' 'WA_mocetła'
    :  'WA_nazycieć' 'WA_firdazja' 'WA_ociamać' 'WA_nichipić' 'WA_skaboskić'
    :  'WA_szabostić' 'WA_kanwijać' 'WA_kazychie' 'WA_rolibia' 'WA_szaboznąć'
    :  'WA_motaśmać' 'WA_dotaśmać' 'WA_rocezać' 'WA_omukawić' 'WA_mocedać'
    :  'WA_rorekia' 'WA_syparywać' 'WA_seracesza' 'WA_dotaspód' 'WA_sypacykać'
    :  'WA_seracezać' 'WA_czaboszić' 'WA_cobujać' 'WA_tkwicować' 'WA_nichimit'
    :  'WA_radnawać' 'WA_rocefać' 'WA_seracehać' 'WG_chorukać' 'WG_socafiać'
    :  'WG_grokunek' 'WG_chacynek' 'WG_bakdagra' 'WG_mocetła' 'WG_nazycieć'
    :  'WG_firdazja' 'WG_ociamać' 'WG_nichipić' 'WG_skaboskić' 'WG_szabostić'
    :  'WG_kanwijać' 'WG_kazychie' 'WG_rolibia' 'WG_szaboznąć' 'WG_motaśmać'
    :  'WG_dotaśmać' 'WG_rocezać' 'WG_omukawić' 'WG_mocedać' 'WG_rorekia'
    :  'WG_syparywać' 'WG_seracesza' 'WG_dotaspód' 'WG_sypacykać' 'WG_seracezać'
    :  'WG_czaboszić' 'WG_cobujać' 'WG_tkwicować' 'WG_nichimit' 'WG_radnawać'
    :  'WG_rocefać' 'WG_seracehać']
    :
    :END:

*** DONE Test responses concatenation

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

result = pd.concat([st0001_form_001_base[4][ "data" ][ "orig" ], st0001_form_001_base[5][ "data" ][ "orig" ]], axis=1,)

print(result.shape)
print(result.head(n=26))

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[141]:
    # output
    : (27, 207)
    :     WS_chorukać  WS_socafiać  WS_grokunek  WS_chacynek  WS_bakdagra  WS_mocetła  WS_nazycieć  WS_firdazja  WS_ociamać  WS_nichipić  ...  WG_pocepać  WG_dzaboskić  WG_szabognąć  WG_plwocić  WG_grocunek  WG_kunzyście  WG_soboszić  WG_grocukać  WG_mocejać  WG_sotaftać
    : 0           3.0          2.0          2.0          3.0          1.0         2.0          1.0          1.0         4.0          3.0  ...           0             1             0           0            1             2            1            0           0            0
    : 1           4.0          2.0          4.0          1.0          0.0         1.0          3.0          4.0         4.0          4.0  ...           0             0             0           0            1             2            0            0           0            0
    : 2           4.0          1.0          4.0          4.0          2.0         4.0          2.0          1.0         4.0          3.0  ...           0             0             0           0            1             2            0            0           0            0
    : 3           2.0          0.0          2.0          3.0          0.0         0.0          0.0          0.0         2.0          0.0  ...           0             0             0           0            1             2            0            0           0            0
    : 4           4.0          1.0          3.0          3.0          1.0         1.0          2.0          3.0         4.0          1.0  ...           0             0             0           0            1             2            0            0           0            0
    : 5           1.0          1.0          2.0          3.0          0.0         2.0          1.0          0.0         2.0          1.0  ...           0             0             0           0            1             2            0            0           0            0
    : 6           1.0          0.0          0.0          2.0          1.0         1.0          0.0          2.0         1.0          2.0  ...           0             4             0           0            1             2            1            0           0            0
    : 7           3.0          1.0          2.0          1.0          1.0         2.0          1.0          1.0         2.0          4.0  ...           0             0             0           0            1             2            0            0           0            0
    : 8           0.0          0.0          0.0          0.0          0.0         0.0          0.0          0.0         0.0          0.0  ...           0             0             0           0            1             2            0            0           0            0
    : 9           4.0          2.0          2.0          3.0          4.0         3.0          1.0          3.0         1.0          0.0  ...           0             0             0           0            1             1            0            0           0            0
    : 10          2.0          2.0          3.0          3.0          0.0         2.0          2.0          0.0         3.0          2.0  ...           4             1             0           0            4             4            4            0           4            4
    : 11          3.0          0.0          3.0          2.0          0.0         1.0          2.0          2.0         2.0          0.0  ...           0             0             0           0            1             2            0            0           0            0
    : 12          3.0          1.0          4.0          3.0          0.0         1.0          3.0          3.0         3.0          2.0  ...           0             1             0           0            1             3            1            0           0            0
    : 13          4.0          1.0          4.0          3.0          2.0         2.0          1.0          2.0         3.0          0.0  ...           4             1             4           4            1             1            3            1           0            1
    : 14          2.0          0.0          3.0          3.0          0.0         2.0          1.0          3.0         1.0          2.0  ...           0             0             0           0            1             1            0            0           0            0
    : 15          3.0          1.0          3.0          4.0          1.0         3.0          2.0          4.0         3.0          3.0  ...           0             0             0           0            1             2            0            0           0            0
    : 16          0.0          2.0          0.0          1.0          2.0         1.0          3.0          0.0         1.0          3.0  ...           0             0             0           0            1             1            0            0           0            0
    : 17          3.0          1.0          0.0          4.0          0.0         1.0          2.0          0.0         4.0          3.0  ...           0             0             0           1            1             2            0            0           0            0
    : 18          2.0          0.0          3.0          3.0          0.0         2.0          2.0          0.0         3.0          0.0  ...           0             1             0           0            1             2            1            0           0            0
    : 19          1.0          2.0          2.0          3.0          0.0         3.0          2.0          2.0         1.0          2.0  ...           0             0             0           0            1             3            0            0           0            0
    : 20          3.0          1.0          2.0          3.0          0.0         2.0          2.0          0.0         3.0          1.0  ...           0             0             0           0            1             3            0            0           0            0
    : 21          1.0          1.0          0.0          1.0          0.0         1.0          1.0          1.0         1.0          1.0  ...           0             0             0           0            1             2            0            0           0            0
    : 22          0.0          1.0          1.0          0.0          0.0         2.0          2.0          2.0         0.0          1.0  ...           0             0             0           0            1             3            0            0           0            0
    : 23          4.0          4.0          3.0          4.0          2.0         3.0          3.0          2.0         3.0          3.0  ...           0             4             0           0            1             0            0            0           0            4
    : 24          NaN          NaN          NaN          NaN          NaN         NaN          NaN          NaN         NaN          NaN  ...           0             0             0           0            1             3            0            0           0            0
    : 25          NaN          NaN          NaN          NaN          NaN         NaN          NaN          NaN         NaN          NaN  ...           0             0             0           0            1             2            0            4           0            0
    :
    : [26 rows x 207 columns]
    :
    :END:

*** DONE Concatenate responses

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0301_forms_cat = pd.DataFrame()

print( "="*75 )
for key in st0001_form_001_base.keys():
    print( "processing: " + str( key ) )

    st0301_forms_cat = pd.concat([ st0301_forms_cat, st0001_form_001_base[key][ "data" ][ "orig" ]], axis=1,)


print( "="*75 )
print(st0301_forms_cat.shape)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[142]:
    # output
    : ===========================================================================
    : processing: 0
    : processing: 1
    : processing: 2
    : processing: 3
    : processing: 4
    : processing: 5
    : processing: 6
    : processing: 7
    : processing: 8
    : processing: 9
    : processing: 10
    : processing: 11
    : ===========================================================================
    : (33, 1245)
    :
    :END:

*** DONE Reshape (=wide_to_long=)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0301_forms_cat["id"] = st0301_forms_cat.index

st0301_forms_cat_long = pd.wide_to_long(st0301_forms_cat, ["WS", "WA", "WG"], i="id", j="WORD", suffix="(\d+|\w+)", sep="_").copy()

print( st0301_forms_cat_long.shape )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[143]:
    # output
    : (13695, 3)
    :
    :END:

*** DONE Unstack

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0301_forms_cat_long_unstack = st0301_forms_cat_long.unstack(-1).transpose().unstack(0).copy()

st0301_forms_cat_long_unstack.columns = st0301_forms_cat_long_unstack.columns.map( "{0[1]}_{0[0]:03d}".format )

st0301_forms_cat_long_unstack.sort_index( axis=1, inplace=True )

print( st0301_forms_cat_long_unstack.shape )

print( st0301_forms_cat_long_unstack.columns )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[144]:
    # output
    : (415, 99)
    : Index(['WA_000', 'WA_001', 'WA_002', 'WA_003', 'WA_004', 'WA_005', 'WA_006',
    :        'WA_007', 'WA_008', 'WA_009', 'WA_010', 'WA_011', 'WA_012', 'WA_013',
    :        'WA_014', 'WA_015', 'WA_016', 'WA_017', 'WA_018', 'WA_019', 'WA_020',
    :        'WA_021', 'WA_022', 'WA_023', 'WA_024', 'WA_025', 'WA_026', 'WA_027',
    :        'WA_028', 'WA_029', 'WA_030', 'WA_031', 'WA_032', 'WG_000', 'WG_001',
    :        'WG_002', 'WG_003', 'WG_004', 'WG_005', 'WG_006', 'WG_007', 'WG_008',
    :        'WG_009', 'WG_010', 'WG_011', 'WG_012', 'WG_013', 'WG_014', 'WG_015',
    :        'WG_016', 'WG_017', 'WG_018', 'WG_019', 'WG_020', 'WG_021', 'WG_022',
    :        'WG_023', 'WG_024', 'WG_025', 'WG_026', 'WG_027', 'WG_028', 'WG_029',
    :        'WG_030', 'WG_031', 'WG_032', 'WS_000', 'WS_001', 'WS_002', 'WS_003',
    :        'WS_004', 'WS_005', 'WS_006', 'WS_007', 'WS_008', 'WS_009', 'WS_010',
    :        'WS_011', 'WS_012', 'WS_013', 'WS_014', 'WS_015', 'WS_016', 'WS_017',
    :        'WS_018', 'WS_019', 'WS_020', 'WS_021', 'WS_022', 'WS_023', 'WS_024',
    :        'WS_025', 'WS_026', 'WS_027', 'WS_028', 'WS_029', 'WS_030', 'WS_031',
    :        'WS_032'],
    :       dtype='object')
    :
    :END:

*** DONE Transpose

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0301_forms_cat_long_unstack_trans = st0301_forms_cat_long_unstack.transpose(copy=True)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[145]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

print( st0301_forms_cat_long_unstack.index )
print( st0301_forms_cat_long_unstack.columns )

print( st0301_forms_cat_long_unstack_trans.index )
print( st0301_forms_cat_long_unstack_trans.columns )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[146]:
    # output
    : Index(['aciabać', 'aciadać', 'aciadłe', 'aciagać', 'aciajać', 'aciakać',
    :        'acialać', 'aciamać', 'aciapłe', 'aciasać',
    :        ...
    :        'zapumkić', 'zapumnić', 'zapumtek', 'zwlocić', 'zwlopie', 'łaregać',
    :        'łarekia', 'łarerać', 'łarezać', 'łareżać'],
    :       dtype='object', name='WORD', length=415)
    : Index(['WA_000', 'WA_001', 'WA_002', 'WA_003', 'WA_004', 'WA_005', 'WA_006',
    :        'WA_007', 'WA_008', 'WA_009', 'WA_010', 'WA_011', 'WA_012', 'WA_013',
    :        'WA_014', 'WA_015', 'WA_016', 'WA_017', 'WA_018', 'WA_019', 'WA_020',
    :        'WA_021', 'WA_022', 'WA_023', 'WA_024', 'WA_025', 'WA_026', 'WA_027',
    :        'WA_028', 'WA_029', 'WA_030', 'WA_031', 'WA_032', 'WG_000', 'WG_001',
    :        'WG_002', 'WG_003', 'WG_004', 'WG_005', 'WG_006', 'WG_007', 'WG_008',
    :        'WG_009', 'WG_010', 'WG_011', 'WG_012', 'WG_013', 'WG_014', 'WG_015',
    :        'WG_016', 'WG_017', 'WG_018', 'WG_019', 'WG_020', 'WG_021', 'WG_022',
    :        'WG_023', 'WG_024', 'WG_025', 'WG_026', 'WG_027', 'WG_028', 'WG_029',
    :        'WG_030', 'WG_031', 'WG_032', 'WS_000', 'WS_001', 'WS_002', 'WS_003',
    :        'WS_004', 'WS_005', 'WS_006', 'WS_007', 'WS_008', 'WS_009', 'WS_010',
    :        'WS_011', 'WS_012', 'WS_013', 'WS_014', 'WS_015', 'WS_016', 'WS_017',
    :        'WS_018', 'WS_019', 'WS_020', 'WS_021', 'WS_022', 'WS_023', 'WS_024',
    :        'WS_025', 'WS_026', 'WS_027', 'WS_028', 'WS_029', 'WS_030', 'WS_031',
    :        'WS_032'],
    :       dtype='object')
    : Index(['WA_000', 'WA_001', 'WA_002', 'WA_003', 'WA_004', 'WA_005', 'WA_006',
    :        'WA_007', 'WA_008', 'WA_009', 'WA_010', 'WA_011', 'WA_012', 'WA_013',
    :        'WA_014', 'WA_015', 'WA_016', 'WA_017', 'WA_018', 'WA_019', 'WA_020',
    :        'WA_021', 'WA_022', 'WA_023', 'WA_024', 'WA_025', 'WA_026', 'WA_027',
    :        'WA_028', 'WA_029', 'WA_030', 'WA_031', 'WA_032', 'WG_000', 'WG_001',
    :        'WG_002', 'WG_003', 'WG_004', 'WG_005', 'WG_006', 'WG_007', 'WG_008',
    :        'WG_009', 'WG_010', 'WG_011', 'WG_012', 'WG_013', 'WG_014', 'WG_015',
    :        'WG_016', 'WG_017', 'WG_018', 'WG_019', 'WG_020', 'WG_021', 'WG_022',
    :        'WG_023', 'WG_024', 'WG_025', 'WG_026', 'WG_027', 'WG_028', 'WG_029',
    :        'WG_030', 'WG_031', 'WG_032', 'WS_000', 'WS_001', 'WS_002', 'WS_003',
    :        'WS_004', 'WS_005', 'WS_006', 'WS_007', 'WS_008', 'WS_009', 'WS_010',
    :        'WS_011', 'WS_012', 'WS_013', 'WS_014', 'WS_015', 'WS_016', 'WS_017',
    :        'WS_018', 'WS_019', 'WS_020', 'WS_021', 'WS_022', 'WS_023', 'WS_024',
    :        'WS_025', 'WS_026', 'WS_027', 'WS_028', 'WS_029', 'WS_030', 'WS_031',
    :        'WS_032'],
    :       dtype='object')
    : Index(['aciabać', 'aciadać', 'aciadłe', 'aciagać', 'aciajać', 'aciakać',
    :        'acialać', 'aciamać', 'aciapłe', 'aciasać',
    :        ...
    :        'zapumkić', 'zapumnić', 'zapumtek', 'zwlocić', 'zwlopie', 'łaregać',
    :        'łarekia', 'łarerać', 'łarezać', 'łareżać'],
    :       dtype='object', name='WORD', length=415)
    :
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0301.py

DEMO_MODE = False

if not DEMO_MODE:
    df_to_xlsx( df_data=st0301_forms_cat_long_unstack,       df_name="st0301_forms_cat_long_unstack",       df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=st0301_forms_cat_long_unstack_trans, df_name="st0301_forms_cat_long_unstack_trans", df_path="data_out", add_time=False, verbose=1, )
    print( "="*75 )
    print("Saved *.xlsx")
else:
    print("*** Not saving any *.xlsx files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[147]:
    # output
    : Saving DataFrame as: data_out/st0301_forms_cat_long_unstack.xlsx
    : Saving DataFrame as: data_out/st0301_forms_cat_long_unstack_trans.xlsx
    : ===========================================================================
    : Saved *.xlsx
    :
    :END:

* DONE Stage 0302: Merge words
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st3002_wvals = pd.read_excel( "./data_in/from_jdo_wv_2_pop/wv2_pop_sel_20190426001.xlsx"                               , ignore_index=True, )
st0302_forms = pd.read_excel( "./data_out/st0301_forms_cat_long_unstack.xlsx"                                          , ignore_index=True, )
st0302_words = pd.read_excel( "./data_out/s0077_words_levenshtein20_eqLen_illegal_old20close_old20range_lenRange.xlsx" , ignore_index=True, )

print( "="*75 )
print( "st3002_wvals shape:" )
print( "-"*75 )
print( st3002_wvals.shape )

print( "="*75 )
print( "st0302_forms shape:" )
print( "-"*75 )
print( st0302_forms.shape )

print( "="*75 )
print( "st0302_words shape:" )
print( "-"*75 )
print( st0302_words.shape )


print( "="*75 )
print( "st3002_wvals columns:" )
print( "-"*75 )
print( st3002_wvals.columns.values )

print( "="*75 )
print( "st0302_forms columns:" )
print( "-"*75 )
print( st0302_forms.columns.values )

print( "="*75 )
print( "st0302_words columns:" )
print( "-"*75 )
print( st0302_words.columns.values )


    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[128]:
    # output
    : ===========================================================================
    : st3002_wvals shape:
    : ---------------------------------------------------------------------------
    : (415, 34)
    : ===========================================================================
    : st0302_forms shape:
    : ---------------------------------------------------------------------------
    : (415, 100)
    : ===========================================================================
    : st0302_words shape:
    : ---------------------------------------------------------------------------
    : (2127, 14)
    : ===========================================================================
    : st3002_wvals columns:
    : ---------------------------------------------------------------------------
    : ['WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS' 'SEM_WS' 'T_TEST_WS' 'P_VALUE_WS'
    :  'CONF_95_dol' 'CONF_95_gora_WS' 'ACCEPTANCE_WS' 'ACC_MEAN_WS'
    :  'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA' 'T_TEST_WA' 'P_VALUE_WA'
    :  'CONF_95_dol_WA' 'CONF_95_gora_WA' 'ACCEPTANCE_WA' 'ACC_MEAN_WA'
    :  'WS+WA_WAR' 'SYLL_START' 'SYLL_ULTIM' 'SYLL' 'CHAR_COUNT' 'SYLL_COUNT'
    :  'OLD_20' 'SYLL_FIRST' 'SYLL_from_1st_1st' 'COUNT_1st_1st'
    :  'SYLL_from_ANY_1st' 'COUNT_ANY_1st']
    : ===========================================================================
    : st0302_forms columns:
    : ---------------------------------------------------------------------------
    : ['WORD' 'WA_000' 'WA_001' 'WA_002' 'WA_003' 'WA_004' 'WA_005' 'WA_006'
    :  'WA_007' 'WA_008' 'WA_009' 'WA_010' 'WA_011' 'WA_012' 'WA_013' 'WA_014'
    :  'WA_015' 'WA_016' 'WA_017' 'WA_018' 'WA_019' 'WA_020' 'WA_021' 'WA_022'
    :  'WA_023' 'WA_024' 'WA_025' 'WA_026' 'WA_027' 'WA_028' 'WA_029' 'WA_030'
    :  'WA_031' 'WA_032' 'WG_000' 'WG_001' 'WG_002' 'WG_003' 'WG_004' 'WG_005'
    :  'WG_006' 'WG_007' 'WG_008' 'WG_009' 'WG_010' 'WG_011' 'WG_012' 'WG_013'
    :  'WG_014' 'WG_015' 'WG_016' 'WG_017' 'WG_018' 'WG_019' 'WG_020' 'WG_021'
    :  'WG_022' 'WG_023' 'WG_024' 'WG_025' 'WG_026' 'WG_027' 'WG_028' 'WG_029'
    :  'WG_030' 'WG_031' 'WG_032' 'WS_000' 'WS_001' 'WS_002' 'WS_003' 'WS_004'
    :  'WS_005' 'WS_006' 'WS_007' 'WS_008' 'WS_009' 'WS_010' 'WS_011' 'WS_012'
    :  'WS_013' 'WS_014' 'WS_015' 'WS_016' 'WS_017' 'WS_018' 'WS_019' 'WS_020'
    :  'WS_021' 'WS_022' 'WS_023' 'WS_024' 'WS_025' 'WS_026' 'WS_027' 'WS_028'
    :  'WS_029' 'WS_030' 'WS_031' 'WS_032']
    : ===========================================================================
    : st0302_words columns:
    : ---------------------------------------------------------------------------
    : ['Unnamed: 0' 'SYLL_START' 'SYLL_ULTIM_nouns' 'SYLL_ULTIM_verbs'
    :  'SYLL_nouns' 'SYLL_verbs' 'WORD_nouns' 'WORD_verbs' 'CHAR_COUNT_nouns'
    :  'CHAR_COUNT_verbs' 'SYLL_COUNT_nouns' 'SYLL_COUNT_verbs' 'OLD_20_nouns'
    :  'OLD_20_verbs']
    :
    :END:

** Proc 01: Construct (split) =st0302_nouns= and =st0302_verbs= from =st0302_words=
*** DONE Split (nouns and verbs)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0302_nouns = st0302_words[["WORD_nouns", "SYLL_START", "SYLL_ULTIM_nouns", "SYLL_nouns", "CHAR_COUNT_nouns", "SYLL_COUNT_nouns", "OLD_20_nouns", ]].copy()
st0302_verbs = st0302_words[["WORD_verbs", "SYLL_START", "SYLL_ULTIM_verbs", "SYLL_verbs", "CHAR_COUNT_verbs", "SYLL_COUNT_verbs", "OLD_20_verbs", ]].copy()

st0302_nouns.columns = ["WORD", "SYLL_START", "SYLL_ULTIM", "SYLL", "CHAR_COUNT", "SYLL_COUNT", "OLD_20", ]
st0302_verbs.columns = ["WORD", "SYLL_START", "SYLL_ULTIM", "SYLL", "CHAR_COUNT", "SYLL_COUNT", "OLD_20", ]

strRecodeMap = {
    "v": 0,
    "n": 1,
    "a": 2,
    "o": 3,
    "u": 4,
}

st0302_nouns[ "CLASS" ] = 1
st0302_verbs[ "CLASS" ] = 0

print( st0302_nouns.shape )
print( st0302_verbs.shape )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[129]:
    # output
    : (2127, 8)
    : (2127, 8)
    :
    :END:

*** DONE Merge (longify)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0302_words_longs = pd.concat([
    st0302_nouns,
    st0302_verbs,
], axis=0, ignore_index=False, sort=False, ).reset_index( drop=True )


st0302_words_longs.drop_duplicates( subset=[ "WORD", ], keep="first", inplace=True )


print( st0302_words_longs.shape )

print( st0302_words_longs.columns.values )
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[130]:
    # output
    : (1119, 8)
    : ['WORD' 'SYLL_START' 'SYLL_ULTIM' 'SYLL' 'CHAR_COUNT' 'SYLL_COUNT'
    :  'OLD_20' 'CLASS']
    :
    :END:

** Proc 02: Checkups
*** DONE Checkup =st3002_wvals=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

df_list = [  st3002_wvals,  ]
df_info = [ "st3002_wvals", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[131]:
    # output
    : ===========================================================================
    : st3002_wvals
    : ===========================================================================
    : idx count: 415
    : row count: 34
    : ---------------------------------------------------------------------------
    :         WORD  GC_%_pop  GC    AVG_WS     SD_WS    SEM_WS  T_TEST_WS    P_VALUE_WS  CONF_95_dol  CONF_95_gora_WS  ...  SYLL_ULTIM        SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  SYLL_FIRST  SYLL_from_1st_1st  COUNT_1st_1st  SYLL_from_ANY_1st  COUNT_ANY_1st
    : 0    aciabać      86.4   0  1.545455  0.911685  0.194372  -7.483315  2.361171e-07    -1.858764        -1.050327  ...         bać   a-cia-bać           7           3  2.619048           2                  2    125362095.0                  2    126292662.0
    : 1    aciadać     100.0   0  1.458333  1.284664  0.262231  -5.879041  5.425080e-06    -2.084133        -0.999201  ...         gać   a-cia-gać           7           3  2.428571           2                  2    125362095.0                  2    126292662.0
    : 2    aciagać      91.7   0  1.708333  1.267629  0.258754  -4.991876  4.759227e-05    -1.826940        -0.756394  ...         kać   a-cia-kać           7           3  2.000000           2                  2    125362095.0                  2    126292662.0
    : 3    aciajać      81.0   0  1.285714  1.419255  0.309707  -5.535187  2.034692e-05    -2.360323        -1.068248  ...         lać   a-cia-lać           7           3  2.619048           2                  2    125362095.0                  2    126292662.0
    : 4    aciakać      85.2   0  1.407407  1.185141  0.228080  -6.982592  2.052869e-07    -2.061419        -1.123767  ...         sać   a-cia-sać           7           3  2.000000           2                  2    125362095.0                  2    126292662.0
    : 5    acialać      95.2   0  1.285714  1.383577  0.301921  -5.677923  1.477835e-05    -2.344082        -1.084489  ...         tać   a-cia-tać           7           3  2.285714           2                  2    125362095.0                  2    126292662.0
    : 6    aciasać      90.9   0  1.772727  1.066004  0.227273  -5.400000  2.345596e-05    -1.699912        -0.754633  ...         gra  bak-da-gra           8           3  2.952381         bak                bak       215584.0                bak       259397.0
    : 7    aciatać      95.5   0  1.590909  1.053750  0.224660  -6.272095  3.205989e-06    -1.876298        -0.941884  ...         kła  bap-ka-kła           8           3  2.952381         bap                NaN            NaN                NaN            NaN
    : 8    aciazać      88.5   0  1.538462  1.028816  0.201767  -7.243682  1.367348e-07    -1.877086        -1.045991  ...         łek  baż-la-łek           8           3  2.857143         baż                NaN            NaN                NaN            NaN
    : 9    aciażać      92.3   0  1.692308  1.319674  0.258809  -5.052726  3.251989e-05    -1.840720        -0.774665  ...         kać  cha-cy-kać           8           3  2.857143         cha                cha      2758686.0                cha     10221870.0
    : 10  bakdagra      80.0   1  0.700000  1.080935  0.241704  -9.515753  1.163660e-08    -2.805893        -1.794107  ...         cać  cho-bu-cać           8           3  3.000000         cho                cho     11266857.0                cho     30634627.0
    : 11  bakdakła      90.9   1  1.454545  0.962500  0.205206  -7.531243  2.138153e-07    -1.972203        -1.118706  ...         jać  cho-bu-jać           8           3  2.952381         cho                cho     11266857.0                cho     30634627.0
    : 12  bakdawić      92.6   0  1.222222  1.154701  0.222222  -8.000000  1.768918e-08    -2.234562        -1.320993  ...         nek  cho-bu-nek           8           3  2.904762         cho                cho     11266857.0                cho     30634627.0
    : 13  bakdazja      95.8   1  1.625000  1.172604  0.239357  -5.744563  7.507329e-06    -1.870147        -0.879853  ...         cać   co-bu-cać           7           3  2.714286          co                 co     38401419.0                 co     47398988.0
    : 14  bapkakła      83.3   1  1.083333  1.138904  0.232478  -8.244517  2.548982e-08    -2.397583        -1.435750  ...         kać   co-bu-kać           7           3  2.285714          co                 co     38401419.0                 co     47398988.0
    :
    : [15 rows x 34 columns]
    : ---------------------------------------------------------------------------
    :          WORD  GC_%_pop  GC    AVG_WS     SD_WS    SEM_WS  T_TEST_WS    P_VALUE_WS  CONF_95_dol  CONF_95_gora_WS  ...  SYLL_ULTIM         SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  SYLL_FIRST  SYLL_from_1st_1st  COUNT_1st_1st  SYLL_from_ANY_1st  COUNT_ANY_1st
    : 400  udrkujać      56.5   0  1.086957  1.124643  0.234504  -8.157818  4.261729e-08    -2.399376        -1.426711  ...        szić   so-bo-szić           8           3  3.000000          so                 so     17484728.0                 so     50450183.0
    : 401  wazychie      59.1   1  1.136364  0.990212  0.211114  -8.827636  1.640610e-08    -2.302672        -1.424601  ...        skić  spo-bo-skić           9           3  3.000000         spo                spo     24891076.0                spo     32716259.0
    : 402  wazycieć      66.7   0  0.904762  1.091089  0.238095  -8.800000  2.593236e-08    -2.591896        -1.598580  ...        stić  spo-bo-stić           9           3  3.380952         spo                spo     24891076.0                spo     32716259.0
    : 403  wazymieć      73.9   0  1.739130  0.963771  0.200960  -6.274230  2.582386e-06    -1.677635        -0.844104  ...        rzod  sta-bo-rzod           9           3  3.000000         sta                sta     25279519.0                sta     76021063.0
    : 404  wazystie      54.2   1  1.125000  1.226962  0.250452  -7.486450  1.313218e-07    -2.393100        -1.356900  ...        skić  sta-bo-skić           9           3  3.000000         sta                sta     25279519.0                sta     76021063.0
    : 405  wazyśmie      25.9   1  1.703704  1.436203  0.276397  -4.689974  7.619073e-05    -1.864439        -0.728153  ...        stić  sta-bo-stić           9           3  3.000000         sta                sta     25279519.0                sta     76021063.0
    : 406  wazyśnie       8.7   1  1.565217  0.895752  0.186777  -7.681787  1.150304e-07    -1.822135        -1.047430  ...        chić  sza-bo-chić           9           3  3.142857         sza                sza      2559450.0                sza     19595778.0
    : 407  ważychie      50.0   1  1.227273  1.020356  0.217541  -8.148951  6.119058e-08    -2.225128        -1.320327  ...        skić  sza-bo-skić           9           3  3.000000         sza                sza      2559450.0                sza     19595778.0
    : 408  ważymieć      43.5   0  2.000000  1.000000  0.208514  -4.795832  8.647545e-05    -1.432432        -0.567568  ...        stić  sza-bo-stić           9           3  3.000000         sza                sza      2559450.0                sza     19595778.0
    : 409  ważystie      25.0   1  1.041667  1.122078  0.229043  -8.550064  1.345257e-08    -2.432145        -1.484522  ...         cać  u-dr-ku-cać           8           4  2.904762           4                  4    106632790.0                  4    106681694.0
    : 410  wowośmać      56.5   0  1.217391  1.126399  0.234870  -7.589754  1.398632e-07    -2.269700        -1.295517  ...        cieć   wa-zy-cieć           8           3  2.666667          wa                 wa      9533161.0                 wa    125617450.0
    : 411   wukałek      95.5   1  2.772727  0.972567  0.207352  -1.096072  2.854586e-01    -0.658485         0.203940  ...        śmie   wa-zy-śmie           8           3  3.000000          wa                 wa      9533161.0                 wa    125617450.0
    : 412   wunanie      57.7   1  1.615385  1.061204  0.208119  -6.652991  5.691348e-07    -1.813245        -0.955986  ...        chie   wa-ży-chie           8           3  2.380952          wa                 wa      9533161.0                 wa    125617450.0
    : 413  zapumnić      95.7   0  2.739130  0.963771  0.200960  -1.298116  2.076922e-01    -0.677635         0.155896  ...         łek    wu-ka-łek           7           3  2.000000          wu                 wu        90846.0                 wu      3888943.0
    : 414   zwlopie      66.7   1  0.916667  1.176460  0.240144  -8.675355  1.038822e-08    -2.580109        -1.586558  ...         pie     zwlo-pie           7           2  2.000000        zwlo                NaN            NaN                NaN            NaN
    :
    : [15 rows x 34 columns]
    :
    :END:

*** DONE Checkup =st0302_forms=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

df_list = [  st0302_forms,  ]
df_info = [ "st0302_forms", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[132]:
    # output
    : ===========================================================================
    : st0302_forms
    : ===========================================================================
    : idx count: 415
    : row count: 100
    : ---------------------------------------------------------------------------
    :        WORD  WA_000  WA_001  WA_002  WA_003  WA_004  WA_005  WA_006  WA_007  WA_008  ...  WS_023  WS_024  WS_025  WS_026  WS_027  WS_028  WS_029  WS_030  WS_031  WS_032
    : 0   aciabać       0       0       1       0       2       4       2       1       2  ...     1.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 1   aciadać       0       3       1       0       3       0       4       2       0  ...     3.0     1.0     1.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 2   aciadłe       2       1       3       2       1       0       3       0       1  ...     0.0     0.0     0.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 3   aciagać       3       0       4       4       4       2       0       0       2  ...     1.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 4   aciajać       2       0       2       0       0       0       0       2       2  ...     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 5   aciakać       0       2       3       2       3       0       3       2       2  ...     1.0     2.0     0.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 6   acialać       0       0       1       0       0       0       0       3       1  ...     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 7   aciamać       0       1       4       2       3       0       3       3       3  ...     0.0     2.0     0.0     2.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 8   aciapłe       2       0       3       2       0       0       0       1       3  ...     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 9   aciasać       1       0       3       3       3       4       4       0       2  ...     2.0     1.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 10  aciasce       1       1       0       0       0       1       0       0       4  ...     0.0     0.0     1.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 11  aciasje       0       0       2       0       2       0       2       2       1  ...     0.0     0.0     0.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 12  aciasme       0       0       3       2       2       0       1       2       2  ...     0.0     0.0     0.0     1.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 13  aciatać       0       0       1       0       2       3       2       1       1  ...     2.0     3.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 14  aciatwe       0       0       0       2       0       2       3       1       3  ...     0.0     3.0     1.0     1.0     NaN     NaN     NaN     NaN     NaN     NaN
    :
    : [15 rows x 100 columns]
    : ---------------------------------------------------------------------------
    :          WORD  WA_000  WA_001  WA_002  WA_003  WA_004  WA_005  WA_006  WA_007  WA_008  ...  WS_023  WS_024  WS_025  WS_026  WS_027  WS_028  WS_029  WS_030  WS_031  WS_032
    : 400   wukawić       4       3       3       3       2       3       1       2       3  ...     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 401   wukałek       2       4       1       0       3       3       3       1       2  ...     4.0     4.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 402   wunanie       2       3       0       1       0       2       2       2       1  ...     2.0     1.0     2.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 403   wunawać       0       2       0       2       4       2       2       1       2  ...     1.0     3.0     2.0     2.0     1.0     0.0     0.0     0.0     2.0     2.0
    : 404   wunawić       2       4       1       2       2       0       1       0       1  ...     1.0     1.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 405  zapumkić       3       2       4       1       2       3       1       1       3  ...     3.0     3.0     1.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 406  zapumnić       4       4       4       3       4       4       4       4       4  ...     2.0     2.0     2.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 407  zapumtek       3       0       3       0       2       2       1       1       1  ...     1.0     3.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 408   zwlocić       3       0       1       0       0       1       1       4       3  ...     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 409   zwlopie       2       0       0       3       3       0       1       0       0  ...     0.0     0.0     0.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 410   łaregać       0       0       1       0       0       1       1       4       1  ...     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 411   łarekia       0       4       1       0       0       2       2       3       2  ...     0.0     0.0     1.0     2.0     NaN     NaN     NaN     NaN     NaN     NaN
    : 412   łarerać       0       2       2       2       0       3       1       2       2  ...     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 413   łarezać       2       1       4       3       4       1       1       1       0  ...     1.0     1.0     NaN     NaN     NaN     NaN     NaN     NaN     NaN     NaN
    : 414   łareżać       1       2       0       0       2       0       3       2       1  ...     1.0     0.0     1.0     0.0     NaN     NaN     NaN     NaN     NaN     NaN
    :
    : [15 rows x 100 columns]
    :
    :END:

*** DONE Checkup =st0302_words=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( st0302_words.columns.values )

print( "="*75 )

df_list = [  st0302_words,  ]
df_info = [ "st0302_words", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[133]:
    # output
    : ['Unnamed: 0' 'SYLL_START' 'SYLL_ULTIM_nouns' 'SYLL_ULTIM_verbs'
    :  'SYLL_nouns' 'SYLL_verbs' 'WORD_nouns' 'WORD_verbs' 'CHAR_COUNT_nouns'
    :  'CHAR_COUNT_verbs' 'SYLL_COUNT_nouns' 'SYLL_COUNT_verbs' 'OLD_20_nouns'
    :  'OLD_20_verbs']
    : ===========================================================================
    : ===========================================================================
    : st0302_words
    : ===========================================================================
    : idx count: 2127
    : row count: 14  ['Unnamed: 0', 'SYLL_START', 'SYLL_ULTIM_nouns', 'SYLL_ULTIM_verbs', 'SYLL_nouns', 'SYLL_verbs', 'WORD_nouns', 'WORD_verbs', 'CHAR_COUNT_nouns', 'CHAR_COUNT_verbs', 'SYLL_COUNT_nouns', 'SYLL_COUNT_verbs', 'OLD_20_nouns', 'OLD_20_verbs']
    : ---------------------------------------------------------------------------
    :     Unnamed: 0 SYLL_START SYLL_ULTIM_nouns SYLL_ULTIM_verbs  SYLL_nouns  SYLL_verbs WORD_nouns WORD_verbs  CHAR_COUNT_nouns  CHAR_COUNT_verbs  SYLL_COUNT_nouns  SYLL_COUNT_verbs  OLD_20_nouns  OLD_20_verbs
    : 0            5      ro-se             znor             chyć  ro-se-znor  ro-se-chyć   roseznor   rosechyć                 8                 8                 3                 3      3.000000      2.904762
    : 1            6      ro-se             znor             pieć  ro-se-znor  ro-se-pieć   roseznor   rosepieć                 8                 8                 3                 3      3.000000      2.809524
    : 2            7      ro-se             znor             kieć  ro-se-znor  ro-se-kieć   roseznor   rosekieć                 8                 8                 3                 3      3.000000      3.000000
    : 3            8      mo-se             znor             chyć  mo-se-znor  mo-se-chyć   moseznor   mosechyć                 8                 8                 3                 3      2.904762      3.000000
    : 4            9      mo-se             znor             pieć  mo-se-znor  mo-se-pieć   moseznor   mosepieć                 8                 8                 3                 3      2.904762      2.857143
    : 5           10      mo-se             znor             kieć  mo-se-znor  mo-se-kieć   moseznor   mosekieć                 8                 8                 3                 3      2.904762      2.952381
    : 6           11      wa-se             znor             chyć  wa-se-znor  wa-se-chyć   waseznor   wasechyć                 8                 8                 3                 3      3.000000      2.952381
    : 7           12      wa-se             znor             pieć  wa-se-znor  wa-se-pieć   waseznor   wasepieć                 8                 8                 3                 3      3.000000      2.904762
    : 8           13      wa-se             znor             kieć  wa-se-znor  wa-se-kieć   waseznor   wasekieć                 8                 8                 3                 3      3.000000      2.952381
    : 9           22      ro-ka             biań             piać  ro-ka-biań  ro-ka-piać   rokabiań   rokapiać                 8                 8                 3                 3      2.666667      2.714286
    : 10          23      ro-ka             biań             ziać  ro-ka-biań  ro-ka-ziać   rokabiań   rokaziać                 8                 8                 3                 3      2.666667      2.714286
    : 11          24      ro-ka             biań             fiać  ro-ka-biań  ro-ka-fiać   rokabiań   rokafiać                 8                 8                 3                 3      2.666667      3.000000
    : 12          25      ro-ka             biań             giać  ro-ka-biań  ro-ka-giać   rokabiań   rokagiać                 8                 8                 3                 3      2.666667      3.000000
    : 13          26      ro-ka             biań             siać  ro-ka-biań  ro-ka-siać   rokabiań   rokasiać                 8                 8                 3                 3      2.666667      2.809524
    : 14          27      ro-ka             biań             tiać  ro-ka-biań  ro-ka-tiać   rokabiań   rokatiać                 8                 8                 3                 3      2.666667      3.000000
    : ---------------------------------------------------------------------------
    :       Unnamed: 0 SYLL_START SYLL_ULTIM_nouns SYLL_ULTIM_verbs  SYLL_nouns  SYLL_verbs WORD_nouns WORD_verbs  CHAR_COUNT_nouns  CHAR_COUNT_verbs  SYLL_COUNT_nouns  SYLL_COUNT_verbs  OLD_20_nouns  OLD_20_verbs
    : 2112        8525      na-zy             stie             mieć  na-zy-stie  na-zy-mieć   nazystie   nazymieć                 8                 8                 3                 3      2.809524      2.714286
    : 2113        8526      na-zy             chie             cieć  na-zy-chie  na-zy-cieć   nazychie   nazycieć                 8                 8                 3                 3      2.571429      2.095238
    : 2114        8527      na-zy             chie             mieć  na-zy-chie  na-zy-mieć   nazychie   nazymieć                 8                 8                 3                 3      2.571429      2.714286
    : 2115        8530      na-zy             śnie             cieć  na-zy-śnie  na-zy-cieć   nazyśnie   nazycieć                 8                 8                 3                 3      2.190476      2.095238
    : 2116        8533      na-zy             śmie             mieć  na-zy-śmie  na-zy-mieć   nazyśmie   nazymieć                 8                 8                 3                 3      2.619048      2.714286
    : 2117        8536      ka-zy             stie             cieć  ka-zy-stie  ka-zy-cieć   kazystie   kazycieć                 8                 8                 3                 3      2.523810      2.761905
    : 2118        8537      ka-zy             stie             mieć  ka-zy-stie  ka-zy-mieć   kazystie   kazymieć                 8                 8                 3                 3      2.523810      2.809524
    : 2119        8538      ka-zy             chie             cieć  ka-zy-chie  ka-zy-cieć   kazychie   kazycieć                 8                 8                 3                 3      2.904762      2.761905
    : 2120        8539      ka-zy             chie             mieć  ka-zy-chie  ka-zy-mieć   kazychie   kazymieć                 8                 8                 3                 3      2.904762      2.809524
    : 2121        8544      ka-zy             śmie             cieć  ka-zy-śmie  ka-zy-cieć   kazyśmie   kazycieć                 8                 8                 3                 3      2.809524      2.761905
    : 2122        8545      ka-zy             śmie             mieć  ka-zy-śmie  ka-zy-mieć   kazyśmie   kazymieć                 8                 8                 3                 3      2.809524      2.809524
    : 2123        8547      ko-ży             stie             mieć  ko-ży-stie  ko-ży-mieć   kożystie   kożymieć                 8                 8                 3                 3      2.857143      2.904762
    : 2124        8548      ko-ży             chie             mieć  ko-ży-chie  ko-ży-mieć   kożychie   kożymieć                 8                 8                 3                 3      2.619048      2.904762
    : 2125        8574      ro-li              pia              sać   ro-li-pia   ro-li-sać    rolipia    rolisać                 7                 7                 3                 3      2.000000      2.000000
    : 2126        8575      ro-li              bia              sać   ro-li-bia   ro-li-sać    rolibia    rolisać                 7                 7                 3                 3      2.333333      2.000000
    :
    :END:

*** DONE Checkup =st0302_nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( st0302_words.columns.values )

print( "="*75 )

df_list = [  st0302_nouns,  ]
df_info = [ "st0302_nouns", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[134]:
    # output
    : ['Unnamed: 0' 'SYLL_START' 'SYLL_ULTIM_nouns' 'SYLL_ULTIM_verbs'
    :  'SYLL_nouns' 'SYLL_verbs' 'WORD_nouns' 'WORD_verbs' 'CHAR_COUNT_nouns'
    :  'CHAR_COUNT_verbs' 'SYLL_COUNT_nouns' 'SYLL_COUNT_verbs' 'OLD_20_nouns'
    :  'OLD_20_verbs']
    : ===========================================================================
    : ===========================================================================
    : st0302_nouns
    : ===========================================================================
    : idx count: 2127
    : row count: 8  ['WORD', 'SYLL_START', 'SYLL_ULTIM', 'SYLL', 'CHAR_COUNT', 'SYLL_COUNT', 'OLD_20', 'CLASS']
    : ---------------------------------------------------------------------------
    :         WORD SYLL_START SYLL_ULTIM        SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  CLASS
    : 0   roseznor      ro-se       znor  ro-se-znor           8           3  3.000000      1
    : 1   roseznor      ro-se       znor  ro-se-znor           8           3  3.000000      1
    : 2   roseznor      ro-se       znor  ro-se-znor           8           3  3.000000      1
    : 3   moseznor      mo-se       znor  mo-se-znor           8           3  2.904762      1
    : 4   moseznor      mo-se       znor  mo-se-znor           8           3  2.904762      1
    : 5   moseznor      mo-se       znor  mo-se-znor           8           3  2.904762      1
    : 6   waseznor      wa-se       znor  wa-se-znor           8           3  3.000000      1
    : 7   waseznor      wa-se       znor  wa-se-znor           8           3  3.000000      1
    : 8   waseznor      wa-se       znor  wa-se-znor           8           3  3.000000      1
    : 9   rokabiań      ro-ka       biań  ro-ka-biań           8           3  2.666667      1
    : 10  rokabiań      ro-ka       biań  ro-ka-biań           8           3  2.666667      1
    : 11  rokabiań      ro-ka       biań  ro-ka-biań           8           3  2.666667      1
    : 12  rokabiań      ro-ka       biań  ro-ka-biań           8           3  2.666667      1
    : 13  rokabiań      ro-ka       biań  ro-ka-biań           8           3  2.666667      1
    : 14  rokabiań      ro-ka       biań  ro-ka-biań           8           3  2.666667      1
    : ---------------------------------------------------------------------------
    :           WORD SYLL_START SYLL_ULTIM        SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  CLASS
    : 2112  nazystie      na-zy       stie  na-zy-stie           8           3  2.809524      1
    : 2113  nazychie      na-zy       chie  na-zy-chie           8           3  2.571429      1
    : 2114  nazychie      na-zy       chie  na-zy-chie           8           3  2.571429      1
    : 2115  nazyśnie      na-zy       śnie  na-zy-śnie           8           3  2.190476      1
    : 2116  nazyśmie      na-zy       śmie  na-zy-śmie           8           3  2.619048      1
    : 2117  kazystie      ka-zy       stie  ka-zy-stie           8           3  2.523810      1
    : 2118  kazystie      ka-zy       stie  ka-zy-stie           8           3  2.523810      1
    : 2119  kazychie      ka-zy       chie  ka-zy-chie           8           3  2.904762      1
    : 2120  kazychie      ka-zy       chie  ka-zy-chie           8           3  2.904762      1
    : 2121  kazyśmie      ka-zy       śmie  ka-zy-śmie           8           3  2.809524      1
    : 2122  kazyśmie      ka-zy       śmie  ka-zy-śmie           8           3  2.809524      1
    : 2123  kożystie      ko-ży       stie  ko-ży-stie           8           3  2.857143      1
    : 2124  kożychie      ko-ży       chie  ko-ży-chie           8           3  2.619048      1
    : 2125   rolipia      ro-li        pia   ro-li-pia           7           3  2.000000      1
    : 2126   rolibia      ro-li        bia   ro-li-bia           7           3  2.333333      1
    :
    :END:

*** DONE Checkup =st0302_verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( st0302_words.columns.values )

print( "="*75 )

df_list = [  st0302_verbs,  ]
df_info = [ "st0302_verbs", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[135]:
    # output
    : ['Unnamed: 0' 'SYLL_START' 'SYLL_ULTIM_nouns' 'SYLL_ULTIM_verbs'
    :  'SYLL_nouns' 'SYLL_verbs' 'WORD_nouns' 'WORD_verbs' 'CHAR_COUNT_nouns'
    :  'CHAR_COUNT_verbs' 'SYLL_COUNT_nouns' 'SYLL_COUNT_verbs' 'OLD_20_nouns'
    :  'OLD_20_verbs']
    : ===========================================================================
    : ===========================================================================
    : st0302_verbs
    : ===========================================================================
    : idx count: 2127
    : row count: 8  ['WORD', 'SYLL_START', 'SYLL_ULTIM', 'SYLL', 'CHAR_COUNT', 'SYLL_COUNT', 'OLD_20', 'CLASS']
    : ---------------------------------------------------------------------------
    :         WORD SYLL_START SYLL_ULTIM        SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  CLASS
    : 0   rosechyć      ro-se       chyć  ro-se-chyć           8           3  2.904762      0
    : 1   rosepieć      ro-se       pieć  ro-se-pieć           8           3  2.809524      0
    : 2   rosekieć      ro-se       kieć  ro-se-kieć           8           3  3.000000      0
    : 3   mosechyć      mo-se       chyć  mo-se-chyć           8           3  3.000000      0
    : 4   mosepieć      mo-se       pieć  mo-se-pieć           8           3  2.857143      0
    : 5   mosekieć      mo-se       kieć  mo-se-kieć           8           3  2.952381      0
    : 6   wasechyć      wa-se       chyć  wa-se-chyć           8           3  2.952381      0
    : 7   wasepieć      wa-se       pieć  wa-se-pieć           8           3  2.904762      0
    : 8   wasekieć      wa-se       kieć  wa-se-kieć           8           3  2.952381      0
    : 9   rokapiać      ro-ka       piać  ro-ka-piać           8           3  2.714286      0
    : 10  rokaziać      ro-ka       ziać  ro-ka-ziać           8           3  2.714286      0
    : 11  rokafiać      ro-ka       fiać  ro-ka-fiać           8           3  3.000000      0
    : 12  rokagiać      ro-ka       giać  ro-ka-giać           8           3  3.000000      0
    : 13  rokasiać      ro-ka       siać  ro-ka-siać           8           3  2.809524      0
    : 14  rokatiać      ro-ka       tiać  ro-ka-tiać           8           3  3.000000      0
    : ---------------------------------------------------------------------------
    :           WORD SYLL_START SYLL_ULTIM        SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  CLASS
    : 2112  nazymieć      na-zy       mieć  na-zy-mieć           8           3  2.714286      0
    : 2113  nazycieć      na-zy       cieć  na-zy-cieć           8           3  2.095238      0
    : 2114  nazymieć      na-zy       mieć  na-zy-mieć           8           3  2.714286      0
    : 2115  nazycieć      na-zy       cieć  na-zy-cieć           8           3  2.095238      0
    : 2116  nazymieć      na-zy       mieć  na-zy-mieć           8           3  2.714286      0
    : 2117  kazycieć      ka-zy       cieć  ka-zy-cieć           8           3  2.761905      0
    : 2118  kazymieć      ka-zy       mieć  ka-zy-mieć           8           3  2.809524      0
    : 2119  kazycieć      ka-zy       cieć  ka-zy-cieć           8           3  2.761905      0
    : 2120  kazymieć      ka-zy       mieć  ka-zy-mieć           8           3  2.809524      0
    : 2121  kazycieć      ka-zy       cieć  ka-zy-cieć           8           3  2.761905      0
    : 2122  kazymieć      ka-zy       mieć  ka-zy-mieć           8           3  2.809524      0
    : 2123  kożymieć      ko-ży       mieć  ko-ży-mieć           8           3  2.904762      0
    : 2124  kożymieć      ko-ży       mieć  ko-ży-mieć           8           3  2.904762      0
    : 2125   rolisać      ro-li        sać   ro-li-sać           7           3  2.000000      0
    : 2126   rolisać      ro-li        sać   ro-li-sać           7           3  2.000000      0
    :
    :END:

*** DONE Checkup =st0302_words_longs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( st0302_words_longs.columns.values )

print( "="*75 )

df_list = [  st0302_words_longs,  ]
df_info = [ "st0302_words_longs", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[136]:
    # output
    : ['WORD' 'SYLL_START' 'SYLL_ULTIM' 'SYLL' 'CHAR_COUNT' 'SYLL_COUNT'
    :  'OLD_20' 'CLASS']
    : ===========================================================================
    : ===========================================================================
    : st0302_words_longs
    : ===========================================================================
    : idx count: 1119
    : row count: 8  ['WORD', 'SYLL_START', 'SYLL_ULTIM', 'SYLL', 'CHAR_COUNT', 'SYLL_COUNT', 'OLD_20', 'CLASS']
    : ---------------------------------------------------------------------------
    :         WORD SYLL_START SYLL_ULTIM        SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  CLASS
    : 0   roseznor      ro-se       znor  ro-se-znor           8           3  3.000000      1
    : 3   moseznor      mo-se       znor  mo-se-znor           8           3  2.904762      1
    : 6   waseznor      wa-se       znor  wa-se-znor           8           3  3.000000      1
    : 9   rokabiań      ro-ka       biań  ro-ka-biań           8           3  2.666667      1
    : 15  rokadiań      ro-ka       diań  ro-ka-diań           8           3  2.904762      1
    : 21  rokasiań      ro-ka       siań  ro-ka-siań           8           3  2.809524      1
    : 27  mokabiań      mo-ka       biań  mo-ka-biań           8           3  2.809524      1
    : 33  mokadiań      mo-ka       diań  mo-ka-diań           8           3  2.952381      1
    : 39  mokasiań      mo-ka       siań  mo-ka-siań           8           3  2.904762      1
    : 45   mokagla      mo-ka        gla   mo-ka-gla           7           3  2.571429      1
    : 46   mokazja      mo-ka        zja   mo-ka-zja           7           3  2.095238      1
    : 47   mokadża      mo-ka        dża   mo-ka-dża           7           3  2.523810      1
    : 48   mokakra      mo-ka        kra   mo-ka-kra           7           3  2.428571      1
    : 49   mokapra      mo-ka        pra   mo-ka-pra           7           3  2.619048      1
    : 50   mokakła      mo-ka        kła   mo-ka-kła           7           3  2.000000      1
    : ---------------------------------------------------------------------------
    :            WORD SYLL_START SYLL_ULTIM         SYLL  CHAR_COUNT  SYLL_COUNT    OLD_20  CLASS
    : 4212  szaboznąć     sza-bo       znąć  sza-bo-znąć           9           3  3.000000      0
    : 4213  szabośnąć     sza-bo       śnąć  sza-bo-śnąć           9           3  2.904762      0
    : 4214  szabognąć     sza-bo       gnąć  sza-bo-gnąć           9           3  3.000000      0
    : 4215  szaboszić     sza-bo       szić  sza-bo-szić           9           3  3.095238      0
    : 4216  szaborzić     sza-bo       rzić  sza-bo-rzić           9           3  3.000000      0
    : 4217  szabostić     sza-bo       stić  sza-bo-stić           9           3  3.000000      0
    : 4218  szabochić     sza-bo       chić  sza-bo-chić           9           3  3.142857      0
    : 4219  szaboczić     sza-bo       czić  sza-bo-czić           9           3  2.952381      0
    : 4220  szaboskić     sza-bo       skić  sza-bo-skić           9           3  3.000000      0
    : 4239   nazymieć      na-zy       mieć   na-zy-mieć           8           3  2.714286      0
    : 4240   nazycieć      na-zy       cieć   na-zy-cieć           8           3  2.095238      0
    : 4244   kazycieć      ka-zy       cieć   ka-zy-cieć           8           3  2.761905      0
    : 4245   kazymieć      ka-zy       mieć   ka-zy-mieć           8           3  2.809524      0
    : 4250   kożymieć      ko-ży       mieć   ko-ży-mieć           8           3  2.904762      0
    : 4252    rolisać      ro-li        sać    ro-li-sać           7           3  2.000000      0
    :
    :END:

** Proc 03: Merge
*** DONE Merge =st3002_wvals= and =st0302_forms=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st3002_wvals_forms = pd.DataFrame()

st3002_wvals_forms = pd.merge(
    left        = st3002_wvals,
    right       = st0302_forms,
    how         = "inner",
    left_on     = "WORD",
    right_on    = "WORD",
    suffixes    = ("_from_wvals", "_from_forms"),
    # validate    = "many_to_many",
)

print( "="*75 )
print( st3002_wvals_forms.shape )
print( "="*75 )
print( st3002_wvals_forms.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[137]:
    # output
    : ===========================================================================
    : (415, 133)
    : ===========================================================================
    : ['WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS' 'SEM_WS' 'T_TEST_WS' 'P_VALUE_WS'
    :  'CONF_95_dol' 'CONF_95_gora_WS' 'ACCEPTANCE_WS' 'ACC_MEAN_WS'
    :  'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA' 'T_TEST_WA' 'P_VALUE_WA'
    :  'CONF_95_dol_WA' 'CONF_95_gora_WA' 'ACCEPTANCE_WA' 'ACC_MEAN_WA'
    :  'WS+WA_WAR' 'SYLL_START' 'SYLL_ULTIM' 'SYLL' 'CHAR_COUNT' 'SYLL_COUNT'
    :  'OLD_20' 'SYLL_FIRST' 'SYLL_from_1st_1st' 'COUNT_1st_1st'
    :  'SYLL_from_ANY_1st' 'COUNT_ANY_1st' 'WA_000' 'WA_001' 'WA_002' 'WA_003'
    :  'WA_004' 'WA_005' 'WA_006' 'WA_007' 'WA_008' 'WA_009' 'WA_010' 'WA_011'
    :  'WA_012' 'WA_013' 'WA_014' 'WA_015' 'WA_016' 'WA_017' 'WA_018' 'WA_019'
    :  'WA_020' 'WA_021' 'WA_022' 'WA_023' 'WA_024' 'WA_025' 'WA_026' 'WA_027'
    :  'WA_028' 'WA_029' 'WA_030' 'WA_031' 'WA_032' 'WG_000' 'WG_001' 'WG_002'
    :  'WG_003' 'WG_004' 'WG_005' 'WG_006' 'WG_007' 'WG_008' 'WG_009' 'WG_010'
    :  'WG_011' 'WG_012' 'WG_013' 'WG_014' 'WG_015' 'WG_016' 'WG_017' 'WG_018'
    :  'WG_019' 'WG_020' 'WG_021' 'WG_022' 'WG_023' 'WG_024' 'WG_025' 'WG_026'
    :  'WG_027' 'WG_028' 'WG_029' 'WG_030' 'WG_031' 'WG_032' 'WS_000' 'WS_001'
    :  'WS_002' 'WS_003' 'WS_004' 'WS_005' 'WS_006' 'WS_007' 'WS_008' 'WS_009'
    :  'WS_010' 'WS_011' 'WS_012' 'WS_013' 'WS_014' 'WS_015' 'WS_016' 'WS_017'
    :  'WS_018' 'WS_019' 'WS_020' 'WS_021' 'WS_022' 'WS_023' 'WS_024' 'WS_025'
    :  'WS_026' 'WS_027' 'WS_028' 'WS_029' 'WS_030' 'WS_031' 'WS_032']
    :
    :END:

*** DONE Merge =st3002_wvals_forms= and =st0302_words_longs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st0302_wvals_forms_words_longs = pd.DataFrame()

st0302_wvals_forms_words_longs = pd.merge(
    left        = st3002_wvals_forms,
    right       = st0302_words_longs,
    how         = "inner",
    left_on     = "WORD",
    right_on    = "WORD",
    suffixes    = ("_from_wvals_forms", "_from_words"),
    # validate    = "many_to_many",
)

print( "="*75 )
print( st0302_wvals_forms_words_longs.shape )
print( "="*75 )
print( st0302_wvals_forms_words_longs.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[138]:
    # output
    : ===========================================================================
    : (415, 140)
    : ===========================================================================
    : ['WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS' 'SEM_WS' 'T_TEST_WS' 'P_VALUE_WS'
    :  'CONF_95_dol' 'CONF_95_gora_WS' 'ACCEPTANCE_WS' 'ACC_MEAN_WS'
    :  'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA' 'T_TEST_WA' 'P_VALUE_WA'
    :  'CONF_95_dol_WA' 'CONF_95_gora_WA' 'ACCEPTANCE_WA' 'ACC_MEAN_WA'
    :  'WS+WA_WAR' 'SYLL_START_from_wvals_forms' 'SYLL_ULTIM_from_wvals_forms'
    :  'SYLL_from_wvals_forms' 'CHAR_COUNT_from_wvals_forms'
    :  'SYLL_COUNT_from_wvals_forms' 'OLD_20_from_wvals_forms' 'SYLL_FIRST'
    :  'SYLL_from_1st_1st' 'COUNT_1st_1st' 'SYLL_from_ANY_1st' 'COUNT_ANY_1st'
    :  'WA_000' 'WA_001' 'WA_002' 'WA_003' 'WA_004' 'WA_005' 'WA_006' 'WA_007'
    :  'WA_008' 'WA_009' 'WA_010' 'WA_011' 'WA_012' 'WA_013' 'WA_014' 'WA_015'
    :  'WA_016' 'WA_017' 'WA_018' 'WA_019' 'WA_020' 'WA_021' 'WA_022' 'WA_023'
    :  'WA_024' 'WA_025' 'WA_026' 'WA_027' 'WA_028' 'WA_029' 'WA_030' 'WA_031'
    :  'WA_032' 'WG_000' 'WG_001' 'WG_002' 'WG_003' 'WG_004' 'WG_005' 'WG_006'
    :  'WG_007' 'WG_008' 'WG_009' 'WG_010' 'WG_011' 'WG_012' 'WG_013' 'WG_014'
    :  'WG_015' 'WG_016' 'WG_017' 'WG_018' 'WG_019' 'WG_020' 'WG_021' 'WG_022'
    :  'WG_023' 'WG_024' 'WG_025' 'WG_026' 'WG_027' 'WG_028' 'WG_029' 'WG_030'
    :  'WG_031' 'WG_032' 'WS_000' 'WS_001' 'WS_002' 'WS_003' 'WS_004' 'WS_005'
    :  'WS_006' 'WS_007' 'WS_008' 'WS_009' 'WS_010' 'WS_011' 'WS_012' 'WS_013'
    :  'WS_014' 'WS_015' 'WS_016' 'WS_017' 'WS_018' 'WS_019' 'WS_020' 'WS_021'
    :  'WS_022' 'WS_023' 'WS_024' 'WS_025' 'WS_026' 'WS_027' 'WS_028' 'WS_029'
    :  'WS_030' 'WS_031' 'WS_032' 'SYLL_START_from_words'
    :  'SYLL_ULTIM_from_words' 'SYLL_from_words' 'CHAR_COUNT_from_words'
    :  'SYLL_COUNT_from_words' 'OLD_20_from_words' 'CLASS']
    :
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0301.py

DEMO_MODE = False

if not DEMO_MODE:
    df_to_xlsx( df_data=st0302_wvals_forms_words_longs, df_name="st0302_wvals_forms_words_longs", df_path="data_out", add_time=False, verbose=1, )
    print( "="*75 )
    print("Saved *.xlsx")
else:
    print("*** Not saving any *.xlsx files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[139]:
    # output
    : Saving DataFrame as: data_out/st0302_wvals_forms_words_longs.xlsx
    : ===========================================================================
    : Saved *.xlsx
    :
    :END:

* DONE Stage 0303: Merge words with syllables info
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st0303_words = pd.read_excel( "./data_out/st0302_wvals_forms_words_longs.xlsx", ignore_index=True, )

st0303_sylls_1st_freq_min_1 = pd.read_excel( "./data_out/s2001_words_sylls_1st_freq_min_1_sylls.xlsx", )
st0303_sylls_ANY_freq_min_1 = pd.read_excel( "./data_out/s2001_words_sylls_ANY_freq_min_1_sylls.xlsx", )

st0303_sylls_1st_freq_min_1 = st0303_sylls_1st_freq_min_1[[ "SYLL", "COUNT" ]]
st0303_sylls_ANY_freq_min_1 = st0303_sylls_ANY_freq_min_1[[ "SYLL", "COUNT" ]]

st0303_sylls_1st_freq_min_1.columns = [ "SYLL_from_1st_1st", "COUNT_1st_1st" ]
st0303_sylls_ANY_freq_min_1.columns = [ "SYLL_from_ANY_1st", "COUNT_ANY_1st" ]

# st0303_words["SYLL_FIRST"] = st0303_words.apply( lambda x: x.SYLL_from_words.split("-",-1)[0],  axis=1, )

print( "="*75 )
print( "st0303_words shape:" )
print( "-"*75 )
print( st0303_words.shape )

print( "="*75 )
print( "st0303_sylls_1st_freq_min_1 shape:" )
print( "-"*75 )
print( st0303_sylls_1st_freq_min_1.shape )

print( "="*75 )
print( "st0303_sylls_ANY_freq_min_1 shape:" )
print( "-"*75 )
print( st0303_sylls_ANY_freq_min_1.shape )


print( "="*75 )
print( "st0303_words columns:" )
print( "-"*75 )
print( st0303_words.columns.values )

print( "="*75 )
print( "st0303_sylls_1st_freq_min_1 columns:" )
print( "-"*75 )
print( st0303_sylls_1st_freq_min_1.columns.values )

print( "="*75 )
print( "st0303_sylls_ANY_freq_min_1 columns:" )
print( "-"*75 )
print( st0303_sylls_ANY_freq_min_1.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[140]:
    # output
    : ===========================================================================
    : st0303_words shape:
    : ---------------------------------------------------------------------------
    : (415, 141)
    : ===========================================================================
    : st0303_sylls_1st_freq_min_1 shape:
    : ---------------------------------------------------------------------------
    : (4477, 2)
    : ===========================================================================
    : st0303_sylls_ANY_freq_min_1 shape:
    : ---------------------------------------------------------------------------
    : (7072, 2)
    : ===========================================================================
    : st0303_words columns:
    : ---------------------------------------------------------------------------
    : ['Unnamed: 0' 'WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS' 'SEM_WS' 'T_TEST_WS'
    :  'P_VALUE_WS' 'CONF_95_dol' 'CONF_95_gora_WS' 'ACCEPTANCE_WS'
    :  'ACC_MEAN_WS' 'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA' 'T_TEST_WA'
    :  'P_VALUE_WA' 'CONF_95_dol_WA' 'CONF_95_gora_WA' 'ACCEPTANCE_WA'
    :  'ACC_MEAN_WA' 'WS+WA_WAR' 'SYLL_START_from_wvals_forms'
    :  'SYLL_ULTIM_from_wvals_forms' 'SYLL_from_wvals_forms'
    :  'CHAR_COUNT_from_wvals_forms' 'SYLL_COUNT_from_wvals_forms'
    :  'OLD_20_from_wvals_forms' 'SYLL_FIRST' 'SYLL_from_1st_1st'
    :  'COUNT_1st_1st' 'SYLL_from_ANY_1st' 'COUNT_ANY_1st' 'WA_000' 'WA_001'
    :  'WA_002' 'WA_003' 'WA_004' 'WA_005' 'WA_006' 'WA_007' 'WA_008' 'WA_009'
    :  'WA_010' 'WA_011' 'WA_012' 'WA_013' 'WA_014' 'WA_015' 'WA_016' 'WA_017'
    :  'WA_018' 'WA_019' 'WA_020' 'WA_021' 'WA_022' 'WA_023' 'WA_024' 'WA_025'
    :  'WA_026' 'WA_027' 'WA_028' 'WA_029' 'WA_030' 'WA_031' 'WA_032' 'WG_000'
    :  'WG_001' 'WG_002' 'WG_003' 'WG_004' 'WG_005' 'WG_006' 'WG_007' 'WG_008'
    :  'WG_009' 'WG_010' 'WG_011' 'WG_012' 'WG_013' 'WG_014' 'WG_015' 'WG_016'
    :  'WG_017' 'WG_018' 'WG_019' 'WG_020' 'WG_021' 'WG_022' 'WG_023' 'WG_024'
    :  'WG_025' 'WG_026' 'WG_027' 'WG_028' 'WG_029' 'WG_030' 'WG_031' 'WG_032'
    :  'WS_000' 'WS_001' 'WS_002' 'WS_003' 'WS_004' 'WS_005' 'WS_006' 'WS_007'
    :  'WS_008' 'WS_009' 'WS_010' 'WS_011' 'WS_012' 'WS_013' 'WS_014' 'WS_015'
    :  'WS_016' 'WS_017' 'WS_018' 'WS_019' 'WS_020' 'WS_021' 'WS_022' 'WS_023'
    :  'WS_024' 'WS_025' 'WS_026' 'WS_027' 'WS_028' 'WS_029' 'WS_030' 'WS_031'
    :  'WS_032' 'SYLL_START_from_words' 'SYLL_ULTIM_from_words'
    :  'SYLL_from_words' 'CHAR_COUNT_from_words' 'SYLL_COUNT_from_words'
    :  'OLD_20_from_words' 'CLASS']
    : ===========================================================================
    : st0303_sylls_1st_freq_min_1 columns:
    : ---------------------------------------------------------------------------
    : ['SYLL_from_1st_1st' 'COUNT_1st_1st']
    : ===========================================================================
    : st0303_sylls_ANY_freq_min_1 columns:
    : ---------------------------------------------------------------------------
    : ['SYLL_from_ANY_1st' 'COUNT_ANY_1st']
    :
    :END:

** Proc 03: Merge
*** DONE Merge =st0303_words= and =st0303_sylls_1st_freq_min_1=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st0303_words = pd.merge(
    left        = st0303_words,
    right       = st0303_sylls_1st_freq_min_1,
    how         = "left",
    left_on     = "SYLL_FIRST",
    right_on    = "SYLL_from_1st_1st",
    suffixes    = ("_from_words", "_from_1st_1st"),
    # validate    = "many_to_many",
)

print( "="*75 )
print( st0303_words.shape )
print( "="*75 )
print( st0303_words.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[141]:
    # output
    : ===========================================================================
    : (415, 143)
    : ===========================================================================
    : ['Unnamed: 0' 'WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS' 'SEM_WS' 'T_TEST_WS'
    :  'P_VALUE_WS' 'CONF_95_dol' 'CONF_95_gora_WS' 'ACCEPTANCE_WS'
    :  'ACC_MEAN_WS' 'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA' 'T_TEST_WA'
    :  'P_VALUE_WA' 'CONF_95_dol_WA' 'CONF_95_gora_WA' 'ACCEPTANCE_WA'
    :  'ACC_MEAN_WA' 'WS+WA_WAR' 'SYLL_START_from_wvals_forms'
    :  'SYLL_ULTIM_from_wvals_forms' 'SYLL_from_wvals_forms'
    :  'CHAR_COUNT_from_wvals_forms' 'SYLL_COUNT_from_wvals_forms'
    :  'OLD_20_from_wvals_forms' 'SYLL_FIRST' 'SYLL_from_1st_1st_from_words'
    :  'COUNT_1st_1st_from_words' 'SYLL_from_ANY_1st' 'COUNT_ANY_1st' 'WA_000'
    :  'WA_001' 'WA_002' 'WA_003' 'WA_004' 'WA_005' 'WA_006' 'WA_007' 'WA_008'
    :  'WA_009' 'WA_010' 'WA_011' 'WA_012' 'WA_013' 'WA_014' 'WA_015' 'WA_016'
    :  'WA_017' 'WA_018' 'WA_019' 'WA_020' 'WA_021' 'WA_022' 'WA_023' 'WA_024'
    :  'WA_025' 'WA_026' 'WA_027' 'WA_028' 'WA_029' 'WA_030' 'WA_031' 'WA_032'
    :  'WG_000' 'WG_001' 'WG_002' 'WG_003' 'WG_004' 'WG_005' 'WG_006' 'WG_007'
    :  'WG_008' 'WG_009' 'WG_010' 'WG_011' 'WG_012' 'WG_013' 'WG_014' 'WG_015'
    :  'WG_016' 'WG_017' 'WG_018' 'WG_019' 'WG_020' 'WG_021' 'WG_022' 'WG_023'
    :  'WG_024' 'WG_025' 'WG_026' 'WG_027' 'WG_028' 'WG_029' 'WG_030' 'WG_031'
    :  'WG_032' 'WS_000' 'WS_001' 'WS_002' 'WS_003' 'WS_004' 'WS_005' 'WS_006'
    :  'WS_007' 'WS_008' 'WS_009' 'WS_010' 'WS_011' 'WS_012' 'WS_013' 'WS_014'
    :  'WS_015' 'WS_016' 'WS_017' 'WS_018' 'WS_019' 'WS_020' 'WS_021' 'WS_022'
    :  'WS_023' 'WS_024' 'WS_025' 'WS_026' 'WS_027' 'WS_028' 'WS_029' 'WS_030'
    :  'WS_031' 'WS_032' 'SYLL_START_from_words' 'SYLL_ULTIM_from_words'
    :  'SYLL_from_words' 'CHAR_COUNT_from_words' 'SYLL_COUNT_from_words'
    :  'OLD_20_from_words' 'CLASS' 'SYLL_from_1st_1st_from_1st_1st'
    :  'COUNT_1st_1st_from_1st_1st']
    :
    :END:

*** DONE Merge =st0303_words= and =st0303_sylls_ANY_freq_min_1=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st0303_words = pd.merge(
    left        = st0303_words,
    right       = st0303_sylls_ANY_freq_min_1,
    how         = "left",
    left_on     = "SYLL_FIRST",
    right_on    = "SYLL_from_ANY_1st",
    suffixes    = ("_from_words", "_from_ANY_1st"),
    # validate    = "many_to_many",
)

print( "="*75 )
print( st0303_words.shape )
print( "="*75 )
print( st0303_words.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[142]:
    # output
    : ===========================================================================
    : (415, 145)
    : ===========================================================================
    : ['Unnamed: 0' 'WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS' 'SEM_WS' 'T_TEST_WS'
    :  'P_VALUE_WS' 'CONF_95_dol' 'CONF_95_gora_WS' 'ACCEPTANCE_WS'
    :  'ACC_MEAN_WS' 'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA' 'T_TEST_WA'
    :  'P_VALUE_WA' 'CONF_95_dol_WA' 'CONF_95_gora_WA' 'ACCEPTANCE_WA'
    :  'ACC_MEAN_WA' 'WS+WA_WAR' 'SYLL_START_from_wvals_forms'
    :  'SYLL_ULTIM_from_wvals_forms' 'SYLL_from_wvals_forms'
    :  'CHAR_COUNT_from_wvals_forms' 'SYLL_COUNT_from_wvals_forms'
    :  'OLD_20_from_wvals_forms' 'SYLL_FIRST' 'SYLL_from_1st_1st_from_words'
    :  'COUNT_1st_1st_from_words' 'SYLL_from_ANY_1st_from_words'
    :  'COUNT_ANY_1st_from_words' 'WA_000' 'WA_001' 'WA_002' 'WA_003' 'WA_004'
    :  'WA_005' 'WA_006' 'WA_007' 'WA_008' 'WA_009' 'WA_010' 'WA_011' 'WA_012'
    :  'WA_013' 'WA_014' 'WA_015' 'WA_016' 'WA_017' 'WA_018' 'WA_019' 'WA_020'
    :  'WA_021' 'WA_022' 'WA_023' 'WA_024' 'WA_025' 'WA_026' 'WA_027' 'WA_028'
    :  'WA_029' 'WA_030' 'WA_031' 'WA_032' 'WG_000' 'WG_001' 'WG_002' 'WG_003'
    :  'WG_004' 'WG_005' 'WG_006' 'WG_007' 'WG_008' 'WG_009' 'WG_010' 'WG_011'
    :  'WG_012' 'WG_013' 'WG_014' 'WG_015' 'WG_016' 'WG_017' 'WG_018' 'WG_019'
    :  'WG_020' 'WG_021' 'WG_022' 'WG_023' 'WG_024' 'WG_025' 'WG_026' 'WG_027'
    :  'WG_028' 'WG_029' 'WG_030' 'WG_031' 'WG_032' 'WS_000' 'WS_001' 'WS_002'
    :  'WS_003' 'WS_004' 'WS_005' 'WS_006' 'WS_007' 'WS_008' 'WS_009' 'WS_010'
    :  'WS_011' 'WS_012' 'WS_013' 'WS_014' 'WS_015' 'WS_016' 'WS_017' 'WS_018'
    :  'WS_019' 'WS_020' 'WS_021' 'WS_022' 'WS_023' 'WS_024' 'WS_025' 'WS_026'
    :  'WS_027' 'WS_028' 'WS_029' 'WS_030' 'WS_031' 'WS_032'
    :  'SYLL_START_from_words' 'SYLL_ULTIM_from_words' 'SYLL_from_words'
    :  'CHAR_COUNT_from_words' 'SYLL_COUNT_from_words' 'OLD_20_from_words'
    :  'CLASS' 'SYLL_from_1st_1st_from_1st_1st' 'COUNT_1st_1st_from_1st_1st'
    :  'SYLL_from_ANY_1st_from_ANY_1st' 'COUNT_ANY_1st_from_ANY_1st']
    :
    :END:

*** DONE Transpose

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st0303_words_trans = st0303_words.transpose( copy=True )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[143]:
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0301.py

DEMO_MODE = False

if not DEMO_MODE:
    df_to_xlsx( df_data=st0303_words,       df_name="st0303_words",       df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=st0303_words_trans, df_name="st0303_words_trans", df_path="data_out", add_time=False, verbose=1, )
    print( "="*75 )
    print("Saved *.xlsx")
else:
    print("*** Not saving any *.xlsx files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[144]:
    # output
    : Saving DataFrame as: data_out/st0303_words.xlsx
    : Saving DataFrame as: data_out/st0303_words_trans.xlsx
    : ===========================================================================
    : Saved *.xlsx
    :
    :END:

* DONE Stage 0304: MORE
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st0304_words = pd.read_excel( "./data_out/st0303_words.xlsx", ignore_index=True, )

print( "="*75 )
print( "st0304_words shape:" )
print( "-"*75 )
print( st0304_words.shape )

print( "="*75 )
print( "st0304_words columns:" )
print( "-"*75 )
print( st0304_words.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[20]:
    # output
    : ===========================================================================
    : st0304_words shape:
    : ---------------------------------------------------------------------------
    : (415, 146)
    : ===========================================================================
    : st0304_words columns:
    : ---------------------------------------------------------------------------
    : ['Unnamed: 0' 'Unnamed: 0.1' 'WORD' 'GC_%_pop' 'GC' 'AVG_WS' 'SD_WS'
    :  'SEM_WS' 'T_TEST_WS' 'P_VALUE_WS' 'CONF_95_dol' 'CONF_95_gora_WS'
    :  'ACCEPTANCE_WS' 'ACC_MEAN_WS' 'GC_%_pop_WA' 'AVG_WA' 'SD_WA' 'SEM_WA'
    :  'T_TEST_WA' 'P_VALUE_WA' 'CONF_95_dol_WA' 'CONF_95_gora_WA'
    :  'ACCEPTANCE_WA' 'ACC_MEAN_WA' 'WS+WA_WAR' 'SYLL_START_from_wvals_forms'
    :  'SYLL_ULTIM_from_wvals_forms' 'SYLL_from_wvals_forms'
    :  'CHAR_COUNT_from_wvals_forms' 'SYLL_COUNT_from_wvals_forms'
    :  'OLD_20_from_wvals_forms' 'SYLL_FIRST' 'SYLL_from_1st_1st_from_words'
    :  'COUNT_1st_1st_from_words' 'SYLL_from_ANY_1st_from_words'
    :  'COUNT_ANY_1st_from_words' 'WA_000' 'WA_001' 'WA_002' 'WA_003' 'WA_004'
    :  'WA_005' 'WA_006' 'WA_007' 'WA_008' 'WA_009' 'WA_010' 'WA_011' 'WA_012'
    :  'WA_013' 'WA_014' 'WA_015' 'WA_016' 'WA_017' 'WA_018' 'WA_019' 'WA_020'
    :  'WA_021' 'WA_022' 'WA_023' 'WA_024' 'WA_025' 'WA_026' 'WA_027' 'WA_028'
    :  'WA_029' 'WA_030' 'WA_031' 'WA_032' 'WG_000' 'WG_001' 'WG_002' 'WG_003'
    :  'WG_004' 'WG_005' 'WG_006' 'WG_007' 'WG_008' 'WG_009' 'WG_010' 'WG_011'
    :  'WG_012' 'WG_013' 'WG_014' 'WG_015' 'WG_016' 'WG_017' 'WG_018' 'WG_019'
    :  'WG_020' 'WG_021' 'WG_022' 'WG_023' 'WG_024' 'WG_025' 'WG_026' 'WG_027'
    :  'WG_028' 'WG_029' 'WG_030' 'WG_031' 'WG_032' 'WS_000' 'WS_001' 'WS_002'
    :  'WS_003' 'WS_004' 'WS_005' 'WS_006' 'WS_007' 'WS_008' 'WS_009' 'WS_010'
    :  'WS_011' 'WS_012' 'WS_013' 'WS_014' 'WS_015' 'WS_016' 'WS_017' 'WS_018'
    :  'WS_019' 'WS_020' 'WS_021' 'WS_022' 'WS_023' 'WS_024' 'WS_025' 'WS_026'
    :  'WS_027' 'WS_028' 'WS_029' 'WS_030' 'WS_031' 'WS_032'
    :  'SYLL_START_from_words' 'SYLL_ULTIM_from_words' 'SYLL_from_words'
    :  'CHAR_COUNT_from_words' 'SYLL_COUNT_from_words' 'OLD_20_from_words'
    :  'CLASS' 'SYLL_from_1st_1st_from_1st_1st' 'COUNT_1st_1st_from_1st_1st'
    :  'SYLL_from_ANY_1st_from_ANY_1st' 'COUNT_ANY_1st_from_ANY_1st']
    :
    :END:

** Proc 03: Select ~nouns~ and ~verbs~ extract =WA=, =WG= and =WS=
*** DONE Produce =st0304_nouns= and =st0304_verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

st0304_nouns = st0304_words[ st0304_words[ "CLASS" ] == 1 ]
st0304_verbs = st0304_words[ st0304_words[ "CLASS" ] == 0 ]

print( "="*75 )
print( "st0304_nouns.shape" )
print( st0304_nouns.shape )

print( "="*75 )
print( "st0304_verbs.shape" )
print( st0304_verbs.shape )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[21]:
    # output
    : ===========================================================================
    : st0304_nouns.shape
    : (150, 146)
    : ===========================================================================
    : st0304_verbs.shape
    : (265, 146)
    :
    :END:

*** DONE Extract =WA=, =WG= and =WS= from ~nouns~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_nouns_WA = st0304_nouns.filter( regex="(^WORD$)|(^CLASS$)|(SYLL_START_from_words)|(WA_[0-9][0-9][0-9])" )
st0304_nouns_WS = st0304_nouns.filter( regex="(^WORD$)|(^CLASS$)|(SYLL_START_from_words)|(WS_[0-9][0-9][0-9])" )
st0304_nouns_WG = st0304_nouns.filter( regex="(^WORD$)|(^CLASS$)|(SYLL_START_from_words)|(WG_[0-9][0-9][0-9])" )

print("="*75)
print("st0304_nouns_WA.shape")
print(st0304_nouns_WA.shape)
print("st0304_nouns_WA.columns.values")
print(st0304_nouns_WA.columns.values)

print("="*75)
print("st0304_nouns_WG.shape")
print(st0304_nouns_WG.shape)
print("st0304_nouns_WG.columns.values")
print(st0304_nouns_WG.columns.values)

print("="*75)
print("st0304_nouns_WS.shape")
print(st0304_nouns_WS.shape)
print("st0304_nouns_WS.columns.values")
print(st0304_nouns_WS.columns.values)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[22]:
    # output
    : ===========================================================================
    : st0304_nouns_WA.shape
    : (150, 36)
    : st0304_nouns_WA.columns.values
    : ['WORD' 'WA_000' 'WA_001' 'WA_002' 'WA_003' 'WA_004' 'WA_005' 'WA_006'
    :  'WA_007' 'WA_008' 'WA_009' 'WA_010' 'WA_011' 'WA_012' 'WA_013' 'WA_014'
    :  'WA_015' 'WA_016' 'WA_017' 'WA_018' 'WA_019' 'WA_020' 'WA_021' 'WA_022'
    :  'WA_023' 'WA_024' 'WA_025' 'WA_026' 'WA_027' 'WA_028' 'WA_029' 'WA_030'
    :  'WA_031' 'WA_032' 'SYLL_START_from_words' 'CLASS']
    : ===========================================================================
    : st0304_nouns_WG.shape
    : (150, 36)
    : st0304_nouns_WG.columns.values
    : ['WORD' 'WG_000' 'WG_001' 'WG_002' 'WG_003' 'WG_004' 'WG_005' 'WG_006'
    :  'WG_007' 'WG_008' 'WG_009' 'WG_010' 'WG_011' 'WG_012' 'WG_013' 'WG_014'
    :  'WG_015' 'WG_016' 'WG_017' 'WG_018' 'WG_019' 'WG_020' 'WG_021' 'WG_022'
    :  'WG_023' 'WG_024' 'WG_025' 'WG_026' 'WG_027' 'WG_028' 'WG_029' 'WG_030'
    :  'WG_031' 'WG_032' 'SYLL_START_from_words' 'CLASS']
    : ===========================================================================
    : st0304_nouns_WS.shape
    : (150, 36)
    : st0304_nouns_WS.columns.values
    : ['WORD' 'WS_000' 'WS_001' 'WS_002' 'WS_003' 'WS_004' 'WS_005' 'WS_006'
    :  'WS_007' 'WS_008' 'WS_009' 'WS_010' 'WS_011' 'WS_012' 'WS_013' 'WS_014'
    :  'WS_015' 'WS_016' 'WS_017' 'WS_018' 'WS_019' 'WS_020' 'WS_021' 'WS_022'
    :  'WS_023' 'WS_024' 'WS_025' 'WS_026' 'WS_027' 'WS_028' 'WS_029' 'WS_030'
    :  'WS_031' 'WS_032' 'SYLL_START_from_words' 'CLASS']
    :
    :END:

*** DONE Extract =WA=, =WG= and =WS= from ~verbs~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_verbs_WA = st0304_verbs.filter( regex="(^WORD$)|(^CLASS$)|(SYLL_START_from_words)|(WA_[0-9][0-9][0-9])" )
st0304_verbs_WG = st0304_verbs.filter( regex="(^WORD$)|(^CLASS$)|(SYLL_START_from_words)|(WG_[0-9][0-9][0-9])" )
st0304_verbs_WS = st0304_verbs.filter( regex="(^WORD$)|(^CLASS$)|(SYLL_START_from_words)|(WS_[0-9][0-9][0-9])" )

print("="*75)
print("st0304_verbs_WA.shape")
print(st0304_verbs_WA.shape)
print("st0304_verbs_WA.columns.values")
print(st0304_verbs_WA.columns.values)

print("="*75)
print("st0304_verbs_WG.shape")
print(st0304_verbs_WG.shape)
print("st0304_verbs_WG.columns.values")
print(st0304_verbs_WG.columns.values)

print("="*75)
print("st0304_verbs_WS.shape")
print(st0304_verbs_WS.shape)
print("st0304_verbs_WS.columns.values")
print(st0304_verbs_WS.columns.values)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[23]:
    # output
    : ===========================================================================
    : st0304_verbs_WA.shape
    : (265, 36)
    : st0304_verbs_WA.columns.values
    : ['WORD' 'WA_000' 'WA_001' 'WA_002' 'WA_003' 'WA_004' 'WA_005' 'WA_006'
    :  'WA_007' 'WA_008' 'WA_009' 'WA_010' 'WA_011' 'WA_012' 'WA_013' 'WA_014'
    :  'WA_015' 'WA_016' 'WA_017' 'WA_018' 'WA_019' 'WA_020' 'WA_021' 'WA_022'
    :  'WA_023' 'WA_024' 'WA_025' 'WA_026' 'WA_027' 'WA_028' 'WA_029' 'WA_030'
    :  'WA_031' 'WA_032' 'SYLL_START_from_words' 'CLASS']
    : ===========================================================================
    : st0304_verbs_WG.shape
    : (265, 36)
    : st0304_verbs_WG.columns.values
    : ['WORD' 'WG_000' 'WG_001' 'WG_002' 'WG_003' 'WG_004' 'WG_005' 'WG_006'
    :  'WG_007' 'WG_008' 'WG_009' 'WG_010' 'WG_011' 'WG_012' 'WG_013' 'WG_014'
    :  'WG_015' 'WG_016' 'WG_017' 'WG_018' 'WG_019' 'WG_020' 'WG_021' 'WG_022'
    :  'WG_023' 'WG_024' 'WG_025' 'WG_026' 'WG_027' 'WG_028' 'WG_029' 'WG_030'
    :  'WG_031' 'WG_032' 'SYLL_START_from_words' 'CLASS']
    : ===========================================================================
    : st0304_verbs_WS.shape
    : (265, 36)
    : st0304_verbs_WS.columns.values
    : ['WORD' 'WS_000' 'WS_001' 'WS_002' 'WS_003' 'WS_004' 'WS_005' 'WS_006'
    :  'WS_007' 'WS_008' 'WS_009' 'WS_010' 'WS_011' 'WS_012' 'WS_013' 'WS_014'
    :  'WS_015' 'WS_016' 'WS_017' 'WS_018' 'WS_019' 'WS_020' 'WS_021' 'WS_022'
    :  'WS_023' 'WS_024' 'WS_025' 'WS_026' 'WS_027' 'WS_028' 'WS_029' 'WS_030'
    :  'WS_031' 'WS_032' 'SYLL_START_from_words' 'CLASS']
    :
    :END:

*** DONE Merge =WA= ~nouns~ and ~verbs~

    FIXME: Possibly there is too  many maches because the length of the last syllabe is not being matched in all cases ?


    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_verbs_WA_nouns_WA = pd.DataFrame()

st0304_verbs_WA_nouns_WA = pd.merge(
    left        = st0304_verbs_WA,
    right       = st0304_nouns_WA,
    how         = "inner",
    left_on     = "SYLL_START_from_words",
    right_on    = "SYLL_START_from_words",
    suffixes    = ("_v", "_n"),
    # validate    = "one_to_many",
)

st0304_verbs_WA_nouns_WA.insert( 0, "ID", st0304_verbs_WA_nouns_WA["WORD_v"] + "_" + st0304_verbs_WA_nouns_WA["WORD_n"] )

print( "="*75 )
print( st0304_verbs_WA_nouns_WA.shape )
print( "="*75 )
print( st0304_verbs_WA_nouns_WA.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[24]:
    # output
    : ===========================================================================
    : (541, 72)
    : ===========================================================================
    : ['ID' 'WORD_v' 'WA_000_v' 'WA_001_v' 'WA_002_v' 'WA_003_v' 'WA_004_v'
    :  'WA_005_v' 'WA_006_v' 'WA_007_v' 'WA_008_v' 'WA_009_v' 'WA_010_v'
    :  'WA_011_v' 'WA_012_v' 'WA_013_v' 'WA_014_v' 'WA_015_v' 'WA_016_v'
    :  'WA_017_v' 'WA_018_v' 'WA_019_v' 'WA_020_v' 'WA_021_v' 'WA_022_v'
    :  'WA_023_v' 'WA_024_v' 'WA_025_v' 'WA_026_v' 'WA_027_v' 'WA_028_v'
    :  'WA_029_v' 'WA_030_v' 'WA_031_v' 'WA_032_v' 'SYLL_START_from_words'
    :  'CLASS_v' 'WORD_n' 'WA_000_n' 'WA_001_n' 'WA_002_n' 'WA_003_n' 'WA_004_n'
    :  'WA_005_n' 'WA_006_n' 'WA_007_n' 'WA_008_n' 'WA_009_n' 'WA_010_n'
    :  'WA_011_n' 'WA_012_n' 'WA_013_n' 'WA_014_n' 'WA_015_n' 'WA_016_n'
    :  'WA_017_n' 'WA_018_n' 'WA_019_n' 'WA_020_n' 'WA_021_n' 'WA_022_n'
    :  'WA_023_n' 'WA_024_n' 'WA_025_n' 'WA_026_n' 'WA_027_n' 'WA_028_n'
    :  'WA_029_n' 'WA_030_n' 'WA_031_n' 'WA_032_n' 'CLASS_n']
    :
    :END:

*** DONE Merge =WG= ~nouns~ and ~verbs~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_verbs_WG_nouns_WG = pd.DataFrame()

st0304_verbs_WG_nouns_WG = pd.merge(
    left        = st0304_verbs_WG,
    right       = st0304_nouns_WG,
    how         = "inner",
    left_on     = "SYLL_START_from_words",
    right_on    = "SYLL_START_from_words",
    suffixes    = ("_v", "_n"),
    # validate    = "one_to_many",
)

st0304_verbs_WG_nouns_WG.insert( 0, "ID", st0304_verbs_WG_nouns_WG["WORD_v"] + "_" + st0304_verbs_WG_nouns_WG["WORD_n"] )

print( "="*75 )
print( st0304_verbs_WG_nouns_WG.shape )
print( "="*75 )
print( st0304_verbs_WG_nouns_WG.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[25]:
    # output
    : ===========================================================================
    : (541, 72)
    : ===========================================================================
    : ['ID' 'WORD_v' 'WG_000_v' 'WG_001_v' 'WG_002_v' 'WG_003_v' 'WG_004_v'
    :  'WG_005_v' 'WG_006_v' 'WG_007_v' 'WG_008_v' 'WG_009_v' 'WG_010_v'
    :  'WG_011_v' 'WG_012_v' 'WG_013_v' 'WG_014_v' 'WG_015_v' 'WG_016_v'
    :  'WG_017_v' 'WG_018_v' 'WG_019_v' 'WG_020_v' 'WG_021_v' 'WG_022_v'
    :  'WG_023_v' 'WG_024_v' 'WG_025_v' 'WG_026_v' 'WG_027_v' 'WG_028_v'
    :  'WG_029_v' 'WG_030_v' 'WG_031_v' 'WG_032_v' 'SYLL_START_from_words'
    :  'CLASS_v' 'WORD_n' 'WG_000_n' 'WG_001_n' 'WG_002_n' 'WG_003_n' 'WG_004_n'
    :  'WG_005_n' 'WG_006_n' 'WG_007_n' 'WG_008_n' 'WG_009_n' 'WG_010_n'
    :  'WG_011_n' 'WG_012_n' 'WG_013_n' 'WG_014_n' 'WG_015_n' 'WG_016_n'
    :  'WG_017_n' 'WG_018_n' 'WG_019_n' 'WG_020_n' 'WG_021_n' 'WG_022_n'
    :  'WG_023_n' 'WG_024_n' 'WG_025_n' 'WG_026_n' 'WG_027_n' 'WG_028_n'
    :  'WG_029_n' 'WG_030_n' 'WG_031_n' 'WG_032_n' 'CLASS_n']
    :
    :END:

*** DONE Merge =WS= ~nouns~ and ~verbs~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_verbs_WG_nouns_WS = pd.DataFrame()

st0304_verbs_WS_nouns_WS = pd.merge(
    left        = st0304_verbs_WS,
    right       = st0304_nouns_WS,
    how         = "inner",
    left_on     = "SYLL_START_from_words",
    right_on    = "SYLL_START_from_words",
    suffixes    = ("_v", "_n"),
    # validate    = "one_to_many",
)

st0304_verbs_WS_nouns_WS.insert( 0, "ID", st0304_verbs_WS_nouns_WS["WORD_v"] + "_" + st0304_verbs_WS_nouns_WS["WORD_n"] )

print( "="*75 )
print( st0304_verbs_WS_nouns_WS.shape )
print( "="*75 )
print( st0304_verbs_WS_nouns_WS.columns.values )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[26]:
    # output
    : ===========================================================================
    : (541, 72)
    : ===========================================================================
    : ['ID' 'WORD_v' 'WS_000_v' 'WS_001_v' 'WS_002_v' 'WS_003_v' 'WS_004_v'
    :  'WS_005_v' 'WS_006_v' 'WS_007_v' 'WS_008_v' 'WS_009_v' 'WS_010_v'
    :  'WS_011_v' 'WS_012_v' 'WS_013_v' 'WS_014_v' 'WS_015_v' 'WS_016_v'
    :  'WS_017_v' 'WS_018_v' 'WS_019_v' 'WS_020_v' 'WS_021_v' 'WS_022_v'
    :  'WS_023_v' 'WS_024_v' 'WS_025_v' 'WS_026_v' 'WS_027_v' 'WS_028_v'
    :  'WS_029_v' 'WS_030_v' 'WS_031_v' 'WS_032_v' 'SYLL_START_from_words'
    :  'CLASS_v' 'WORD_n' 'WS_000_n' 'WS_001_n' 'WS_002_n' 'WS_003_n' 'WS_004_n'
    :  'WS_005_n' 'WS_006_n' 'WS_007_n' 'WS_008_n' 'WS_009_n' 'WS_010_n'
    :  'WS_011_n' 'WS_012_n' 'WS_013_n' 'WS_014_n' 'WS_015_n' 'WS_016_n'
    :  'WS_017_n' 'WS_018_n' 'WS_019_n' 'WS_020_n' 'WS_021_n' 'WS_022_n'
    :  'WS_023_n' 'WS_024_n' 'WS_025_n' 'WS_026_n' 'WS_027_n' 'WS_028_n'
    :  'WS_029_n' 'WS_030_n' 'WS_031_n' 'WS_032_n' 'CLASS_n']
    :
    :END:

*** DONE Checkup =WA=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( "="*75 )

df_list = [  st0304_verbs_WA_nouns_WA,  ]
df_info = [ "st0304_verbs_WA_nouns_WA", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[27]:
    # output
    : ===========================================================================
    : ===========================================================================
    : st0304_verbs_WA_nouns_WA
    : ===========================================================================
    : idx count: 541
    : row count: 72
    : ---------------------------------------------------------------------------
    :                  ID   WORD_v  WA_000_v  WA_001_v  WA_002_v  WA_003_v  WA_004_v  WA_005_v  WA_006_v  WA_007_v  ...  WA_024_n  WA_025_n  WA_026_n  WA_027_n  WA_028_n  WA_029_n  WA_030_n  WA_031_n  WA_032_n  CLASS_n
    : 0   aciabać_aciadłe  aciabać         0         0         1         0         2         4         2         1  ...       4.0       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 1   aciabać_aciapłe  aciabać         0         0         1         0         2         4         2         1  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 2   aciabać_aciasce  aciabać         0         0         1         0         2         4         2         1  ...       0.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 3   aciabać_aciasje  aciabać         0         0         1         0         2         4         2         1  ...       2.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 4   aciabać_aciasme  aciabać         0         0         1         0         2         4         2         1  ...       0.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 5   aciabać_aciatłe  aciabać         0         0         1         0         2         4         2         1  ...       1.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 6   aciabać_aciatwe  aciabać         0         0         1         0         2         4         2         1  ...       0.0       1.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 7   aciabać_aciazje  aciabać         0         0         1         0         2         4         2         1  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 8   aciadać_aciadłe  aciadać         0         3         1         0         3         0         4         2  ...       4.0       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 9   aciadać_aciapłe  aciadać         0         3         1         0         3         0         4         2  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 10  aciadać_aciasce  aciadać         0         3         1         0         3         0         4         2  ...       0.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 11  aciadać_aciasje  aciadać         0         3         1         0         3         0         4         2  ...       2.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 12  aciadać_aciasme  aciadać         0         3         1         0         3         0         4         2  ...       0.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 13  aciadać_aciatłe  aciadać         0         3         1         0         3         0         4         2  ...       1.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 14  aciadać_aciatwe  aciadać         0         3         1         0         3         0         4         2  ...       0.0       1.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    :
    : [15 rows x 72 columns]
    : ---------------------------------------------------------------------------
    :                       ID     WORD_v  WA_000_v  WA_001_v  WA_002_v  WA_003_v  WA_004_v  WA_005_v  WA_006_v  WA_007_v  ...  WA_024_n  WA_025_n  WA_026_n  WA_027_n  WA_028_n  WA_029_n  WA_030_n  WA_031_n  WA_032_n  CLASS_n
    : 526    nużymieć_nużydzie   nużymieć         2         3         3         2         1         3         2         1  ...       0.0       0.0       3.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 527    nużymieć_nużystie   nużymieć         2         3         3         2         1         3         2         1  ...       4.0       0.0       3.0       2.0       0.0       1.0       2.0       4.0       3.0        1
    : 528  podżymieć_podżychie  podżymieć         3         4         1         3         2         3         2         1  ...       1.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 529      rolisać_rolibia    rolisać         1         1         0         1         0         2         1         2  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 530      rolisać_rolipia    rolisać         1         1         0         1         0         2         1         2  ...       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 531    wazycieć_wazychie   wazycieć         0         0         1         0         0         1         1         0  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 532    wazycieć_wazystie   wazycieć         0         0         1         0         0         1         1         0  ...       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 533    wazycieć_wazyśmie   wazycieć         0         0         1         0         0         1         1         0  ...       4.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 534    wazycieć_wazyśnie   wazycieć         0         0         1         0         0         1         1         0  ...       2.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 535    wazymieć_wazychie   wazymieć         1         0         2         1         0         1         2         1  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 536    wazymieć_wazystie   wazymieć         1         0         2         1         0         1         2         1  ...       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 537    wazymieć_wazyśmie   wazymieć         1         0         2         1         0         1         2         1  ...       4.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 538    wazymieć_wazyśnie   wazymieć         1         0         2         1         0         1         2         1  ...       2.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 539    ważymieć_ważychie   ważymieć         3         1         1         2         1         3         3         2  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 540    ważymieć_ważystie   ważymieć         3         1         1         2         1         3         3         2  ...       0.0       1.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    :
    : [15 rows x 72 columns]
    :
    :END:

*** DONE Checkup =WG=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( "="*75 )

df_list = [  st0304_verbs_WG_nouns_WG,  ]
df_info = [ "st0304_verbs_WG_nouns_WG", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[28]:
    # output
    : ===========================================================================
    : ===========================================================================
    : st0304_verbs_WG_nouns_WG
    : ===========================================================================
    : idx count: 541
    : row count: 72
    : ---------------------------------------------------------------------------
    :                  ID   WORD_v  WG_000_v  WG_001_v  WG_002_v  WG_003_v  WG_004_v  WG_005_v  WG_006_v  WG_007_v  ...  WG_024_n  WG_025_n  WG_026_n  WG_027_n  WG_028_n  WG_029_n  WG_030_n  WG_031_n  WG_032_n  CLASS_n
    : 0   aciabać_aciadłe  aciabać         0         0         0         0         0         0         0         0  ...       2.0       1.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 1   aciabać_aciapłe  aciabać         0         0         0         0         0         0         0         0  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 2   aciabać_aciasce  aciabać         0         0         0         0         0         0         0         0  ...       2.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 3   aciabać_aciasje  aciabać         0         0         0         0         0         0         0         0  ...       2.0       1.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 4   aciabać_aciasme  aciabać         0         0         0         0         0         0         0         0  ...       2.0       1.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 5   aciabać_aciatłe  aciabać         0         0         0         0         0         0         0         0  ...       2.0       2.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 6   aciabać_aciatwe  aciabać         0         0         0         0         0         0         0         0  ...       2.0       2.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 7   aciabać_aciazje  aciabać         0         0         0         0         0         0         0         0  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 8   aciadać_aciadłe  aciadać         0         0         0         0         0         0         0         0  ...       2.0       1.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 9   aciadać_aciapłe  aciadać         0         0         0         0         0         0         0         0  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 10  aciadać_aciasce  aciadać         0         0         0         0         0         0         0         0  ...       2.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 11  aciadać_aciasje  aciadać         0         0         0         0         0         0         0         0  ...       2.0       1.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 12  aciadać_aciasme  aciadać         0         0         0         0         0         0         0         0  ...       2.0       1.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 13  aciadać_aciatłe  aciadać         0         0         0         0         0         0         0         0  ...       2.0       2.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 14  aciadać_aciatwe  aciadać         0         0         0         0         0         0         0         0  ...       2.0       2.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    :
    : [15 rows x 72 columns]
    : ---------------------------------------------------------------------------
    :                       ID     WORD_v  WG_000_v  WG_001_v  WG_002_v  WG_003_v  WG_004_v  WG_005_v  WG_006_v  WG_007_v  ...  WG_024_n  WG_025_n  WG_026_n  WG_027_n  WG_028_n  WG_029_n  WG_030_n  WG_031_n  WG_032_n  CLASS_n
    : 526    nużymieć_nużydzie   nużymieć         0         0         0         0         0         0         0         0  ...       3.0       1.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 527    nużymieć_nużystie   nużymieć         0         0         0         0         0         0         0         0  ...       2.0       4.0       2.0       2.0       2.0       1.0       1.0       2.0       1.0        1
    : 528  podżymieć_podżychie  podżymieć         0         0         1         0         0         0         0         0  ...       1.0       1.0       4.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 529      rolisać_rolibia    rolisać         0         0         0         0         4         0         0         0  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 530      rolisać_rolipia    rolisać         0         0         0         0         4         0         0         0  ...       1.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 531    wazycieć_wazychie   wazycieć         1         1         0         4         0         0         0         0  ...       4.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 532    wazycieć_wazystie   wazycieć         1         1         0         4         0         0         0         0  ...       4.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 533    wazycieć_wazyśmie   wazycieć         1         1         0         4         0         0         0         0  ...       0.0       0.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 534    wazycieć_wazyśnie   wazycieć         1         1         0         4         0         0         0         0  ...       4.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 535    wazymieć_wazychie   wazymieć         0         4         0         1         0         1         0         0  ...       4.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 536    wazymieć_wazystie   wazymieć         0         4         0         1         0         1         0         0  ...       4.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 537    wazymieć_wazyśmie   wazymieć         0         4         0         1         0         1         0         0  ...       0.0       0.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 538    wazymieć_wazyśnie   wazymieć         0         4         0         1         0         1         0         0  ...       4.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 539    ważymieć_ważychie   ważymieć         1         3         1         1         4         0         0         1  ...       4.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 540    ważymieć_ważystie   ważymieć         1         3         1         1         4         0         0         1  ...       2.0       2.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    :
    : [15 rows x 72 columns]
    :
    :END:

*** DONE Checkup =WS=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( "="*75 )

df_list = [  st0304_verbs_WS_nouns_WS,  ]
df_info = [ "st0304_verbs_WS_nouns_WS", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[29]:
    # output
    : ===========================================================================
    : ===========================================================================
    : st0304_verbs_WS_nouns_WS
    : ===========================================================================
    : idx count: 541
    : row count: 72
    : ---------------------------------------------------------------------------
    :                  ID   WORD_v  WS_000_v  WS_001_v  WS_002_v  WS_003_v  WS_004_v  WS_005_v  WS_006_v  WS_007_v  ...  WS_024_n  WS_025_n  WS_026_n  WS_027_n  WS_028_n  WS_029_n  WS_030_n  WS_031_n  WS_032_n  CLASS_n
    : 0   aciabać_aciadłe  aciabać         1         1         2         2         3         3         3         1  ...       0.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 1   aciabać_aciapłe  aciabać         1         1         2         2         3         3         3         1  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 2   aciabać_aciasce  aciabać         1         1         2         2         3         3         3         1  ...       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 3   aciabać_aciasje  aciabać         1         1         2         2         3         3         3         1  ...       0.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 4   aciabać_aciasme  aciabać         1         1         2         2         3         3         3         1  ...       0.0       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 5   aciabać_aciatłe  aciabać         1         1         2         2         3         3         3         1  ...       0.0       1.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 6   aciabać_aciatwe  aciabać         1         1         2         2         3         3         3         1  ...       3.0       1.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 7   aciabać_aciazje  aciabać         1         1         2         2         3         3         3         1  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 8   aciadać_aciadłe  aciadać         4         1         0         0         1         1         2         2  ...       0.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 9   aciadać_aciapłe  aciadać         4         1         0         0         1         1         2         2  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 10  aciadać_aciasce  aciadać         4         1         0         0         1         1         2         2  ...       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 11  aciadać_aciasje  aciadać         4         1         0         0         1         1         2         2  ...       0.0       0.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 12  aciadać_aciasme  aciadać         4         1         0         0         1         1         2         2  ...       0.0       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 13  aciadać_aciatłe  aciadać         4         1         0         0         1         1         2         2  ...       0.0       1.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 14  aciadać_aciatwe  aciadać         4         1         0         0         1         1         2         2  ...       3.0       1.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    :
    : [15 rows x 72 columns]
    : ---------------------------------------------------------------------------
    :                       ID     WORD_v  WS_000_v  WS_001_v  WS_002_v  WS_003_v  WS_004_v  WS_005_v  WS_006_v  WS_007_v  ...  WS_024_n  WS_025_n  WS_026_n  WS_027_n  WS_028_n  WS_029_n  WS_030_n  WS_031_n  WS_032_n  CLASS_n
    : 526    nużymieć_nużydzie   nużymieć         2         2         4         2         2         4         1         1  ...       1.0       0.0       2.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 527    nużymieć_nużystie   nużymieć         2         2         4         2         2         4         1         1  ...       2.0       0.0       2.0       3.0       1.0       0.0       2.0       1.0       4.0        1
    : 528  podżymieć_podżychie  podżymieć         4         4         2         3         2         3         3         3  ...       0.0       1.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 529      rolisać_rolibia    rolisać         2         1         1         2         1         2         3         1  ...       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 530      rolisać_rolipia    rolisać         2         1         1         2         1         2         3         1  ...       4.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 531    wazycieć_wazychie   wazycieć         1         0         1         0         0         1         0         0  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 532    wazycieć_wazystie   wazycieć         1         0         1         0         0         1         0         0  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 533    wazycieć_wazyśmie   wazycieć         1         0         1         0         0         1         0         0  ...       4.0       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 534    wazycieć_wazyśnie   wazycieć         1         0         1         0         0         1         0         0  ...       2.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 535    wazymieć_wazychie   wazymieć         2         1         2         1         3         2         3         2  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 536    wazymieć_wazystie   wazymieć         2         1         2         1         3         2         3         2  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 537    wazymieć_wazyśmie   wazymieć         2         1         2         1         3         2         3         2  ...       4.0       0.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 538    wazymieć_wazyśnie   wazymieć         2         1         2         1         3         2         3         2  ...       2.0       1.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 539    ważymieć_ważychie   ważymieć         1         1         1         2         1         3         3         3  ...       0.0       NaN       NaN       NaN       NaN       NaN       NaN       NaN       NaN        1
    : 540    ważymieć_ważystie   ważymieć         1         1         1         2         1         3         3         3  ...       0.0       1.0       0.0       NaN       NaN       NaN       NaN       NaN       NaN        1
    :
    : [15 rows x 72 columns]
    :
    :END:

*** DONE Transpose

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_verbs_WA_nouns_WA_cols = st0304_verbs_WA_nouns_WA.filter( regex="(^ID$)|(WA_[0-9][0-9][0-9])" ).copy()
st0304_verbs_WG_nouns_WG_cols = st0304_verbs_WG_nouns_WG.filter( regex="(^ID$)|(WG_[0-9][0-9][0-9])" ).copy()
st0304_verbs_WS_nouns_WS_cols = st0304_verbs_WS_nouns_WS.filter( regex="(^ID$)|(WS_[0-9][0-9][0-9])" ).copy()

st0304_verbs_WA_nouns_WA_cols.set_index("ID", inplace=True, verify_integrity=True)
st0304_verbs_WG_nouns_WG_cols.set_index("ID", inplace=True, verify_integrity=True)
st0304_verbs_WS_nouns_WS_cols.set_index("ID", inplace=True, verify_integrity=True)

st0304_verbs_WA_nouns_WA_cols_trans = st0304_verbs_WA_nouns_WA_cols.transpose( copy=True )
st0304_verbs_WG_nouns_WG_cols_trans = st0304_verbs_WG_nouns_WG_cols.transpose( copy=True )
st0304_verbs_WS_nouns_WS_cols_trans = st0304_verbs_WS_nouns_WS_cols.transpose( copy=True )


st0304_verbs_WA_nouns_WA_cols_trans["CLASS"] = np.where( st0304_verbs_WA_nouns_WA_cols_trans.index.str.endswith("_v"), 0, 1 )
st0304_verbs_WG_nouns_WG_cols_trans["CLASS"] = np.where( st0304_verbs_WG_nouns_WG_cols_trans.index.str.endswith("_v"), 0, 1 )
st0304_verbs_WS_nouns_WS_cols_trans["CLASS"] = np.where( st0304_verbs_WS_nouns_WS_cols_trans.index.str.endswith("_v"), 0, 1 )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[70]:
    :END:

*** DONE CHECKUP COLS

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_verbs_WA_nouns_WA_cols_trans.columns.values

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[71]:
    # text/plain
    : array(['aciabać_aciadłe', 'aciabać_aciapłe', 'aciabać_aciasce',
    :        'aciabać_aciasje', 'aciabać_aciasme', 'aciabać_aciatłe',
    :        'aciabać_aciatwe', 'aciabać_aciazje', 'aciadać_aciadłe',
    :        'aciadać_aciapłe', 'aciadać_aciasce', 'aciadać_aciasje',
    :        'aciadać_aciasme', 'aciadać_aciatłe', 'aciadać_aciatwe',
    :        'aciadać_aciazje', 'aciagać_aciadłe', 'aciagać_aciapłe',
    :        'aciagać_aciasce', 'aciagać_aciasje', 'aciagać_aciasme',
    :        'aciagać_aciatłe', 'aciagać_aciatwe', 'aciagać_aciazje',
    :        'aciajać_aciadłe', 'aciajać_aciapłe', 'aciajać_aciasce',
    :        'aciajać_aciasje', 'aciajać_aciasme', 'aciajać_aciatłe',
    :        'aciajać_aciatwe', 'aciajać_aciazje', 'aciakać_aciadłe',
    :        'aciakać_aciapłe', 'aciakać_aciasce', 'aciakać_aciasje',
    :        'aciakać_aciasme', 'aciakać_aciatłe', 'aciakać_aciatwe',
    :        'aciakać_aciazje', 'acialać_aciadłe', 'acialać_aciapłe',
    :        'acialać_aciasce', 'acialać_aciasje', 'acialać_aciasme',
    :        'acialać_aciatłe', 'acialać_aciatwe', 'acialać_aciazje',
    :        'aciasać_aciadłe', 'aciasać_aciapłe', 'aciasać_aciasce',
    :        'aciasać_aciasje', 'aciasać_aciasme', 'aciasać_aciatłe',
    :        'aciasać_aciatwe', 'aciasać_aciazje', 'aciatać_aciadłe',
    :        'aciatać_aciapłe', 'aciatać_aciasce', 'aciatać_aciasje',
    :        'aciatać_aciasme', 'aciatać_aciatłe', 'aciatać_aciatwe',
    :        'aciatać_aciazje', 'aciazać_aciadłe', 'aciazać_aciapłe',
    :        'aciazać_aciasce', 'aciazać_aciasje', 'aciazać_aciasme',
    :        'aciazać_aciatłe', 'aciazać_aciatwe', 'aciazać_aciazje',
    :        'aciażać_aciadłe', 'aciażać_aciapłe', 'aciażać_aciasce',
    :        'aciażać_aciasje', 'aciażać_aciasme', 'aciażać_aciatłe',
    :        'aciażać_aciatwe', 'aciażać_aciazje', 'aciamać_aciadłe',
    :        'aciamać_aciapłe', 'aciamać_aciasce', 'aciamać_aciasje',
    :        'aciamać_aciasme', 'aciamać_aciatłe', 'aciamać_aciatwe',
    :        'aciamać_aciazje', 'bakdawić_bakdagra', 'bakdawić_bakdakła',
    :        'bakdawić_bakdazja', 'bakdawić_bakdaśna', 'bapkawić_bapkakła',
    :        'bapkawić_bapkakra', 'bażlawić_bażlałek', 'chacykać_chacynek',
    :        'chobucać_chobunek', 'chobujać_chobunek', 'chobukać_chobunek',
    :        'cobucać_cobunek', 'cobukać_cobunek', 'cobujać_cobunek',
    :        'cocucać_cocunek', 'cocukać_cocunek', 'czaboczić_czaborzęd',
    :        'czabognąć_czaborzęd', 'czaborzić_czaborzęd',
    :        'czaboszić_czaborzęd', 'czabośnąć_czaborzęd',
    :        'czaboznąć_czaborzęd', 'czaboskić_czaborzęd', 'dotazbać_dotaspód',
    :        'dotazbać_dotaśród', 'dotazmać_dotaspód', 'dotazmać_dotaśród',
    :        'dotaftać_dotaspód', 'dotaftać_dotaśród', 'dotaśmać_dotaspód',
    :        'dotaśmać_dotaśród', 'dzaboczić_dzaborzud', 'dzabognąć_dzaborzud',
    :        'dzabośnąć_dzaborzud', 'dzaboznąć_dzaborzud',
    :        'dzaborzić_dzaborzud', 'dzaboskić_dzaborzud', 'ećkawić_ećkadża',
    :        'ećkawić_ećkafta', 'ećkawić_ećkakra', 'ećkawić_ećkałek',
    :        'ećkawić_ećkazja', 'epkawić_epkadża', 'epkawić_epkagla',
    :        'epkawić_epkasma', 'espinić_espisat', 'eżnawać_eżnałek',
    :        'eżnawić_eżnałek', 'firdawić_firdagra', 'firdawić_firdazja',
    :        'firdawić_firdagna', 'fokucać_fokunek', 'fokujać_fokunek',
    :        'grocucać_grocunek', 'grocukać_grocunek', 'grokucać_grokunek',
    :        'grokujać_grokunek', 'grokukać_grokunek', 'grosukać_grosunek',
    :        'kanwijać_kanwigia', 'kanwisać_kanwigia', 'kazycieć_kazychie',
    :        'kazycieć_kazystie', 'kazycieć_kazyśmie', 'kazymieć_kazychie',
    :        'kazymieć_kazystie', 'kazymieć_kazyśmie', 'kułcykać_kułcynek',
    :        'kułzymieć_kułzychie', 'kułzymieć_kułzystie',
    :        'kułzymieć_kułzyśnie', 'kułzycieć_kułzychie',
    :        'kułzycieć_kułzystie', 'kułzycieć_kułzyśnie',
    :        'kunzycieć_kunzydzie', 'kunzycieć_kunzychie',
    :        'kunzycieć_kunzystie', 'kunzycieć_kunzyście',
    :        'kunzycieć_kunzyśmie', 'kunzycieć_kunzyśnie',
    :        'kunzymieć_kunzydzie', 'kunzymieć_kunzychie',
    :        'kunzymieć_kunzystie', 'kunzymieć_kunzyście',
    :        'kunzymieć_kunzyśmie', 'kunzymieć_kunzyśnie', 'łaregać_łarekia',
    :        'łarerać_łarekia', 'łarezać_łarekia', 'łareżać_łarekia',
    :        'memszeć_memnend', 'mepibać_mepidia', 'mepibać_mepipia',
    :        'mepidać_mepidia', 'mepidać_mepipia', 'mepigać_mepidia',
    :        'mepigać_mepipia', 'mepilać_mepidia', 'mepilać_mepipia',
    :        'mepipać_mepidia', 'mepipać_mepipia', 'mepirać_mepidia',
    :        'mepirać_mepipia', 'mepizać_mepidia', 'mepizać_mepipia',
    :        'mepiżać_mepidia', 'mepiżać_mepipia', 'mewijać_mewisia',
    :        'mewijać_mewibia', 'mewisać_mewisia', 'mewisać_mewibia',
    :        'młarykać_młarynek', 'młarywać_młarynek', 'mocebać_mocetła',
    :        'mocebać_mocezja', 'mocedać_mocetła', 'mocedać_mocezja',
    :        'mocefać_mocetła', 'mocefać_mocezja', 'mocegać_mocetła',
    :        'mocegać_mocezja', 'mocehać_mocetła', 'mocehać_mocezja',
    :        'mocejać_mocetła', 'mocejać_mocezja', 'mocekać_mocetła',
    :        'mocekać_mocezja', 'mocepać_mocetła', 'mocepać_mocezja',
    :        'mocerać_mocetła', 'mocerać_mocezja', 'mocetać_mocetła',
    :        'mocetać_mocezja', 'mocezać_mocetła', 'mocezać_mocezja',
    :        'mocelać_mocetła', 'mocelać_mocezja', 'moceżać_mocetła',
    :        'moceżać_mocezja', 'mosepieć_moseznor', 'mosechyć_moseznor',
    :        'mosekieć_moseznor', 'motaftać_motaspód', 'motaśmać_motaspód',
    :        'motazbać_motaspód', 'motazmać_motaspód', 'motadwać_motaspód',
    :        'mowelzać_mowemsko', 'mowełzać_mowemsko', 'mowenzać_mowemsko',
    :        'mowesieć_mowemsko', 'mylisać_mylipia', 'mypibać_mypidia',
    :        'mypibać_mypigia', 'mypidać_mypidia', 'mypidać_mypigia',
    :        'mypigać_mypidia', 'mypigać_mypigia', 'mypilać_mypidia',
    :        'mypilać_mypigia', 'mypipać_mypidia', 'mypipać_mypigia',
    :        'mypirać_mypidia', 'mypirać_mypigia', 'mypizać_mypidia',
    :        'mypizać_mypigia', 'mypiżać_mypidia', 'mypiżać_mypigia',
    :        'nazymieć_nazychie', 'nazymieć_nazystie', 'nazymieć_nazyśnie',
    :        'nazycieć_nazychie', 'nazycieć_nazystie', 'nazycieć_nazyśnie',
    :        'nichinić_nichimyt', 'nichinić_nichirat', 'nichinić_nichimit',
    :        'nichinić_nichisat', 'nichipić_nichimyt', 'nichipić_nichirat',
    :        'nichipić_nichimit', 'nichipić_nichisat', 'nimlisać_nimlibia',
    :        'niźwijać_niźwibia', 'niźwisać_niźwibia', 'ociabać_ociasce',
    :        'ociabać_ociasje', 'ociabać_ociasme', 'ociabać_ociatłe',
    :        'ociajać_ociasce', 'ociajać_ociasje', 'ociajać_ociasme',
    :        'ociajać_ociatłe', 'ociazać_ociasce', 'ociazać_ociasje',
    :        'ociazać_ociasme', 'ociazać_ociatłe', 'ociamać_ociasce',
    :        'ociamać_ociasje', 'ociamać_ociasme', 'ociamać_ociatłe',
    :        'omukawić_omukakra', 'plwocić_plwopie', 'pocedać_pocetwa',
    :        'pocedać_pocerza', 'pocefać_pocetwa', 'pocefać_pocerza',
    :        'pocehać_pocetwa', 'pocehać_pocerza', 'pocejać_pocetwa',
    :        'pocejać_pocerza', 'pocetać_pocetwa', 'pocetać_pocerza',
    :        'poceżać_pocetwa', 'poceżać_pocerza', 'pocepać_pocetwa',
    :        'pocepać_pocerza', 'pocezać_pocetwa', 'pocezać_pocerza',
    :        'pozycieć_pozydzie', 'pozycieć_pozyście', 'pozymieć_pozydzie',
    :        'pozymieć_pozyście', 'radnawać_radnałek', 'radnawić_radnałek',
    :        'rocebać_rocezja', 'rocebać_rocepła', 'rocebać_roceska',
    :        'rocebać_rocesza', 'rocedać_rocezja', 'rocedać_rocepła',
    :        'rocedać_roceska', 'rocedać_rocesza', 'rocefać_rocezja',
    :        'rocefać_rocepła', 'rocefać_roceska', 'rocefać_rocesza',
    :        'rocegać_rocezja', 'rocegać_rocepła', 'rocegać_roceska',
    :        'rocegać_rocesza', 'rocehać_rocezja', 'rocehać_rocepła',
    :        'rocehać_roceska', 'rocehać_rocesza', 'rocejać_rocezja',
    :        'rocejać_rocepła', 'rocejać_roceska', 'rocejać_rocesza',
    :        'rocekać_rocezja', 'rocekać_rocepła', 'rocekać_roceska',
    :        'rocekać_rocesza', 'rocelać_rocezja', 'rocelać_rocepła',
    :        'rocelać_roceska', 'rocelać_rocesza', 'rocepać_rocezja',
    :        'rocepać_rocepła', 'rocepać_roceska', 'rocepać_rocesza',
    :        'rocerać_rocezja', 'rocerać_rocepła', 'rocerać_roceska',
    :        'rocerać_rocesza', 'rocetać_rocezja', 'rocetać_rocepła',
    :        'rocetać_roceska', 'rocetać_rocesza', 'rocezać_rocezja',
    :        'rocezać_rocepła', 'rocezać_roceska', 'rocezać_rocesza',
    :        'roceżać_rocezja', 'roceżać_rocepła', 'roceżać_roceska',
    :        'roceżać_rocesza', 'rorefać_rorekia', 'roregać_rorekia',
    :        'rorehać_rorekia', 'rorepać_rorekia', 'rorerać_rorekia',
    :        'rorezać_rorekia', 'roreżać_rorekia', 'rosechyć_roseznor',
    :        'rosekieć_roseznor', 'rosepieć_roseznor', 'rotaftać_rotapłód',
    :        'rotaftać_rotagród', 'rotazbać_rotapłód', 'rotazbać_rotagród',
    :        'rotazmać_rotapłód', 'rotazmać_rotagród', 'rotadwać_rotapłód',
    :        'rotadwać_rotagród', 'rotaśmać_rotapłód', 'rotaśmać_rotagród',
    :        'rowelzać_rowedsko', 'rowelzać_rowemsko', 'rowełzać_rowedsko',
    :        'rowełzać_rowemsko', 'rowenzać_rowedsko', 'rowenzać_rowemsko',
    :        'rowesieć_rowedsko', 'rowesieć_rowemsko', 'rywisać_rywibia',
    :        'rywisać_rywigia', 'rywisać_rywipia', 'sepacerać_sepacesza',
    :        'sepacezać_sepacesza', 'seracehać_seracesma',
    :        'seracehać_seracesza', 'seracehać_seracetła',
    :        'seracekać_seracesma', 'seracekać_seracesza',
    :        'seracekać_seracetła', 'seracelać_seracesma',
    :        'seracelać_seracesza', 'seracelać_seracetła',
    :        'seracezać_seracesma', 'seracezać_seracesza',
    :        'seracezać_seracetła', 'skaboczić_skaborzod',
    :        'skabośnąć_skaborzod', 'skaboznąć_skaborzod',
    :        'skaborzić_skaborzod', 'skaboskić_skaborzod', 'soboczić_soborzęd',
    :        'soboczić_soborzod', 'soboczić_soborzud', 'sobognąć_soborzęd',
    :        'sobognąć_soborzod', 'sobognąć_soborzud', 'sobośnąć_soborzęd',
    :        'sobośnąć_soborzod', 'sobośnąć_soborzud', 'soboznąć_soborzęd',
    :        'soboznąć_soborzod', 'soboznąć_soborzud', 'sobochić_soborzęd',
    :        'sobochić_soborzod', 'sobochić_soborzud', 'soborzić_soborzęd',
    :        'soborzić_soborzod', 'soborzić_soborzud', 'soboskić_soborzęd',
    :        'soboskić_soborzod', 'soboskić_soborzud', 'sobostić_soborzęd',
    :        'sobostić_soborzod', 'sobostić_soborzud', 'soboszić_soborzęd',
    :        'soboszić_soborzod', 'soboszić_soborzud', 'socadiać_socagród',
    :        'socafiać_socagród', 'socagiać_socagród', 'socasiać_socagród',
    :        'socatiać_socagród', 'socaziać_socagród', 'sotaftać_sotagród',
    :        'sotaftać_sotaśród', 'sotazbać_sotagród', 'sotazbać_sotaśród',
    :        'sotadwać_sotagród', 'sotadwać_sotaśród', 'sotaśmać_sotagród',
    :        'sotaśmać_sotaśród', 'sotazmać_sotagród', 'sotazmać_sotaśród',
    :        'spobochić_spoborzud', 'spoboczić_spoborzud',
    :        'spobognąć_spoborzud', 'spoborzić_spoborzud',
    :        'spoboszić_spoborzud', 'spobośnąć_spoborzud',
    :        'spoboznąć_spoborzud', 'spoboskić_spoborzud',
    :        'spobostić_spoborzud', 'stabochić_staborzud',
    :        'stabochić_staborzod', 'staboczić_staborzud',
    :        'staboczić_staborzod', 'stabognąć_staborzud',
    :        'stabognąć_staborzod', 'staborzić_staborzud',
    :        'staborzić_staborzod', 'stabośnąć_staborzud',
    :        'stabośnąć_staborzod', 'staboznąć_staborzud',
    :        'staboznąć_staborzod', 'staboskić_staborzud',
    :        'staboskić_staborzod', 'stabostić_staborzud',
    :        'stabostić_staborzod', 'sylarykać_sylarynek',
    :        'sylarywać_sylarynek', 'sypacykać_sypacynek',
    :        'syparykać_syparynek', 'syparywać_syparynek',
    :        'szaboczić_szaborzęd', 'szabognąć_szaborzęd',
    :        'szaborzić_szaborzęd', 'szaboszić_szaborzęd',
    :        'szabośnąć_szaborzęd', 'szaboznąć_szaborzęd',
    :        'szabochić_szaborzęd', 'szaboskić_szaborzęd',
    :        'szabostić_szaborzęd', 'tkwicować_tkwicodła', 'ucirczyć_ucirstwa',
    :        'udrkukać_udrkunek', 'udrkucać_udrkunek', 'udrkujać_udrkunek',
    :        'wawydzić_wawykłag', 'wowoftać_wowobrót', 'wowozbać_wowobrót',
    :        'wowozmać_wowobrót', 'wowośmać_wowobrót', 'wukawić_wukałek',
    :        'wunawać_wunanie', 'wunawić_wunanie', 'zapumkić_zapumtek',
    :        'zapumnić_zapumtek', 'zwlocić_zwlopie', 'chorucać_chorunek',
    :        'chorukać_chorunek', 'kożymieć_kożychie', 'kożymieć_kożystie',
    :        'kułsykać_kułsynek', 'moregać_morekia', 'moregać_moretia',
    :        'morerać_morekia', 'morerać_moretia', 'nazjawać_nazjacie',
    :        'neżymieć_neżydzie', 'neżymieć_neżystie', 'nibfijać_nibfinie',
    :        'nużymieć_nużydzie', 'nużymieć_nużystie', 'podżymieć_podżychie',
    :        'rolisać_rolibia', 'rolisać_rolipia', 'wazycieć_wazychie',
    :        'wazycieć_wazystie', 'wazycieć_wazyśmie', 'wazycieć_wazyśnie',
    :        'wazymieć_wazychie', 'wazymieć_wazystie', 'wazymieć_wazyśmie',
    :        'wazymieć_wazyśnie', 'ważymieć_ważychie', 'ważymieć_ważystie',
    :        'CLASS'], dtype=object)
    :END:

*** DONE CHECKUP ROWS

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

st0304_verbs_WA_nouns_WA_cols_trans.index
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[72]:
    # text/plain
    : Index(['WA_000_v', 'WA_001_v', 'WA_002_v', 'WA_003_v', 'WA_004_v', 'WA_005_v',
    :        'WA_006_v', 'WA_007_v', 'WA_008_v', 'WA_009_v', 'WA_010_v', 'WA_011_v',
    :        'WA_012_v', 'WA_013_v', 'WA_014_v', 'WA_015_v', 'WA_016_v', 'WA_017_v',
    :        'WA_018_v', 'WA_019_v', 'WA_020_v', 'WA_021_v', 'WA_022_v', 'WA_023_v',
    :        'WA_024_v', 'WA_025_v', 'WA_026_v', 'WA_027_v', 'WA_028_v', 'WA_029_v',
    :        'WA_030_v', 'WA_031_v', 'WA_032_v', 'WA_000_n', 'WA_001_n', 'WA_002_n',
    :        'WA_003_n', 'WA_004_n', 'WA_005_n', 'WA_006_n', 'WA_007_n', 'WA_008_n',
    :        'WA_009_n', 'WA_010_n', 'WA_011_n', 'WA_012_n', 'WA_013_n', 'WA_014_n',
    :        'WA_015_n', 'WA_016_n', 'WA_017_n', 'WA_018_n', 'WA_019_n', 'WA_020_n',
    :        'WA_021_n', 'WA_022_n', 'WA_023_n', 'WA_024_n', 'WA_025_n', 'WA_026_n',
    :        'WA_027_n', 'WA_028_n', 'WA_029_n', 'WA_030_n', 'WA_031_n', 'WA_032_n'],
    :       dtype='object')
    :END:

*** DONE Checkup =WA= transposed

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( "="*75 )

df_list = [  st0304_verbs_WA_nouns_WA_cols_trans,  ]
df_info = [ "st0304_verbs_WA_nouns_WA_cols_trans", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[73]:
    # output
    : ===========================================================================
    : ===========================================================================
    : st0304_verbs_WA_nouns_WA_cols_trans
    : ===========================================================================
    : idx count: 66
    : row count: 542
    : ---------------------------------------------------------------------------
    : ID        aciabać_aciadłe  aciabać_aciapłe  aciabać_aciasce  aciabać_aciasje  aciabać_aciasme  aciabać_aciatłe  aciabać_aciatwe  aciabać_aciazje  aciadać_aciadłe  aciadać_aciapłe  ...  wazycieć_wazystie  wazycieć_wazyśmie  wazycieć_wazyśnie  wazymieć_wazychie  wazymieć_wazystie  wazymieć_wazyśmie  wazymieć_wazyśnie  ważymieć_ważychie  ważymieć_ważystie  CLASS
    : WA_000_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                1.0                1.0                1.0                1.0                3.0                3.0      0
    : WA_001_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              3.0              3.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                1.0                1.0      0
    : WA_002_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0  ...                1.0                1.0                1.0                2.0                2.0                2.0                2.0                1.0                1.0      0
    : WA_003_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                1.0                1.0                1.0                1.0                2.0                2.0      0
    : WA_004_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              3.0              3.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                1.0                1.0      0
    : WA_005_v              4.0              4.0              4.0              4.0              4.0              4.0              4.0              4.0              0.0              0.0  ...                1.0                1.0                1.0                1.0                1.0                1.0                1.0                3.0                3.0      0
    : WA_006_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              4.0              4.0  ...                1.0                1.0                1.0                2.0                2.0                2.0                2.0                3.0                3.0      0
    : WA_007_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              2.0              2.0  ...                0.0                0.0                0.0                1.0                1.0                1.0                1.0                2.0                2.0      0
    : WA_008_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                2.0                2.0      0
    : WA_009_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              1.0              1.0  ...                2.0                2.0                2.0                1.0                1.0                1.0                1.0                2.0                2.0      0
    : WA_010_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              3.0              3.0  ...                0.0                0.0                0.0                3.0                3.0                3.0                3.0                1.0                1.0      0
    : WA_011_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              1.0              1.0  ...                0.0                0.0                0.0                3.0                3.0                3.0                3.0                2.0                2.0      0
    : WA_012_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                2.0                2.0                2.0                0.0                0.0                0.0                0.0                1.0                1.0      0
    : WA_013_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              0.0              0.0  ...                1.0                1.0                1.0                2.0                2.0                2.0                2.0                1.0                1.0      0
    : WA_014_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              2.0              2.0  ...                1.0                1.0                1.0                3.0                3.0                3.0                3.0                1.0                1.0      0
    :
    : [15 rows x 542 columns]
    : ---------------------------------------------------------------------------
    : ID        aciabać_aciadłe  aciabać_aciapłe  aciabać_aciasce  aciabać_aciasje  aciabać_aciasme  aciabać_aciatłe  aciabać_aciatwe  aciabać_aciazje  aciadać_aciadłe  aciadać_aciapłe  ...  wazycieć_wazystie  wazycieć_wazyśmie  wazycieć_wazyśnie  wazymieć_wazychie  wazymieć_wazystie  wazymieć_wazyśmie  wazymieć_wazyśnie  ważymieć_ważychie  ważymieć_ważystie  CLASS
    : WA_018_n              0.0              2.0              2.0              0.0              0.0              0.0              1.0              0.0              0.0              2.0  ...                0.0                0.0                3.0                4.0                0.0                0.0                3.0                4.0                4.0      1
    : WA_019_n              1.0              0.0              0.0              1.0              1.0              2.0              0.0              3.0              1.0              0.0  ...                1.0                1.0                1.0                4.0                1.0                1.0                1.0                4.0                2.0      1
    : WA_020_n              0.0              4.0              0.0              0.0              0.0              4.0              4.0              3.0              0.0              4.0  ...                4.0                0.0                3.0                0.0                4.0                0.0                3.0                1.0                1.0      1
    : WA_021_n              0.0              3.0              0.0              0.0              0.0              2.0              1.0              0.0              0.0              3.0  ...                3.0                2.0                2.0                0.0                3.0                2.0                2.0                2.0                0.0      1
    : WA_022_n              1.0              3.0              0.0              0.0              0.0              0.0              0.0              0.0              1.0              3.0  ...                0.0                1.0                3.0                2.0                0.0                1.0                3.0                1.0                2.0      1
    : WA_023_n              0.0              NaN              2.0              0.0              0.0              0.0              0.0              NaN              0.0              NaN  ...                0.0                2.0                2.0                0.0                0.0                2.0                2.0                0.0                2.0      1
    : WA_024_n              4.0              NaN              0.0              2.0              0.0              1.0              0.0              NaN              4.0              NaN  ...                1.0                4.0                2.0                0.0                1.0                4.0                2.0                0.0                0.0      1
    : WA_025_n              0.0              NaN              2.0              0.0              0.0              0.0              1.0              NaN              0.0              NaN  ...                NaN                0.0                1.0                NaN                NaN                0.0                1.0                NaN                1.0      1
    : WA_026_n              1.0              NaN              NaN              0.0              0.0              0.0              0.0              NaN              1.0              NaN  ...                NaN                0.0                NaN                NaN                NaN                0.0                NaN                NaN                1.0      1
    : WA_027_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WA_028_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WA_029_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WA_030_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WA_031_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WA_032_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    :
    : [15 rows x 542 columns]
    :
    :END:

*** DONE Checkup =WG= transposed

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( "="*75 )

df_list = [  st0304_verbs_WG_nouns_WG_cols_trans,  ]
df_info = [ "st0304_verbs_WG_nouns_WG_cols_trans", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[74]:
    # output
    : ===========================================================================
    : ===========================================================================
    : st0304_verbs_WG_nouns_WG_cols_trans
    : ===========================================================================
    : idx count: 66
    : row count: 542
    : ---------------------------------------------------------------------------
    : ID        aciabać_aciadłe  aciabać_aciapłe  aciabać_aciasce  aciabać_aciasje  aciabać_aciasme  aciabać_aciatłe  aciabać_aciatwe  aciabać_aciazje  aciadać_aciadłe  aciadać_aciapłe  ...  wazycieć_wazystie  wazycieć_wazyśmie  wazycieć_wazyśnie  wazymieć_wazychie  wazymieć_wazystie  wazymieć_wazyśmie  wazymieć_wazyśnie  ważymieć_ważychie  ważymieć_ważystie  CLASS
    : WG_000_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                1.0                1.0                1.0                0.0                0.0                0.0                0.0                1.0                1.0      0
    : WG_001_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                1.0                1.0                1.0                4.0                4.0                4.0                4.0                3.0                3.0      0
    : WG_002_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                1.0                1.0      0
    : WG_003_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                4.0                4.0                4.0                1.0                1.0                1.0                1.0                1.0                1.0      0
    : WG_004_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                4.0                4.0      0
    : WG_005_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                1.0                1.0                1.0                1.0                0.0                0.0      0
    : WG_006_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                0.0                0.0      0
    : WG_007_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                1.0                1.0      0
    : WG_008_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              0.0              0.0  ...                3.0                3.0                3.0                1.0                1.0                1.0                1.0                1.0                1.0      0
    : WG_009_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                4.0                4.0                4.0                0.0                0.0                0.0                0.0                0.0                0.0      0
    : WG_010_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                1.0                1.0                1.0                0.0                0.0                0.0                0.0                0.0                0.0      0
    : WG_011_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                4.0                4.0      0
    : WG_012_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                2.0                2.0      0
    : WG_013_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              4.0              4.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                4.0                4.0      0
    : WG_014_v              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0              0.0  ...                2.0                2.0                2.0                1.0                1.0                1.0                1.0                2.0                2.0      0
    :
    : [15 rows x 542 columns]
    : ---------------------------------------------------------------------------
    : ID        aciabać_aciadłe  aciabać_aciapłe  aciabać_aciasce  aciabać_aciasje  aciabać_aciasme  aciabać_aciatłe  aciabać_aciatwe  aciabać_aciazje  aciadać_aciadłe  aciadać_aciapłe  ...  wazycieć_wazystie  wazycieć_wazyśmie  wazycieć_wazyśnie  wazymieć_wazychie  wazymieć_wazystie  wazymieć_wazyśmie  wazymieć_wazyśnie  ważymieć_ważychie  ważymieć_ważystie  CLASS
    : WG_018_n              2.0              2.0              4.0              1.0              2.0              4.0              4.0              3.0              2.0              2.0  ...                1.0                2.0                2.0                1.0                1.0                2.0                2.0                1.0                2.0      1
    : WG_019_n              2.0              3.0              2.0              2.0              2.0              1.0              2.0              1.0              2.0              3.0  ...                0.0                1.0                2.0                1.0                0.0                1.0                2.0                1.0                4.0      1
    : WG_020_n              2.0              2.0              4.0              1.0              2.0              2.0              1.0              1.0              2.0              2.0  ...                2.0                1.0                2.0                1.0                2.0                1.0                2.0                3.0                2.0      1
    : WG_021_n              4.0              2.0              4.0              1.0              4.0              2.0              2.0              2.0              4.0              2.0  ...                1.0                4.0                3.0                1.0                1.0                4.0                3.0                2.0                0.0      1
    : WG_022_n              2.0              2.0              4.0              1.0              2.0              2.0              2.0              4.0              2.0              2.0  ...                1.0                1.0                3.0                1.0                1.0                1.0                3.0                4.0                2.0      1
    : WG_023_n              2.0              NaN              4.0              2.0              2.0              1.0              1.0              NaN              2.0              NaN  ...                2.0                1.0                1.0                1.0                2.0                1.0                1.0                1.0                2.0      1
    : WG_024_n              2.0              NaN              2.0              2.0              2.0              2.0              2.0              NaN              2.0              NaN  ...                4.0                0.0                4.0                4.0                4.0                0.0                4.0                4.0                2.0      1
    : WG_025_n              1.0              NaN              4.0              1.0              1.0              2.0              2.0              NaN              1.0              NaN  ...                NaN                0.0                2.0                NaN                NaN                0.0                2.0                NaN                2.0      1
    : WG_026_n              4.0              NaN              NaN              4.0              4.0              2.0              2.0              NaN              4.0              NaN  ...                NaN                2.0                NaN                NaN                NaN                2.0                NaN                NaN                2.0      1
    : WG_027_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WG_028_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WG_029_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WG_030_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WG_031_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WG_032_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    :
    : [15 rows x 542 columns]
    :
    :END:

*** DONE Checkup =WS= transposed

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0078.py

print( "="*75 )

df_list = [  st0304_verbs_WS_nouns_WS_cols_trans,  ]
df_info = [ "st0304_verbs_WS_nouns_WS_cols_trans", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[75]:
    # output
    : ===========================================================================
    : ===========================================================================
    : st0304_verbs_WS_nouns_WS_cols_trans
    : ===========================================================================
    : idx count: 66
    : row count: 542
    : ---------------------------------------------------------------------------
    : ID        aciabać_aciadłe  aciabać_aciapłe  aciabać_aciasce  aciabać_aciasje  aciabać_aciasme  aciabać_aciatłe  aciabać_aciatwe  aciabać_aciazje  aciadać_aciadłe  aciadać_aciapłe  ...  wazycieć_wazystie  wazycieć_wazyśmie  wazycieć_wazyśnie  wazymieć_wazychie  wazymieć_wazystie  wazymieć_wazyśmie  wazymieć_wazyśnie  ważymieć_ważychie  ważymieć_ważystie  CLASS
    : WS_000_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              4.0              4.0  ...                1.0                1.0                1.0                2.0                2.0                2.0                2.0                1.0                1.0      0
    : WS_001_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0  ...                0.0                0.0                0.0                1.0                1.0                1.0                1.0                1.0                1.0      0
    : WS_002_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              0.0              0.0  ...                1.0                1.0                1.0                2.0                2.0                2.0                2.0                1.0                1.0      0
    : WS_003_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              0.0              0.0  ...                0.0                0.0                0.0                1.0                1.0                1.0                1.0                2.0                2.0      0
    : WS_004_v              3.0              3.0              3.0              3.0              3.0              3.0              3.0              3.0              1.0              1.0  ...                0.0                0.0                0.0                3.0                3.0                3.0                3.0                1.0                1.0      0
    : WS_005_v              3.0              3.0              3.0              3.0              3.0              3.0              3.0              3.0              1.0              1.0  ...                1.0                1.0                1.0                2.0                2.0                2.0                2.0                3.0                3.0      0
    : WS_006_v              3.0              3.0              3.0              3.0              3.0              3.0              3.0              3.0              2.0              2.0  ...                0.0                0.0                0.0                3.0                3.0                3.0                3.0                3.0                3.0      0
    : WS_007_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              2.0              2.0  ...                0.0                0.0                0.0                2.0                2.0                2.0                2.0                3.0                3.0      0
    : WS_008_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              0.0              0.0  ...                2.0                2.0                2.0                1.0                1.0                1.0                1.0                4.0                4.0      0
    : WS_009_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              2.0              2.0  ...                3.0                3.0                3.0                1.0                1.0                1.0                1.0                3.0                3.0      0
    : WS_010_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              3.0              3.0  ...                1.0                1.0                1.0                3.0                3.0                3.0                3.0                1.0                1.0      0
    : WS_011_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              1.0              1.0  ...                0.0                0.0                0.0                2.0                2.0                2.0                2.0                2.0                2.0      0
    : WS_012_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              0.0              0.0  ...                0.0                0.0                0.0                0.0                0.0                0.0                0.0                1.0                1.0      0
    : WS_013_v              2.0              2.0              2.0              2.0              2.0              2.0              2.0              2.0              0.0              0.0  ...                3.0                3.0                3.0                1.0                1.0                1.0                1.0                1.0                1.0      0
    : WS_014_v              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0              1.0  ...                0.0                0.0                0.0                3.0                3.0                3.0                3.0                2.0                2.0      0
    :
    : [15 rows x 542 columns]
    : ---------------------------------------------------------------------------
    : ID        aciabać_aciadłe  aciabać_aciapłe  aciabać_aciasce  aciabać_aciasje  aciabać_aciasme  aciabać_aciatłe  aciabać_aciatwe  aciabać_aciazje  aciadać_aciadłe  aciadać_aciapłe  ...  wazycieć_wazystie  wazycieć_wazyśmie  wazycieć_wazyśnie  wazymieć_wazychie  wazymieć_wazystie  wazymieć_wazyśmie  wazymieć_wazyśnie  ważymieć_ważychie  ważymieć_ważystie  CLASS
    : WS_018_n              2.0              0.0              2.0              2.0              1.0              0.0              3.0              0.0              2.0              0.0  ...                0.0                4.0                3.0                4.0                0.0                4.0                3.0                4.0                3.0      1
    : WS_019_n              1.0              0.0              0.0              1.0              2.0              1.0              1.0              2.0              1.0              0.0  ...                0.0                2.0                2.0                2.0                0.0                2.0                2.0                2.0                2.0      1
    : WS_020_n              1.0              1.0              0.0              1.0              0.0              2.0              3.0              3.0              1.0              1.0  ...                2.0                0.0                2.0                1.0                2.0                0.0                2.0                1.0                1.0      1
    : WS_021_n              2.0              3.0              0.0              1.0              0.0              1.0              1.0              0.0              2.0              3.0  ...                1.0                2.0                3.0                0.0                1.0                2.0                3.0                1.0                0.0      1
    : WS_022_n              0.0              2.0              0.0              0.0              0.0              2.0              2.0              0.0              0.0              2.0  ...                2.0                1.0                3.0                3.0                2.0                1.0                3.0                0.0                0.0      1
    : WS_023_n              0.0              NaN              0.0              0.0              0.0              0.0              0.0              NaN              0.0              NaN  ...                0.0                3.0                4.0                0.0                0.0                3.0                4.0                0.0                0.0      1
    : WS_024_n              0.0              NaN              0.0              0.0              0.0              0.0              3.0              NaN              0.0              NaN  ...                0.0                4.0                2.0                0.0                0.0                4.0                2.0                0.0                0.0      1
    : WS_025_n              0.0              NaN              1.0              0.0              0.0              1.0              1.0              NaN              0.0              NaN  ...                NaN                0.0                1.0                NaN                NaN                0.0                1.0                NaN                1.0      1
    : WS_026_n              0.0              NaN              NaN              0.0              1.0              2.0              1.0              NaN              0.0              NaN  ...                NaN                1.0                NaN                NaN                NaN                1.0                NaN                NaN                0.0      1
    : WS_027_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WS_028_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WS_029_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WS_030_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WS_031_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    : WS_032_n              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN              NaN  ...                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN                NaN      1
    :
    : [15 rows x 542 columns]
    :
    :END:

** Proc 90: Save
*** DONE Save as Excel =XLSX=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0301.py

DEMO_MODE = False

if not DEMO_MODE:
    df_to_xlsx( st0304_verbs_WA_nouns_WA, df_name="st0304_verbs_WA_nouns_WA", df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( st0304_verbs_WG_nouns_WG, df_name="st0304_verbs_WG_nouns_WG", df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( st0304_verbs_WS_nouns_WS, df_name="st0304_verbs_WS_nouns_WS", df_path="data_out", add_time=False, verbose=1, )

    df_to_xlsx( st0304_verbs_WA_nouns_WA_cols_trans, df_name="st0304_verbs_WA_nouns_WA_cols_trans", df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( st0304_verbs_WG_nouns_WG_cols_trans, df_name="st0304_verbs_WG_nouns_WG_cols_trans", df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( st0304_verbs_WS_nouns_WS_cols_trans, df_name="st0304_verbs_WS_nouns_WS_cols_trans", df_path="data_out", add_time=False, verbose=1, )

    print( "="*75 )
    print("Saved *.xlsx")
else:
    print("*** Not saving any *.xlsx files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[76]:
    # output
    : Saving DataFrame as: data_out/st0304_verbs_WA_nouns_WA.xlsx
    : Saving DataFrame as: data_out/st0304_verbs_WG_nouns_WG.xlsx
    : Saving DataFrame as: data_out/st0304_verbs_WS_nouns_WS.xlsx
    : Saving DataFrame as: data_out/st0304_verbs_WA_nouns_WA_cols_trans.xlsx
    : Saving DataFrame as: data_out/st0304_verbs_WG_nouns_WG_cols_trans.xlsx
    : Saving DataFrame as: data_out/st0304_verbs_WS_nouns_WS_cols_trans.xlsx
    : ===========================================================================
    : Saved *.xlsx
    :
    :END:

* DONE Testing =savReaderWriter=
** DONE Help on =savReaderWriter=
*** DONE Help on =savReaderWriter=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

import pandas as pd
import numpy as np
import savReaderWriter as spss

print( spss.__doc__ )

pp( dir( spss ) )
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[85]:
    # output
    :
    : savReaderWriter: A cross-platform Python interface to the IBM SPSS
    : Statistics Input Output Module. Read or Write SPSS system files (.sav, .zsav)
    :
    : .. moduleauthor:: Albert-Jan Roskam <fomcl "at" yahoo "dot" com>
    :
    :
    : ['ARRAY',
    :  'ArgumentError',
    :  'Array',
    :  'BigEndianStructure',
    :  'CDLL',
    :  'CFUNCTYPE',
    :  'DEFAULT_MODE',
    :  'Generic',
    :  'Header',
    :  'LibraryLoader',
    :  'LittleEndianStructure',
    :  'MAXLENGTHS',
    :  'POINTER',
    :  'PYFUNCTYPE',
    :  'PyDLL',
    :  'QUARTERS',
    :  'RTLD_GLOBAL',
    :  'RTLD_LOCAL',
    :  'SPSSIOError',
    :  'SPSSIOWarning',
    :  'SavHeaderReader',
    :  'SavReader',
    :  'SavWriter',
    :  'SetPointerType',
    :  'Structure',
    :  'Union',
    :  '__all__',
    :  '__author__',
    :  '__builtins__',
    :  '__cached__',
    :  '__doc__',
    :  '__file__',
    :  '__loader__',
    :  '__name__',
    :  '__package__',
    :  '__path__',
    :  '__spec__',
    :  '__version__',
    :  '__warningregistry__',
    :  'action',
    :  'actions',
    :  'addressof',
    :  'alignment',
    :  'allFormats',
    :  'basestring',
    :  'byref',
    :  'bytez',
    :  'bytify',
    :  'cWriterowOK',
    :  'c_bool',
    :  'c_buffer',
    :  'c_byte',
    :  'c_char',
    :  'c_char_p',
    :  'c_char_py3k',
    :  'c_double',
    :  'c_float',
    :  'c_int',
    :  'c_int16',
    :  'c_int32',
    :  'c_int64',
    :  'c_int8',
    :  'c_long',
    :  'c_longdouble',
    :  'c_longlong',
    :  'c_short',
    :  'c_size_t',
    :  'c_ssize_t',
    :  'c_ubyte',
    :  'c_uint',
    :  'c_uint16',
    :  'c_uint32',
    :  'c_uint64',
    :  'c_uint8',
    :  'c_ulong',
    :  'c_ulonglong',
    :  'c_ushort',
    :  'c_void_p',
    :  'c_voidp',
    :  'c_wchar',
    :  'c_wchar_p',
    :  'cast',
    :  'cdll',
    :  'checkErrsWarns',
    :  'collections',
    :  'create_string_buffer',
    :  'create_unicode_buffer',
    :  'ctypes',
    :  'datetime',
    :  'encodings',
    :  'functools',
    :  'gc',
    :  'get_errno',
    :  'getpass',
    :  'implements_to_string',
    :  'isPy3k',
    :  'locale',
    :  'math',
    :  'memmove',
    :  'memset',
    :  'numpy',
    :  'numpyOk',
    :  'operator',
    :  'os',
    :  'platform',
    :  'pointer',
    :  'psycoOk',
    :  'py_object',
    :  'pydll',
    :  'pythonapi',
    :  're',
    :  'resize',
    :  'retcodes',
    :  'rich_comparison',
    :  'segfaults',
    :  'set_errno',
    :  'sizeof',
    :  'string_at',
    :  'struct',
    :  'supportedDates',
    :  'sys',
    :  'time',
    :  'unicode',
    :  'userMissingValues',
    :  'util',
    :  'version',
    :  'warnings',
    :  'wstring_at',
    :  'xrange']
    :
    :END:

*** DONE Help on =savReaderWriter.SavReader=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

print( spss.SavReader.__doc__ )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[86]:
    # output
    :  Read Spss system files (.sav, .zsav)
    :
    :     Parameters:
    :     -savFileName: the file name of the spss data file
    :     -returnHeader: Boolean that indicates whether the first record should
    :         be a list of variable names (default = False)
    :     -recodeSysmisTo: indicates to which value missing values should
    :         be recoded (default = None),
    :     -selectVars: indicates which variables in the file should be selected.
    :         The variables should be specified as a list or a tuple of
    :         valid variable names. If None is specified, all variables
    :         in the file are used (default = None)
    :     -idVar: indicates which variable in the file should be used for use as id
    :         variable for the 'get' method (default = None)
    :     -verbose: Boolean that indicates whether information about the spss data
    :         file (e.g., number of cases, variable names, file size) should be
    :         printed on the screen (default = False).
    :     -rawMode: Boolean that indicates whether values should get SPSS-style
    :         formatting, and whether date variables (if present) should be converted
    :         to ISO-dates. If True, the program does not format any values, which
    :         increases processing speed. (default = False)
    :     -ioUtf8: indicates the mode in which text communicated to or from the
    :         I/O Module will be. Valid values are True (UTF-8 mode aka Unicode mode)
    :         and False (Codepage mode). Cf. SET UNICODE=ON/OFF (default = False)
    :     -ioLocale: indicates the locale of the I/O module. Cf. SET LOCALE (default
    :         = None, which corresponds to ".".join(locale.getlocale())
    :
    :     Typical use:
    :     savFileName = "someFile.sav"
    :     with SavReader(savFileName, returnHeader=True) as reader:
    :         header = next(reader)
    :         for line in reader:
    :             process(line)
    :
    :
    :END:

*** DONE Help on =savReaderWriter.SavWriter=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

print( spss.SavWriter.__doc__ )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[87]:
    # output
    :  Write Spss system files (.sav, .zsav)
    :
    :     Parameters:
    :     * Formal
    :     -savFileName: the file name of the spss data file. File names that end with
    :       '.zsav' are compressed using the ZLIB (ZSAV) compression scheme
    :       (requires v21 SPSS I/O files), while for file names that end with '.sav'
    :       the 'old' compression scheme is used (it is not possible to generate
    :       uncompressed files unless you modify the source code).
    :     -varNames: list of the variable names in the order in which they appear in
    :       in the spss data file.
    :     -varTypes: varTypes dictionary {varName: varType}, where varType == 0 means
    :       'numeric', and varType > 0 means 'character' of that length (in bytes)
    :
    :     * Optional (the associated SPSS commands are given in CAPS)
    :     -valueLabels: value label dictionary {varName: {value: label}} Cf. VALUE
    :       LABELS (default: None)
    :     -varLabels: variable label dictionary {varName: varLabel}. Cf. VARIABLE
    :       LABEL (default: None)
    :     -formats: format_ dictionary {varName: printFmt} Cf. FORMATS
    :       (default: None)
    :     -missingValues: missing values dictionary {varName: {missing value spec}}
    :       (default: None). Cf. MISSING VALUES. For example:
    :           {'someNumvar1': {'values': [999, -1, -2]}, # discrete values
    :            'someNumvar2': {'lower': -9, 'upper':-1}, # range, cf. -9 THRU -1
    :            'someNumvar3': {'lower': -9, 'upper':-1, 'value': 999},
    :            'someStrvar1': {'values': ['foo', 'bar', 'baz']},
    :            'someStrvar2': {'values': 'bletch'}}
    :     ---The following three parameters must all three be set, if used---
    :     -measureLevels: measurement level dictionary {varName: <level>}
    :      Valid levels are: "unknown", "nominal", "ordinal", "scale",
    :      "ratio", "flag", "typeless". Cf. VARIABLE LEVEL (default: None)
    :     -columnWidths: column display width dictionary {varName: <int>}.
    :       Cf. VARIABLE WIDTH. (default: None --> >= 10 [stringVars] or automatic
    :       [numVars])
    :     -alignments: alignment dictionary {varName: <left/center/right>}
    :       Cf. VARIABLE ALIGNMENT (default: None --> left)
    :     ---
    :     -varSets: sets dictionary {setName: list_of_valid_varNames}.
    :       Cf. SETSMR command. (default: None)
    :     -varRoles: variable roles dictionary {varName: varRole}, where varRole
    :       may be any of the following: 'both', 'frequency', 'input', 'none',
    :       'partition', 'record ID', 'split', 'target'. Cf. VARIABLE ROLE
    :       (default: None)
    :     -varAttributes: variable attributes dictionary {varName: {attribName:
    :       attribValue} (default: None). For example: varAttributes = {'gender':
    :       {'Binary': 'Yes'}, 'educ': {'DemographicVars': '1'}}. Cf. VARIABLE
    :       ATTRIBUTES. (default: None)
    :     -fileAttributes: file attributes dictionary {attribName: attribValue}
    :       For example: {'RevisionDate[1]': '10/29/2004', 'RevisionDate[2]':
    :       '10/21/2005'}. Square brackets indicate attribute arrays, which must
    :       start with 1. Cf. FILE ATTRIBUTES. (default: None)
    :     -fileLabel: file label string, which defaults to "File created by user
    :       <username> at <datetime>" is file label is None. Cf. FILE LABEL
    :       (default: None)
    :     -multRespDefs: Multiple response sets definitions (dichotomy groups or
    :       category groups) dictionary {setName: <set definition>}. In SPSS syntax,
    :       'setName' has a dollar prefix ('$someSet'). See also docstring of
    :       multRespDefs method. Cf. MRSETS. (default: None)
    :
    :     -caseWeightVar: valid varName that is set as case weight (cf. WEIGHT BY)
    :     -overwrite: Boolean that indicates whether an existing Spss file should be
    :       overwritten (default: True)
    :     -ioUtf8: indicates the mode in which text communicated to or from the
    :       I/O Module will be. Valid values are True (UTF-8/unicode mode, cf. SET
    :       UNICODE=ON) or False (Codepage mode, SET UNICODE=OFF) (default: False)
    :     -ioLocale: indicates the locale of the I/O module, cf. SET LOCALE (default:
    :       None, which is the same as ".".join(locale.getlocale())
    :     -mode: indicates the mode in which <savFileName> should be opened. Possible
    :       values are "wb" (write), "ab" (append), "cp" (copy: initialize header
    :       using <refSavFileName> as a reference file, cf. APPLY DICTIONARY).
    :       (default: "wb")
    :     -refSavFileName: reference file that should be used to initialize the
    :       header (aka the SPSS data dictionary) containing variable label, value
    :       label, missing value, etc etc definitions. Only relevant in conjunction
    :       with mode="cp". (default: None)
    :
    :     Typical use:
    :     records = [['Test1', 1, 1], ['Test2', 2, 1]]
    :     varNames = ['var1', 'v2', 'v3']
    :     varTypes = {'var1': 5, 'v2': 0, 'v3': 0}
    :     savFileName = "test.sav"
    :     with SavWriter(savFileName, varNames, varTypes) as writer:
    :         for record in records:
    :             writer.writerow(record)
    :
    :
    :END:

** Testing 001: List
*** DOIN Prepare data

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

records  = [ [ "Test1", 1, 1], [ "Test2", 2, 1] ]
vnames = ['var1', 'v2', 'v3']
vtypes = {'var1': 5, 'v2': 0, 'v3': 0}

print( records )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[88]:
    # output
    : [['Test1', 1, 1], ['Test2', 2, 1]]
    :
    :END:

*** DOIN Write

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

savFileName = "test_001.sav"
with spss.SavWriter( savFileName, vnames, vtypes, ioUtf8=True ) as writer:
        writer.writerows(records)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[89]:
    :END:

** Testing 002: Pandas dataframe
*** DOIN tmp_df

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

tmp_df = pd.DataFrame(
    {
        "num_legs":          [  1,  2,  3,  4, ],
        "num_wings":         [  5,  6,  7,  8, ],
        "num_specimen_seen": [  9, 10, 11, 12, ],
        "WORD": [
            "kawa",
            "herbata",
            "wino",
            "woda",
        ],

    },
    index=[ "falcon", "dog", "spider", "fish", ]
)

print( tmp_df )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[90]:
    # output
    :         num_legs  num_wings  num_specimen_seen     WORD
    : falcon         1          5                  9     kawa
    : dog            2          6                 10  herbata
    : spider         3          7                 11     wino
    : fish           4          8                 12     woda
    :
    :END:

*** DONE vnames

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

vnames = list( tmp_df.columns.values )

pp( vnames )
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[91]:
    # output
    : ['num_legs', 'num_wings', 'num_specimen_seen', 'WORD']
    :
    :END:

*** DOIN dtypes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

dtypes =  tmp_df.dtypes

pp( dtypes )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[92]:
    # output
    : num_legs              int64
    : num_wings             int64
    : num_specimen_seen     int64
    : WORD                 object
    : dtype: object
    :
    :END:

*** DOIN vtypes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

vtypes = {}

for ii, vname in enumerate( vnames ):
  if dtypes[ vname ] == 'int64':
    vtypes[ vname ] = 0
  elif dtypes[ vname ] == 'float64':
    vtypes[ vname ] = 0
  else:
    vtypes[ vname ] = 256

pp( vtypes )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[93]:
    # output
    : {'WORD': 256, 'num_legs': 0, 'num_specimen_seen': 0, 'num_wings': 0}
    :
    :END:

*** DONE =spss.SavWriter=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

savFileName = "test_002.sav"
with spss.SavWriter(savFileName, vnames, vtypes, ioUtf8=True) as writer:
        writer.writerows(tmp_df.values)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[94]:
    :END:

** Testing 003: Pandas dataframe
*** DOIN tmp_df

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

tmp_df = st0304_verbs_WG_nouns_WG

tmp_df.columns.values

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[95]:
    # text/plain
    : array(['ID', 'WORD_v', 'WG_000_v', 'WG_001_v', 'WG_002_v', 'WG_003_v',
    :        'WG_004_v', 'WG_005_v', 'WG_006_v', 'WG_007_v', 'WG_008_v',
    :        'WG_009_v', 'WG_010_v', 'WG_011_v', 'WG_012_v', 'WG_013_v',
    :        'WG_014_v', 'WG_015_v', 'WG_016_v', 'WG_017_v', 'WG_018_v',
    :        'WG_019_v', 'WG_020_v', 'WG_021_v', 'WG_022_v', 'WG_023_v',
    :        'WG_024_v', 'WG_025_v', 'WG_026_v', 'WG_027_v', 'WG_028_v',
    :        'WG_029_v', 'WG_030_v', 'WG_031_v', 'WG_032_v',
    :        'SYLL_START_from_words', 'CLASS_v', 'WORD_n', 'WG_000_n',
    :        'WG_001_n', 'WG_002_n', 'WG_003_n', 'WG_004_n', 'WG_005_n',
    :        'WG_006_n', 'WG_007_n', 'WG_008_n', 'WG_009_n', 'WG_010_n',
    :        'WG_011_n', 'WG_012_n', 'WG_013_n', 'WG_014_n', 'WG_015_n',
    :        'WG_016_n', 'WG_017_n', 'WG_018_n', 'WG_019_n', 'WG_020_n',
    :        'WG_021_n', 'WG_022_n', 'WG_023_n', 'WG_024_n', 'WG_025_n',
    :        'WG_026_n', 'WG_027_n', 'WG_028_n', 'WG_029_n', 'WG_030_n',
    :        'WG_031_n', 'WG_032_n', 'CLASS_n'], dtype=object)
    :END:

*** DONE vnames

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

vnames = list( tmp_df.columns.values )

pp( vnames )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[96]:
    # output
    : ['ID',
    :  'WORD_v',
    :  'WG_000_v',
    :  'WG_001_v',
    :  'WG_002_v',
    :  'WG_003_v',
    :  'WG_004_v',
    :  'WG_005_v',
    :  'WG_006_v',
    :  'WG_007_v',
    :  'WG_008_v',
    :  'WG_009_v',
    :  'WG_010_v',
    :  'WG_011_v',
    :  'WG_012_v',
    :  'WG_013_v',
    :  'WG_014_v',
    :  'WG_015_v',
    :  'WG_016_v',
    :  'WG_017_v',
    :  'WG_018_v',
    :  'WG_019_v',
    :  'WG_020_v',
    :  'WG_021_v',
    :  'WG_022_v',
    :  'WG_023_v',
    :  'WG_024_v',
    :  'WG_025_v',
    :  'WG_026_v',
    :  'WG_027_v',
    :  'WG_028_v',
    :  'WG_029_v',
    :  'WG_030_v',
    :  'WG_031_v',
    :  'WG_032_v',
    :  'SYLL_START_from_words',
    :  'CLASS_v',
    :  'WORD_n',
    :  'WG_000_n',
    :  'WG_001_n',
    :  'WG_002_n',
    :  'WG_003_n',
    :  'WG_004_n',
    :  'WG_005_n',
    :  'WG_006_n',
    :  'WG_007_n',
    :  'WG_008_n',
    :  'WG_009_n',
    :  'WG_010_n',
    :  'WG_011_n',
    :  'WG_012_n',
    :  'WG_013_n',
    :  'WG_014_n',
    :  'WG_015_n',
    :  'WG_016_n',
    :  'WG_017_n',
    :  'WG_018_n',
    :  'WG_019_n',
    :  'WG_020_n',
    :  'WG_021_n',
    :  'WG_022_n',
    :  'WG_023_n',
    :  'WG_024_n',
    :  'WG_025_n',
    :  'WG_026_n',
    :  'WG_027_n',
    :  'WG_028_n',
    :  'WG_029_n',
    :  'WG_030_n',
    :  'WG_031_n',
    :  'WG_032_n',
    :  'CLASS_n']
    :
    :END:

*** DOIN dtypes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

dtypes =  tmp_df.dtypes

pp( dtypes )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[97]:
    # output
    : ID           object
    : WORD_v       object
    : WG_000_v      int64
    : WG_001_v      int64
    : WG_002_v      int64
    : WG_003_v      int64
    : WG_004_v      int64
    : WG_005_v      int64
    : WG_006_v      int64
    : WG_007_v      int64
    : WG_008_v      int64
    : WG_009_v      int64
    : WG_010_v      int64
    : WG_011_v      int64
    : WG_012_v      int64
    : WG_013_v      int64
    : WG_014_v      int64
    : WG_015_v      int64
    : WG_016_v      int64
    : WG_017_v      int64
    : WG_018_v      int64
    : WG_019_v      int64
    : WG_020_v      int64
    : WG_021_v      int64
    : WG_022_v      int64
    : WG_023_v    float64
    : WG_024_v    float64
    : WG_025_v    float64
    : WG_026_v    float64
    : WG_027_v    float64
    :              ...
    : WG_004_n      int64
    : WG_005_n      int64
    : WG_006_n      int64
    : WG_007_n      int64
    : WG_008_n      int64
    : WG_009_n      int64
    : WG_010_n      int64
    : WG_011_n      int64
    : WG_012_n      int64
    : WG_013_n      int64
    : WG_014_n      int64
    : WG_015_n      int64
    : WG_016_n      int64
    : WG_017_n      int64
    : WG_018_n      int64
    : WG_019_n      int64
    : WG_020_n      int64
    : WG_021_n      int64
    : WG_022_n      int64
    : WG_023_n    float64
    : WG_024_n    float64
    : WG_025_n    float64
    : WG_026_n    float64
    : WG_027_n    float64
    : WG_028_n    float64
    : WG_029_n    float64
    : WG_030_n    float64
    : WG_031_n    float64
    : WG_032_n    float64
    : CLASS_n       int64
    : Length: 72, dtype: object
    :
    :END:

*** DOIN vtypes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

vtypes = {}

for ii, vname in enumerate( vnames ):
  if dtypes[ vname ] == 'int64':
    vtypes[ vname ] = 0
  elif dtypes[ vname ] == 'float64':
    vtypes[ vname ] = 0
  else:
    vtypes[ vname ] = 256

pp( vtypes )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[98]:
    # output
    : {'CLASS_n': 0,
    :  'CLASS_v': 0,
    :  'ID': 256,
    :  'SYLL_START_from_words': 256,
    :  'WG_000_n': 0,
    :  'WG_000_v': 0,
    :  'WG_001_n': 0,
    :  'WG_001_v': 0,
    :  'WG_002_n': 0,
    :  'WG_002_v': 0,
    :  'WG_003_n': 0,
    :  'WG_003_v': 0,
    :  'WG_004_n': 0,
    :  'WG_004_v': 0,
    :  'WG_005_n': 0,
    :  'WG_005_v': 0,
    :  'WG_006_n': 0,
    :  'WG_006_v': 0,
    :  'WG_007_n': 0,
    :  'WG_007_v': 0,
    :  'WG_008_n': 0,
    :  'WG_008_v': 0,
    :  'WG_009_n': 0,
    :  'WG_009_v': 0,
    :  'WG_010_n': 0,
    :  'WG_010_v': 0,
    :  'WG_011_n': 0,
    :  'WG_011_v': 0,
    :  'WG_012_n': 0,
    :  'WG_012_v': 0,
    :  'WG_013_n': 0,
    :  'WG_013_v': 0,
    :  'WG_014_n': 0,
    :  'WG_014_v': 0,
    :  'WG_015_n': 0,
    :  'WG_015_v': 0,
    :  'WG_016_n': 0,
    :  'WG_016_v': 0,
    :  'WG_017_n': 0,
    :  'WG_017_v': 0,
    :  'WG_018_n': 0,
    :  'WG_018_v': 0,
    :  'WG_019_n': 0,
    :  'WG_019_v': 0,
    :  'WG_020_n': 0,
    :  'WG_020_v': 0,
    :  'WG_021_n': 0,
    :  'WG_021_v': 0,
    :  'WG_022_n': 0,
    :  'WG_022_v': 0,
    :  'WG_023_n': 0,
    :  'WG_023_v': 0,
    :  'WG_024_n': 0,
    :  'WG_024_v': 0,
    :  'WG_025_n': 0,
    :  'WG_025_v': 0,
    :  'WG_026_n': 0,
    :  'WG_026_v': 0,
    :  'WG_027_n': 0,
    :  'WG_027_v': 0,
    :  'WG_028_n': 0,
    :  'WG_028_v': 0,
    :  'WG_029_n': 0,
    :  'WG_029_v': 0,
    :  'WG_030_n': 0,
    :  'WG_030_v': 0,
    :  'WG_031_n': 0,
    :  'WG_031_v': 0,
    :  'WG_032_n': 0,
    :  'WG_032_v': 0,
    :  'WORD_n': 256,
    :  'WORD_v': 256}
    :
    :END:

*** DONE =spss.SavWriter=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

savFileName = "test_003.sav"
with spss.SavWriter(savFileName, vnames, vtypes, ioUtf8=True) as writer:
    writer.writerows(tmp_df.values)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[99]:
    :END:

** Testing 004: Pandas dataframe TRANSPOSED
*** DOIN tmp_df

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

tmp_df = st0304_verbs_WS_nouns_WS_cols_trans

tmp_df.columns.values

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[100]:
    # text/plain
    : array(['aciabać_aciadłe', 'aciabać_aciapłe', 'aciabać_aciasce',
    :        'aciabać_aciasje', 'aciabać_aciasme', 'aciabać_aciatłe',
    :        'aciabać_aciatwe', 'aciabać_aciazje', 'aciadać_aciadłe',
    :        'aciadać_aciapłe', 'aciadać_aciasce', 'aciadać_aciasje',
    :        'aciadać_aciasme', 'aciadać_aciatłe', 'aciadać_aciatwe',
    :        'aciadać_aciazje', 'aciagać_aciadłe', 'aciagać_aciapłe',
    :        'aciagać_aciasce', 'aciagać_aciasje', 'aciagać_aciasme',
    :        'aciagać_aciatłe', 'aciagać_aciatwe', 'aciagać_aciazje',
    :        'aciajać_aciadłe', 'aciajać_aciapłe', 'aciajać_aciasce',
    :        'aciajać_aciasje', 'aciajać_aciasme', 'aciajać_aciatłe',
    :        'aciajać_aciatwe', 'aciajać_aciazje', 'aciakać_aciadłe',
    :        'aciakać_aciapłe', 'aciakać_aciasce', 'aciakać_aciasje',
    :        'aciakać_aciasme', 'aciakać_aciatłe', 'aciakać_aciatwe',
    :        'aciakać_aciazje', 'acialać_aciadłe', 'acialać_aciapłe',
    :        'acialać_aciasce', 'acialać_aciasje', 'acialać_aciasme',
    :        'acialać_aciatłe', 'acialać_aciatwe', 'acialać_aciazje',
    :        'aciasać_aciadłe', 'aciasać_aciapłe', 'aciasać_aciasce',
    :        'aciasać_aciasje', 'aciasać_aciasme', 'aciasać_aciatłe',
    :        'aciasać_aciatwe', 'aciasać_aciazje', 'aciatać_aciadłe',
    :        'aciatać_aciapłe', 'aciatać_aciasce', 'aciatać_aciasje',
    :        'aciatać_aciasme', 'aciatać_aciatłe', 'aciatać_aciatwe',
    :        'aciatać_aciazje', 'aciazać_aciadłe', 'aciazać_aciapłe',
    :        'aciazać_aciasce', 'aciazać_aciasje', 'aciazać_aciasme',
    :        'aciazać_aciatłe', 'aciazać_aciatwe', 'aciazać_aciazje',
    :        'aciażać_aciadłe', 'aciażać_aciapłe', 'aciażać_aciasce',
    :        'aciażać_aciasje', 'aciażać_aciasme', 'aciażać_aciatłe',
    :        'aciażać_aciatwe', 'aciażać_aciazje', 'aciamać_aciadłe',
    :        'aciamać_aciapłe', 'aciamać_aciasce', 'aciamać_aciasje',
    :        'aciamać_aciasme', 'aciamać_aciatłe', 'aciamać_aciatwe',
    :        'aciamać_aciazje', 'bakdawić_bakdagra', 'bakdawić_bakdakła',
    :        'bakdawić_bakdazja', 'bakdawić_bakdaśna', 'bapkawić_bapkakła',
    :        'bapkawić_bapkakra', 'bażlawić_bażlałek', 'chacykać_chacynek',
    :        'chobucać_chobunek', 'chobujać_chobunek', 'chobukać_chobunek',
    :        'cobucać_cobunek', 'cobukać_cobunek', 'cobujać_cobunek',
    :        'cocucać_cocunek', 'cocukać_cocunek', 'czaboczić_czaborzęd',
    :        'czabognąć_czaborzęd', 'czaborzić_czaborzęd',
    :        'czaboszić_czaborzęd', 'czabośnąć_czaborzęd',
    :        'czaboznąć_czaborzęd', 'czaboskić_czaborzęd', 'dotazbać_dotaspód',
    :        'dotazbać_dotaśród', 'dotazmać_dotaspód', 'dotazmać_dotaśród',
    :        'dotaftać_dotaspód', 'dotaftać_dotaśród', 'dotaśmać_dotaspód',
    :        'dotaśmać_dotaśród', 'dzaboczić_dzaborzud', 'dzabognąć_dzaborzud',
    :        'dzabośnąć_dzaborzud', 'dzaboznąć_dzaborzud',
    :        'dzaborzić_dzaborzud', 'dzaboskić_dzaborzud', 'ećkawić_ećkadża',
    :        'ećkawić_ećkafta', 'ećkawić_ećkakra', 'ećkawić_ećkałek',
    :        'ećkawić_ećkazja', 'epkawić_epkadża', 'epkawić_epkagla',
    :        'epkawić_epkasma', 'espinić_espisat', 'eżnawać_eżnałek',
    :        'eżnawić_eżnałek', 'firdawić_firdagra', 'firdawić_firdazja',
    :        'firdawić_firdagna', 'fokucać_fokunek', 'fokujać_fokunek',
    :        'grocucać_grocunek', 'grocukać_grocunek', 'grokucać_grokunek',
    :        'grokujać_grokunek', 'grokukać_grokunek', 'grosukać_grosunek',
    :        'kanwijać_kanwigia', 'kanwisać_kanwigia', 'kazycieć_kazychie',
    :        'kazycieć_kazystie', 'kazycieć_kazyśmie', 'kazymieć_kazychie',
    :        'kazymieć_kazystie', 'kazymieć_kazyśmie', 'kułcykać_kułcynek',
    :        'kułzymieć_kułzychie', 'kułzymieć_kułzystie',
    :        'kułzymieć_kułzyśnie', 'kułzycieć_kułzychie',
    :        'kułzycieć_kułzystie', 'kułzycieć_kułzyśnie',
    :        'kunzycieć_kunzydzie', 'kunzycieć_kunzychie',
    :        'kunzycieć_kunzystie', 'kunzycieć_kunzyście',
    :        'kunzycieć_kunzyśmie', 'kunzycieć_kunzyśnie',
    :        'kunzymieć_kunzydzie', 'kunzymieć_kunzychie',
    :        'kunzymieć_kunzystie', 'kunzymieć_kunzyście',
    :        'kunzymieć_kunzyśmie', 'kunzymieć_kunzyśnie', 'łaregać_łarekia',
    :        'łarerać_łarekia', 'łarezać_łarekia', 'łareżać_łarekia',
    :        'memszeć_memnend', 'mepibać_mepidia', 'mepibać_mepipia',
    :        'mepidać_mepidia', 'mepidać_mepipia', 'mepigać_mepidia',
    :        'mepigać_mepipia', 'mepilać_mepidia', 'mepilać_mepipia',
    :        'mepipać_mepidia', 'mepipać_mepipia', 'mepirać_mepidia',
    :        'mepirać_mepipia', 'mepizać_mepidia', 'mepizać_mepipia',
    :        'mepiżać_mepidia', 'mepiżać_mepipia', 'mewijać_mewisia',
    :        'mewijać_mewibia', 'mewisać_mewisia', 'mewisać_mewibia',
    :        'młarykać_młarynek', 'młarywać_młarynek', 'mocebać_mocetła',
    :        'mocebać_mocezja', 'mocedać_mocetła', 'mocedać_mocezja',
    :        'mocefać_mocetła', 'mocefać_mocezja', 'mocegać_mocetła',
    :        'mocegać_mocezja', 'mocehać_mocetła', 'mocehać_mocezja',
    :        'mocejać_mocetła', 'mocejać_mocezja', 'mocekać_mocetła',
    :        'mocekać_mocezja', 'mocepać_mocetła', 'mocepać_mocezja',
    :        'mocerać_mocetła', 'mocerać_mocezja', 'mocetać_mocetła',
    :        'mocetać_mocezja', 'mocezać_mocetła', 'mocezać_mocezja',
    :        'mocelać_mocetła', 'mocelać_mocezja', 'moceżać_mocetła',
    :        'moceżać_mocezja', 'mosepieć_moseznor', 'mosechyć_moseznor',
    :        'mosekieć_moseznor', 'motaftać_motaspód', 'motaśmać_motaspód',
    :        'motazbać_motaspód', 'motazmać_motaspód', 'motadwać_motaspód',
    :        'mowelzać_mowemsko', 'mowełzać_mowemsko', 'mowenzać_mowemsko',
    :        'mowesieć_mowemsko', 'mylisać_mylipia', 'mypibać_mypidia',
    :        'mypibać_mypigia', 'mypidać_mypidia', 'mypidać_mypigia',
    :        'mypigać_mypidia', 'mypigać_mypigia', 'mypilać_mypidia',
    :        'mypilać_mypigia', 'mypipać_mypidia', 'mypipać_mypigia',
    :        'mypirać_mypidia', 'mypirać_mypigia', 'mypizać_mypidia',
    :        'mypizać_mypigia', 'mypiżać_mypidia', 'mypiżać_mypigia',
    :        'nazymieć_nazychie', 'nazymieć_nazystie', 'nazymieć_nazyśnie',
    :        'nazycieć_nazychie', 'nazycieć_nazystie', 'nazycieć_nazyśnie',
    :        'nichinić_nichimyt', 'nichinić_nichirat', 'nichinić_nichimit',
    :        'nichinić_nichisat', 'nichipić_nichimyt', 'nichipić_nichirat',
    :        'nichipić_nichimit', 'nichipić_nichisat', 'nimlisać_nimlibia',
    :        'niźwijać_niźwibia', 'niźwisać_niźwibia', 'ociabać_ociasce',
    :        'ociabać_ociasje', 'ociabać_ociasme', 'ociabać_ociatłe',
    :        'ociajać_ociasce', 'ociajać_ociasje', 'ociajać_ociasme',
    :        'ociajać_ociatłe', 'ociazać_ociasce', 'ociazać_ociasje',
    :        'ociazać_ociasme', 'ociazać_ociatłe', 'ociamać_ociasce',
    :        'ociamać_ociasje', 'ociamać_ociasme', 'ociamać_ociatłe',
    :        'omukawić_omukakra', 'plwocić_plwopie', 'pocedać_pocetwa',
    :        'pocedać_pocerza', 'pocefać_pocetwa', 'pocefać_pocerza',
    :        'pocehać_pocetwa', 'pocehać_pocerza', 'pocejać_pocetwa',
    :        'pocejać_pocerza', 'pocetać_pocetwa', 'pocetać_pocerza',
    :        'poceżać_pocetwa', 'poceżać_pocerza', 'pocepać_pocetwa',
    :        'pocepać_pocerza', 'pocezać_pocetwa', 'pocezać_pocerza',
    :        'pozycieć_pozydzie', 'pozycieć_pozyście', 'pozymieć_pozydzie',
    :        'pozymieć_pozyście', 'radnawać_radnałek', 'radnawić_radnałek',
    :        'rocebać_rocezja', 'rocebać_rocepła', 'rocebać_roceska',
    :        'rocebać_rocesza', 'rocedać_rocezja', 'rocedać_rocepła',
    :        'rocedać_roceska', 'rocedać_rocesza', 'rocefać_rocezja',
    :        'rocefać_rocepła', 'rocefać_roceska', 'rocefać_rocesza',
    :        'rocegać_rocezja', 'rocegać_rocepła', 'rocegać_roceska',
    :        'rocegać_rocesza', 'rocehać_rocezja', 'rocehać_rocepła',
    :        'rocehać_roceska', 'rocehać_rocesza', 'rocejać_rocezja',
    :        'rocejać_rocepła', 'rocejać_roceska', 'rocejać_rocesza',
    :        'rocekać_rocezja', 'rocekać_rocepła', 'rocekać_roceska',
    :        'rocekać_rocesza', 'rocelać_rocezja', 'rocelać_rocepła',
    :        'rocelać_roceska', 'rocelać_rocesza', 'rocepać_rocezja',
    :        'rocepać_rocepła', 'rocepać_roceska', 'rocepać_rocesza',
    :        'rocerać_rocezja', 'rocerać_rocepła', 'rocerać_roceska',
    :        'rocerać_rocesza', 'rocetać_rocezja', 'rocetać_rocepła',
    :        'rocetać_roceska', 'rocetać_rocesza', 'rocezać_rocezja',
    :        'rocezać_rocepła', 'rocezać_roceska', 'rocezać_rocesza',
    :        'roceżać_rocezja', 'roceżać_rocepła', 'roceżać_roceska',
    :        'roceżać_rocesza', 'rorefać_rorekia', 'roregać_rorekia',
    :        'rorehać_rorekia', 'rorepać_rorekia', 'rorerać_rorekia',
    :        'rorezać_rorekia', 'roreżać_rorekia', 'rosechyć_roseznor',
    :        'rosekieć_roseznor', 'rosepieć_roseznor', 'rotaftać_rotapłód',
    :        'rotaftać_rotagród', 'rotazbać_rotapłód', 'rotazbać_rotagród',
    :        'rotazmać_rotapłód', 'rotazmać_rotagród', 'rotadwać_rotapłód',
    :        'rotadwać_rotagród', 'rotaśmać_rotapłód', 'rotaśmać_rotagród',
    :        'rowelzać_rowedsko', 'rowelzać_rowemsko', 'rowełzać_rowedsko',
    :        'rowełzać_rowemsko', 'rowenzać_rowedsko', 'rowenzać_rowemsko',
    :        'rowesieć_rowedsko', 'rowesieć_rowemsko', 'rywisać_rywibia',
    :        'rywisać_rywigia', 'rywisać_rywipia', 'sepacerać_sepacesza',
    :        'sepacezać_sepacesza', 'seracehać_seracesma',
    :        'seracehać_seracesza', 'seracehać_seracetła',
    :        'seracekać_seracesma', 'seracekać_seracesza',
    :        'seracekać_seracetła', 'seracelać_seracesma',
    :        'seracelać_seracesza', 'seracelać_seracetła',
    :        'seracezać_seracesma', 'seracezać_seracesza',
    :        'seracezać_seracetła', 'skaboczić_skaborzod',
    :        'skabośnąć_skaborzod', 'skaboznąć_skaborzod',
    :        'skaborzić_skaborzod', 'skaboskić_skaborzod', 'soboczić_soborzęd',
    :        'soboczić_soborzod', 'soboczić_soborzud', 'sobognąć_soborzęd',
    :        'sobognąć_soborzod', 'sobognąć_soborzud', 'sobośnąć_soborzęd',
    :        'sobośnąć_soborzod', 'sobośnąć_soborzud', 'soboznąć_soborzęd',
    :        'soboznąć_soborzod', 'soboznąć_soborzud', 'sobochić_soborzęd',
    :        'sobochić_soborzod', 'sobochić_soborzud', 'soborzić_soborzęd',
    :        'soborzić_soborzod', 'soborzić_soborzud', 'soboskić_soborzęd',
    :        'soboskić_soborzod', 'soboskić_soborzud', 'sobostić_soborzęd',
    :        'sobostić_soborzod', 'sobostić_soborzud', 'soboszić_soborzęd',
    :        'soboszić_soborzod', 'soboszić_soborzud', 'socadiać_socagród',
    :        'socafiać_socagród', 'socagiać_socagród', 'socasiać_socagród',
    :        'socatiać_socagród', 'socaziać_socagród', 'sotaftać_sotagród',
    :        'sotaftać_sotaśród', 'sotazbać_sotagród', 'sotazbać_sotaśród',
    :        'sotadwać_sotagród', 'sotadwać_sotaśród', 'sotaśmać_sotagród',
    :        'sotaśmać_sotaśród', 'sotazmać_sotagród', 'sotazmać_sotaśród',
    :        'spobochić_spoborzud', 'spoboczić_spoborzud',
    :        'spobognąć_spoborzud', 'spoborzić_spoborzud',
    :        'spoboszić_spoborzud', 'spobośnąć_spoborzud',
    :        'spoboznąć_spoborzud', 'spoboskić_spoborzud',
    :        'spobostić_spoborzud', 'stabochić_staborzud',
    :        'stabochić_staborzod', 'staboczić_staborzud',
    :        'staboczić_staborzod', 'stabognąć_staborzud',
    :        'stabognąć_staborzod', 'staborzić_staborzud',
    :        'staborzić_staborzod', 'stabośnąć_staborzud',
    :        'stabośnąć_staborzod', 'staboznąć_staborzud',
    :        'staboznąć_staborzod', 'staboskić_staborzud',
    :        'staboskić_staborzod', 'stabostić_staborzud',
    :        'stabostić_staborzod', 'sylarykać_sylarynek',
    :        'sylarywać_sylarynek', 'sypacykać_sypacynek',
    :        'syparykać_syparynek', 'syparywać_syparynek',
    :        'szaboczić_szaborzęd', 'szabognąć_szaborzęd',
    :        'szaborzić_szaborzęd', 'szaboszić_szaborzęd',
    :        'szabośnąć_szaborzęd', 'szaboznąć_szaborzęd',
    :        'szabochić_szaborzęd', 'szaboskić_szaborzęd',
    :        'szabostić_szaborzęd', 'tkwicować_tkwicodła', 'ucirczyć_ucirstwa',
    :        'udrkukać_udrkunek', 'udrkucać_udrkunek', 'udrkujać_udrkunek',
    :        'wawydzić_wawykłag', 'wowoftać_wowobrót', 'wowozbać_wowobrót',
    :        'wowozmać_wowobrót', 'wowośmać_wowobrót', 'wukawić_wukałek',
    :        'wunawać_wunanie', 'wunawić_wunanie', 'zapumkić_zapumtek',
    :        'zapumnić_zapumtek', 'zwlocić_zwlopie', 'chorucać_chorunek',
    :        'chorukać_chorunek', 'kożymieć_kożychie', 'kożymieć_kożystie',
    :        'kułsykać_kułsynek', 'moregać_morekia', 'moregać_moretia',
    :        'morerać_morekia', 'morerać_moretia', 'nazjawać_nazjacie',
    :        'neżymieć_neżydzie', 'neżymieć_neżystie', 'nibfijać_nibfinie',
    :        'nużymieć_nużydzie', 'nużymieć_nużystie', 'podżymieć_podżychie',
    :        'rolisać_rolibia', 'rolisać_rolipia', 'wazycieć_wazychie',
    :        'wazycieć_wazystie', 'wazycieć_wazyśmie', 'wazycieć_wazyśnie',
    :        'wazymieć_wazychie', 'wazymieć_wazystie', 'wazymieć_wazyśmie',
    :        'wazymieć_wazyśnie', 'ważymieć_ważychie', 'ważymieć_ważystie',
    :        'CLASS'], dtype=object)
    :END:

*** DONE vnames

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

vnames = list( tmp_df.columns.values )

pp( vnames )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[101]:
    # output
    : ['aciabać_aciadłe',
    :  'aciabać_aciapłe',
    :  'aciabać_aciasce',
    :  'aciabać_aciasje',
    :  'aciabać_aciasme',
    :  'aciabać_aciatłe',
    :  'aciabać_aciatwe',
    :  'aciabać_aciazje',
    :  'aciadać_aciadłe',
    :  'aciadać_aciapłe',
    :  'aciadać_aciasce',
    :  'aciadać_aciasje',
    :  'aciadać_aciasme',
    :  'aciadać_aciatłe',
    :  'aciadać_aciatwe',
    :  'aciadać_aciazje',
    :  'aciagać_aciadłe',
    :  'aciagać_aciapłe',
    :  'aciagać_aciasce',
    :  'aciagać_aciasje',
    :  'aciagać_aciasme',
    :  'aciagać_aciatłe',
    :  'aciagać_aciatwe',
    :  'aciagać_aciazje',
    :  'aciajać_aciadłe',
    :  'aciajać_aciapłe',
    :  'aciajać_aciasce',
    :  'aciajać_aciasje',
    :  'aciajać_aciasme',
    :  'aciajać_aciatłe',
    :  'aciajać_aciatwe',
    :  'aciajać_aciazje',
    :  'aciakać_aciadłe',
    :  'aciakać_aciapłe',
    :  'aciakać_aciasce',
    :  'aciakać_aciasje',
    :  'aciakać_aciasme',
    :  'aciakać_aciatłe',
    :  'aciakać_aciatwe',
    :  'aciakać_aciazje',
    :  'acialać_aciadłe',
    :  'acialać_aciapłe',
    :  'acialać_aciasce',
    :  'acialać_aciasje',
    :  'acialać_aciasme',
    :  'acialać_aciatłe',
    :  'acialać_aciatwe',
    :  'acialać_aciazje',
    :  'aciasać_aciadłe',
    :  'aciasać_aciapłe',
    :  'aciasać_aciasce',
    :  'aciasać_aciasje',
    :  'aciasać_aciasme',
    :  'aciasać_aciatłe',
    :  'aciasać_aciatwe',
    :  'aciasać_aciazje',
    :  'aciatać_aciadłe',
    :  'aciatać_aciapłe',
    :  'aciatać_aciasce',
    :  'aciatać_aciasje',
    :  'aciatać_aciasme',
    :  'aciatać_aciatłe',
    :  'aciatać_aciatwe',
    :  'aciatać_aciazje',
    :  'aciazać_aciadłe',
    :  'aciazać_aciapłe',
    :  'aciazać_aciasce',
    :  'aciazać_aciasje',
    :  'aciazać_aciasme',
    :  'aciazać_aciatłe',
    :  'aciazać_aciatwe',
    :  'aciazać_aciazje',
    :  'aciażać_aciadłe',
    :  'aciażać_aciapłe',
    :  'aciażać_aciasce',
    :  'aciażać_aciasje',
    :  'aciażać_aciasme',
    :  'aciażać_aciatłe',
    :  'aciażać_aciatwe',
    :  'aciażać_aciazje',
    :  'aciamać_aciadłe',
    :  'aciamać_aciapłe',
    :  'aciamać_aciasce',
    :  'aciamać_aciasje',
    :  'aciamać_aciasme',
    :  'aciamać_aciatłe',
    :  'aciamać_aciatwe',
    :  'aciamać_aciazje',
    :  'bakdawić_bakdagra',
    :  'bakdawić_bakdakła',
    :  'bakdawić_bakdazja',
    :  'bakdawić_bakdaśna',
    :  'bapkawić_bapkakła',
    :  'bapkawić_bapkakra',
    :  'bażlawić_bażlałek',
    :  'chacykać_chacynek',
    :  'chobucać_chobunek',
    :  'chobujać_chobunek',
    :  'chobukać_chobunek',
    :  'cobucać_cobunek',
    :  'cobukać_cobunek',
    :  'cobujać_cobunek',
    :  'cocucać_cocunek',
    :  'cocukać_cocunek',
    :  'czaboczić_czaborzęd',
    :  'czabognąć_czaborzęd',
    :  'czaborzić_czaborzęd',
    :  'czaboszić_czaborzęd',
    :  'czabośnąć_czaborzęd',
    :  'czaboznąć_czaborzęd',
    :  'czaboskić_czaborzęd',
    :  'dotazbać_dotaspód',
    :  'dotazbać_dotaśród',
    :  'dotazmać_dotaspód',
    :  'dotazmać_dotaśród',
    :  'dotaftać_dotaspód',
    :  'dotaftać_dotaśród',
    :  'dotaśmać_dotaspód',
    :  'dotaśmać_dotaśród',
    :  'dzaboczić_dzaborzud',
    :  'dzabognąć_dzaborzud',
    :  'dzabośnąć_dzaborzud',
    :  'dzaboznąć_dzaborzud',
    :  'dzaborzić_dzaborzud',
    :  'dzaboskić_dzaborzud',
    :  'ećkawić_ećkadża',
    :  'ećkawić_ećkafta',
    :  'ećkawić_ećkakra',
    :  'ećkawić_ećkałek',
    :  'ećkawić_ećkazja',
    :  'epkawić_epkadża',
    :  'epkawić_epkagla',
    :  'epkawić_epkasma',
    :  'espinić_espisat',
    :  'eżnawać_eżnałek',
    :  'eżnawić_eżnałek',
    :  'firdawić_firdagra',
    :  'firdawić_firdazja',
    :  'firdawić_firdagna',
    :  'fokucać_fokunek',
    :  'fokujać_fokunek',
    :  'grocucać_grocunek',
    :  'grocukać_grocunek',
    :  'grokucać_grokunek',
    :  'grokujać_grokunek',
    :  'grokukać_grokunek',
    :  'grosukać_grosunek',
    :  'kanwijać_kanwigia',
    :  'kanwisać_kanwigia',
    :  'kazycieć_kazychie',
    :  'kazycieć_kazystie',
    :  'kazycieć_kazyśmie',
    :  'kazymieć_kazychie',
    :  'kazymieć_kazystie',
    :  'kazymieć_kazyśmie',
    :  'kułcykać_kułcynek',
    :  'kułzymieć_kułzychie',
    :  'kułzymieć_kułzystie',
    :  'kułzymieć_kułzyśnie',
    :  'kułzycieć_kułzychie',
    :  'kułzycieć_kułzystie',
    :  'kułzycieć_kułzyśnie',
    :  'kunzycieć_kunzydzie',
    :  'kunzycieć_kunzychie',
    :  'kunzycieć_kunzystie',
    :  'kunzycieć_kunzyście',
    :  'kunzycieć_kunzyśmie',
    :  'kunzycieć_kunzyśnie',
    :  'kunzymieć_kunzydzie',
    :  'kunzymieć_kunzychie',
    :  'kunzymieć_kunzystie',
    :  'kunzymieć_kunzyście',
    :  'kunzymieć_kunzyśmie',
    :  'kunzymieć_kunzyśnie',
    :  'łaregać_łarekia',
    :  'łarerać_łarekia',
    :  'łarezać_łarekia',
    :  'łareżać_łarekia',
    :  'memszeć_memnend',
    :  'mepibać_mepidia',
    :  'mepibać_mepipia',
    :  'mepidać_mepidia',
    :  'mepidać_mepipia',
    :  'mepigać_mepidia',
    :  'mepigać_mepipia',
    :  'mepilać_mepidia',
    :  'mepilać_mepipia',
    :  'mepipać_mepidia',
    :  'mepipać_mepipia',
    :  'mepirać_mepidia',
    :  'mepirać_mepipia',
    :  'mepizać_mepidia',
    :  'mepizać_mepipia',
    :  'mepiżać_mepidia',
    :  'mepiżać_mepipia',
    :  'mewijać_mewisia',
    :  'mewijać_mewibia',
    :  'mewisać_mewisia',
    :  'mewisać_mewibia',
    :  'młarykać_młarynek',
    :  'młarywać_młarynek',
    :  'mocebać_mocetła',
    :  'mocebać_mocezja',
    :  'mocedać_mocetła',
    :  'mocedać_mocezja',
    :  'mocefać_mocetła',
    :  'mocefać_mocezja',
    :  'mocegać_mocetła',
    :  'mocegać_mocezja',
    :  'mocehać_mocetła',
    :  'mocehać_mocezja',
    :  'mocejać_mocetła',
    :  'mocejać_mocezja',
    :  'mocekać_mocetła',
    :  'mocekać_mocezja',
    :  'mocepać_mocetła',
    :  'mocepać_mocezja',
    :  'mocerać_mocetła',
    :  'mocerać_mocezja',
    :  'mocetać_mocetła',
    :  'mocetać_mocezja',
    :  'mocezać_mocetła',
    :  'mocezać_mocezja',
    :  'mocelać_mocetła',
    :  'mocelać_mocezja',
    :  'moceżać_mocetła',
    :  'moceżać_mocezja',
    :  'mosepieć_moseznor',
    :  'mosechyć_moseznor',
    :  'mosekieć_moseznor',
    :  'motaftać_motaspód',
    :  'motaśmać_motaspód',
    :  'motazbać_motaspód',
    :  'motazmać_motaspód',
    :  'motadwać_motaspód',
    :  'mowelzać_mowemsko',
    :  'mowełzać_mowemsko',
    :  'mowenzać_mowemsko',
    :  'mowesieć_mowemsko',
    :  'mylisać_mylipia',
    :  'mypibać_mypidia',
    :  'mypibać_mypigia',
    :  'mypidać_mypidia',
    :  'mypidać_mypigia',
    :  'mypigać_mypidia',
    :  'mypigać_mypigia',
    :  'mypilać_mypidia',
    :  'mypilać_mypigia',
    :  'mypipać_mypidia',
    :  'mypipać_mypigia',
    :  'mypirać_mypidia',
    :  'mypirać_mypigia',
    :  'mypizać_mypidia',
    :  'mypizać_mypigia',
    :  'mypiżać_mypidia',
    :  'mypiżać_mypigia',
    :  'nazymieć_nazychie',
    :  'nazymieć_nazystie',
    :  'nazymieć_nazyśnie',
    :  'nazycieć_nazychie',
    :  'nazycieć_nazystie',
    :  'nazycieć_nazyśnie',
    :  'nichinić_nichimyt',
    :  'nichinić_nichirat',
    :  'nichinić_nichimit',
    :  'nichinić_nichisat',
    :  'nichipić_nichimyt',
    :  'nichipić_nichirat',
    :  'nichipić_nichimit',
    :  'nichipić_nichisat',
    :  'nimlisać_nimlibia',
    :  'niźwijać_niźwibia',
    :  'niźwisać_niźwibia',
    :  'ociabać_ociasce',
    :  'ociabać_ociasje',
    :  'ociabać_ociasme',
    :  'ociabać_ociatłe',
    :  'ociajać_ociasce',
    :  'ociajać_ociasje',
    :  'ociajać_ociasme',
    :  'ociajać_ociatłe',
    :  'ociazać_ociasce',
    :  'ociazać_ociasje',
    :  'ociazać_ociasme',
    :  'ociazać_ociatłe',
    :  'ociamać_ociasce',
    :  'ociamać_ociasje',
    :  'ociamać_ociasme',
    :  'ociamać_ociatłe',
    :  'omukawić_omukakra',
    :  'plwocić_plwopie',
    :  'pocedać_pocetwa',
    :  'pocedać_pocerza',
    :  'pocefać_pocetwa',
    :  'pocefać_pocerza',
    :  'pocehać_pocetwa',
    :  'pocehać_pocerza',
    :  'pocejać_pocetwa',
    :  'pocejać_pocerza',
    :  'pocetać_pocetwa',
    :  'pocetać_pocerza',
    :  'poceżać_pocetwa',
    :  'poceżać_pocerza',
    :  'pocepać_pocetwa',
    :  'pocepać_pocerza',
    :  'pocezać_pocetwa',
    :  'pocezać_pocerza',
    :  'pozycieć_pozydzie',
    :  'pozycieć_pozyście',
    :  'pozymieć_pozydzie',
    :  'pozymieć_pozyście',
    :  'radnawać_radnałek',
    :  'radnawić_radnałek',
    :  'rocebać_rocezja',
    :  'rocebać_rocepła',
    :  'rocebać_roceska',
    :  'rocebać_rocesza',
    :  'rocedać_rocezja',
    :  'rocedać_rocepła',
    :  'rocedać_roceska',
    :  'rocedać_rocesza',
    :  'rocefać_rocezja',
    :  'rocefać_rocepła',
    :  'rocefać_roceska',
    :  'rocefać_rocesza',
    :  'rocegać_rocezja',
    :  'rocegać_rocepła',
    :  'rocegać_roceska',
    :  'rocegać_rocesza',
    :  'rocehać_rocezja',
    :  'rocehać_rocepła',
    :  'rocehać_roceska',
    :  'rocehać_rocesza',
    :  'rocejać_rocezja',
    :  'rocejać_rocepła',
    :  'rocejać_roceska',
    :  'rocejać_rocesza',
    :  'rocekać_rocezja',
    :  'rocekać_rocepła',
    :  'rocekać_roceska',
    :  'rocekać_rocesza',
    :  'rocelać_rocezja',
    :  'rocelać_rocepła',
    :  'rocelać_roceska',
    :  'rocelać_rocesza',
    :  'rocepać_rocezja',
    :  'rocepać_rocepła',
    :  'rocepać_roceska',
    :  'rocepać_rocesza',
    :  'rocerać_rocezja',
    :  'rocerać_rocepła',
    :  'rocerać_roceska',
    :  'rocerać_rocesza',
    :  'rocetać_rocezja',
    :  'rocetać_rocepła',
    :  'rocetać_roceska',
    :  'rocetać_rocesza',
    :  'rocezać_rocezja',
    :  'rocezać_rocepła',
    :  'rocezać_roceska',
    :  'rocezać_rocesza',
    :  'roceżać_rocezja',
    :  'roceżać_rocepła',
    :  'roceżać_roceska',
    :  'roceżać_rocesza',
    :  'rorefać_rorekia',
    :  'roregać_rorekia',
    :  'rorehać_rorekia',
    :  'rorepać_rorekia',
    :  'rorerać_rorekia',
    :  'rorezać_rorekia',
    :  'roreżać_rorekia',
    :  'rosechyć_roseznor',
    :  'rosekieć_roseznor',
    :  'rosepieć_roseznor',
    :  'rotaftać_rotapłód',
    :  'rotaftać_rotagród',
    :  'rotazbać_rotapłód',
    :  'rotazbać_rotagród',
    :  'rotazmać_rotapłód',
    :  'rotazmać_rotagród',
    :  'rotadwać_rotapłód',
    :  'rotadwać_rotagród',
    :  'rotaśmać_rotapłód',
    :  'rotaśmać_rotagród',
    :  'rowelzać_rowedsko',
    :  'rowelzać_rowemsko',
    :  'rowełzać_rowedsko',
    :  'rowełzać_rowemsko',
    :  'rowenzać_rowedsko',
    :  'rowenzać_rowemsko',
    :  'rowesieć_rowedsko',
    :  'rowesieć_rowemsko',
    :  'rywisać_rywibia',
    :  'rywisać_rywigia',
    :  'rywisać_rywipia',
    :  'sepacerać_sepacesza',
    :  'sepacezać_sepacesza',
    :  'seracehać_seracesma',
    :  'seracehać_seracesza',
    :  'seracehać_seracetła',
    :  'seracekać_seracesma',
    :  'seracekać_seracesza',
    :  'seracekać_seracetła',
    :  'seracelać_seracesma',
    :  'seracelać_seracesza',
    :  'seracelać_seracetła',
    :  'seracezać_seracesma',
    :  'seracezać_seracesza',
    :  'seracezać_seracetła',
    :  'skaboczić_skaborzod',
    :  'skabośnąć_skaborzod',
    :  'skaboznąć_skaborzod',
    :  'skaborzić_skaborzod',
    :  'skaboskić_skaborzod',
    :  'soboczić_soborzęd',
    :  'soboczić_soborzod',
    :  'soboczić_soborzud',
    :  'sobognąć_soborzęd',
    :  'sobognąć_soborzod',
    :  'sobognąć_soborzud',
    :  'sobośnąć_soborzęd',
    :  'sobośnąć_soborzod',
    :  'sobośnąć_soborzud',
    :  'soboznąć_soborzęd',
    :  'soboznąć_soborzod',
    :  'soboznąć_soborzud',
    :  'sobochić_soborzęd',
    :  'sobochić_soborzod',
    :  'sobochić_soborzud',
    :  'soborzić_soborzęd',
    :  'soborzić_soborzod',
    :  'soborzić_soborzud',
    :  'soboskić_soborzęd',
    :  'soboskić_soborzod',
    :  'soboskić_soborzud',
    :  'sobostić_soborzęd',
    :  'sobostić_soborzod',
    :  'sobostić_soborzud',
    :  'soboszić_soborzęd',
    :  'soboszić_soborzod',
    :  'soboszić_soborzud',
    :  'socadiać_socagród',
    :  'socafiać_socagród',
    :  'socagiać_socagród',
    :  'socasiać_socagród',
    :  'socatiać_socagród',
    :  'socaziać_socagród',
    :  'sotaftać_sotagród',
    :  'sotaftać_sotaśród',
    :  'sotazbać_sotagród',
    :  'sotazbać_sotaśród',
    :  'sotadwać_sotagród',
    :  'sotadwać_sotaśród',
    :  'sotaśmać_sotagród',
    :  'sotaśmać_sotaśród',
    :  'sotazmać_sotagród',
    :  'sotazmać_sotaśród',
    :  'spobochić_spoborzud',
    :  'spoboczić_spoborzud',
    :  'spobognąć_spoborzud',
    :  'spoborzić_spoborzud',
    :  'spoboszić_spoborzud',
    :  'spobośnąć_spoborzud',
    :  'spoboznąć_spoborzud',
    :  'spoboskić_spoborzud',
    :  'spobostić_spoborzud',
    :  'stabochić_staborzud',
    :  'stabochić_staborzod',
    :  'staboczić_staborzud',
    :  'staboczić_staborzod',
    :  'stabognąć_staborzud',
    :  'stabognąć_staborzod',
    :  'staborzić_staborzud',
    :  'staborzić_staborzod',
    :  'stabośnąć_staborzud',
    :  'stabośnąć_staborzod',
    :  'staboznąć_staborzud',
    :  'staboznąć_staborzod',
    :  'staboskić_staborzud',
    :  'staboskić_staborzod',
    :  'stabostić_staborzud',
    :  'stabostić_staborzod',
    :  'sylarykać_sylarynek',
    :  'sylarywać_sylarynek',
    :  'sypacykać_sypacynek',
    :  'syparykać_syparynek',
    :  'syparywać_syparynek',
    :  'szaboczić_szaborzęd',
    :  'szabognąć_szaborzęd',
    :  'szaborzić_szaborzęd',
    :  'szaboszić_szaborzęd',
    :  'szabośnąć_szaborzęd',
    :  'szaboznąć_szaborzęd',
    :  'szabochić_szaborzęd',
    :  'szaboskić_szaborzęd',
    :  'szabostić_szaborzęd',
    :  'tkwicować_tkwicodła',
    :  'ucirczyć_ucirstwa',
    :  'udrkukać_udrkunek',
    :  'udrkucać_udrkunek',
    :  'udrkujać_udrkunek',
    :  'wawydzić_wawykłag',
    :  'wowoftać_wowobrót',
    :  'wowozbać_wowobrót',
    :  'wowozmać_wowobrót',
    :  'wowośmać_wowobrót',
    :  'wukawić_wukałek',
    :  'wunawać_wunanie',
    :  'wunawić_wunanie',
    :  'zapumkić_zapumtek',
    :  'zapumnić_zapumtek',
    :  'zwlocić_zwlopie',
    :  'chorucać_chorunek',
    :  'chorukać_chorunek',
    :  'kożymieć_kożychie',
    :  'kożymieć_kożystie',
    :  'kułsykać_kułsynek',
    :  'moregać_morekia',
    :  'moregać_moretia',
    :  'morerać_morekia',
    :  'morerać_moretia',
    :  'nazjawać_nazjacie',
    :  'neżymieć_neżydzie',
    :  'neżymieć_neżystie',
    :  'nibfijać_nibfinie',
    :  'nużymieć_nużydzie',
    :  'nużymieć_nużystie',
    :  'podżymieć_podżychie',
    :  'rolisać_rolibia',
    :  'rolisać_rolipia',
    :  'wazycieć_wazychie',
    :  'wazycieć_wazystie',
    :  'wazycieć_wazyśmie',
    :  'wazycieć_wazyśnie',
    :  'wazymieć_wazychie',
    :  'wazymieć_wazystie',
    :  'wazymieć_wazyśmie',
    :  'wazymieć_wazyśnie',
    :  'ważymieć_ważychie',
    :  'ważymieć_ważystie',
    :  'CLASS']
    :
    :END:

*** DOIN dtypes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

dtypes =  tmp_df.dtypes

pp( dtypes )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[102]:
    # output
    : ID
    : aciabać_aciadłe        float64
    : aciabać_aciapłe        float64
    : aciabać_aciasce        float64
    : aciabać_aciasje        float64
    : aciabać_aciasme        float64
    : aciabać_aciatłe        float64
    : aciabać_aciatwe        float64
    : aciabać_aciazje        float64
    : aciadać_aciadłe        float64
    : aciadać_aciapłe        float64
    : aciadać_aciasce        float64
    : aciadać_aciasje        float64
    : aciadać_aciasme        float64
    : aciadać_aciatłe        float64
    : aciadać_aciatwe        float64
    : aciadać_aciazje        float64
    : aciagać_aciadłe        float64
    : aciagać_aciapłe        float64
    : aciagać_aciasce        float64
    : aciagać_aciasje        float64
    : aciagać_aciasme        float64
    : aciagać_aciatłe        float64
    : aciagać_aciatwe        float64
    : aciagać_aciazje        float64
    : aciajać_aciadłe        float64
    : aciajać_aciapłe        float64
    : aciajać_aciasce        float64
    : aciajać_aciasje        float64
    : aciajać_aciasme        float64
    : aciajać_aciatłe        float64
    :                         ...
    : zwlocić_zwlopie        float64
    : chorucać_chorunek      float64
    : chorukać_chorunek      float64
    : kożymieć_kożychie      float64
    : kożymieć_kożystie      float64
    : kułsykać_kułsynek      float64
    : moregać_morekia        float64
    : moregać_moretia        float64
    : morerać_morekia        float64
    : morerać_moretia        float64
    : nazjawać_nazjacie      float64
    : neżymieć_neżydzie      float64
    : neżymieć_neżystie      float64
    : nibfijać_nibfinie      float64
    : nużymieć_nużydzie      float64
    : nużymieć_nużystie      float64
    : podżymieć_podżychie    float64
    : rolisać_rolibia        float64
    : rolisać_rolipia        float64
    : wazycieć_wazychie      float64
    : wazycieć_wazystie      float64
    : wazycieć_wazyśmie      float64
    : wazycieć_wazyśnie      float64
    : wazymieć_wazychie      float64
    : wazymieć_wazystie      float64
    : wazymieć_wazyśmie      float64
    : wazymieć_wazyśnie      float64
    : ważymieć_ważychie      float64
    : ważymieć_ważystie      float64
    : CLASS                    int64
    : Length: 542, dtype: object
    :
    :END:

*** DOIN vtypes

    :     -measureLevels: measurement level dictionary {varName: <level>}
    :      Valid levels are: "unknown", "nominal", "ordinal", "scale",
    :      "ratio", "flag", "typeless". Cf. VARIABLE LEVEL (default: None)
    :     -columnWidths: column display width dictionary {varName: <int>}.
    :       Cf. VARIABLE WIDTH. (default: None --> >= 10 [stringVars] or automatic
    :       [numVars])
    :     -alignments: alignment dictionary {varName: <left/center/right>}
    :       Cf. VARIABLE ALIGNMENT (default: None --> left)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

vtypes = {}
levels = {}
widths = {}
aligns = {}

for ii, vname in enumerate( vnames ):
  if dtypes[ vname ] == 'int64':
    vtypes[ vname ] = 0
    levels[ vname ] = "nominal"
    widths[ vname ] = 8
    levels[ vname ] = "left"
  elif dtypes[ vname ] == 'float64':
    vtypes[ vname ] = 0
    levels[ vname ] = "nominal"
    widths[ vname ] = 8
    levels[ vname ] = "left"
  else:
    vtypes[ vname ] = 256
    levels[ vname ] = "nominal"
    widths[ vname ] = 8
    levels[ vname ] = "right"

pp( vtypes )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[106]:
    # output
    : {'CLASS': 0,
    :  'aciabać_aciadłe': 0,
    :  'aciabać_aciapłe': 0,
    :  'aciabać_aciasce': 0,
    :  'aciabać_aciasje': 0,
    :  'aciabać_aciasme': 0,
    :  'aciabać_aciatwe': 0,
    :  'aciabać_aciatłe': 0,
    :  'aciabać_aciazje': 0,
    :  'aciadać_aciadłe': 0,
    :  'aciadać_aciapłe': 0,
    :  'aciadać_aciasce': 0,
    :  'aciadać_aciasje': 0,
    :  'aciadać_aciasme': 0,
    :  'aciadać_aciatwe': 0,
    :  'aciadać_aciatłe': 0,
    :  'aciadać_aciazje': 0,
    :  'aciagać_aciadłe': 0,
    :  'aciagać_aciapłe': 0,
    :  'aciagać_aciasce': 0,
    :  'aciagać_aciasje': 0,
    :  'aciagać_aciasme': 0,
    :  'aciagać_aciatwe': 0,
    :  'aciagać_aciatłe': 0,
    :  'aciagać_aciazje': 0,
    :  'aciajać_aciadłe': 0,
    :  'aciajać_aciapłe': 0,
    :  'aciajać_aciasce': 0,
    :  'aciajać_aciasje': 0,
    :  'aciajać_aciasme': 0,
    :  'aciajać_aciatwe': 0,
    :  'aciajać_aciatłe': 0,
    :  'aciajać_aciazje': 0,
    :  'aciakać_aciadłe': 0,
    :  'aciakać_aciapłe': 0,
    :  'aciakać_aciasce': 0,
    :  'aciakać_aciasje': 0,
    :  'aciakać_aciasme': 0,
    :  'aciakać_aciatwe': 0,
    :  'aciakać_aciatłe': 0,
    :  'aciakać_aciazje': 0,
    :  'acialać_aciadłe': 0,
    :  'acialać_aciapłe': 0,
    :  'acialać_aciasce': 0,
    :  'acialać_aciasje': 0,
    :  'acialać_aciasme': 0,
    :  'acialać_aciatwe': 0,
    :  'acialać_aciatłe': 0,
    :  'acialać_aciazje': 0,
    :  'aciamać_aciadłe': 0,
    :  'aciamać_aciapłe': 0,
    :  'aciamać_aciasce': 0,
    :  'aciamać_aciasje': 0,
    :  'aciamać_aciasme': 0,
    :  'aciamać_aciatwe': 0,
    :  'aciamać_aciatłe': 0,
    :  'aciamać_aciazje': 0,
    :  'aciasać_aciadłe': 0,
    :  'aciasać_aciapłe': 0,
    :  'aciasać_aciasce': 0,
    :  'aciasać_aciasje': 0,
    :  'aciasać_aciasme': 0,
    :  'aciasać_aciatwe': 0,
    :  'aciasać_aciatłe': 0,
    :  'aciasać_aciazje': 0,
    :  'aciatać_aciadłe': 0,
    :  'aciatać_aciapłe': 0,
    :  'aciatać_aciasce': 0,
    :  'aciatać_aciasje': 0,
    :  'aciatać_aciasme': 0,
    :  'aciatać_aciatwe': 0,
    :  'aciatać_aciatłe': 0,
    :  'aciatać_aciazje': 0,
    :  'aciazać_aciadłe': 0,
    :  'aciazać_aciapłe': 0,
    :  'aciazać_aciasce': 0,
    :  'aciazać_aciasje': 0,
    :  'aciazać_aciasme': 0,
    :  'aciazać_aciatwe': 0,
    :  'aciazać_aciatłe': 0,
    :  'aciazać_aciazje': 0,
    :  'aciażać_aciadłe': 0,
    :  'aciażać_aciapłe': 0,
    :  'aciażać_aciasce': 0,
    :  'aciażać_aciasje': 0,
    :  'aciażać_aciasme': 0,
    :  'aciażać_aciatwe': 0,
    :  'aciażać_aciatłe': 0,
    :  'aciażać_aciazje': 0,
    :  'bakdawić_bakdagra': 0,
    :  'bakdawić_bakdakła': 0,
    :  'bakdawić_bakdazja': 0,
    :  'bakdawić_bakdaśna': 0,
    :  'bapkawić_bapkakra': 0,
    :  'bapkawić_bapkakła': 0,
    :  'bażlawić_bażlałek': 0,
    :  'chacykać_chacynek': 0,
    :  'chobucać_chobunek': 0,
    :  'chobujać_chobunek': 0,
    :  'chobukać_chobunek': 0,
    :  'chorucać_chorunek': 0,
    :  'chorukać_chorunek': 0,
    :  'cobucać_cobunek': 0,
    :  'cobujać_cobunek': 0,
    :  'cobukać_cobunek': 0,
    :  'cocucać_cocunek': 0,
    :  'cocukać_cocunek': 0,
    :  'czaboczić_czaborzęd': 0,
    :  'czabognąć_czaborzęd': 0,
    :  'czaborzić_czaborzęd': 0,
    :  'czaboskić_czaborzęd': 0,
    :  'czaboszić_czaborzęd': 0,
    :  'czaboznąć_czaborzęd': 0,
    :  'czabośnąć_czaborzęd': 0,
    :  'dotaftać_dotaspód': 0,
    :  'dotaftać_dotaśród': 0,
    :  'dotazbać_dotaspód': 0,
    :  'dotazbać_dotaśród': 0,
    :  'dotazmać_dotaspód': 0,
    :  'dotazmać_dotaśród': 0,
    :  'dotaśmać_dotaspód': 0,
    :  'dotaśmać_dotaśród': 0,
    :  'dzaboczić_dzaborzud': 0,
    :  'dzabognąć_dzaborzud': 0,
    :  'dzaborzić_dzaborzud': 0,
    :  'dzaboskić_dzaborzud': 0,
    :  'dzaboznąć_dzaborzud': 0,
    :  'dzabośnąć_dzaborzud': 0,
    :  'epkawić_epkadża': 0,
    :  'epkawić_epkagla': 0,
    :  'epkawić_epkasma': 0,
    :  'espinić_espisat': 0,
    :  'ećkawić_ećkadża': 0,
    :  'ećkawić_ećkafta': 0,
    :  'ećkawić_ećkakra': 0,
    :  'ećkawić_ećkazja': 0,
    :  'ećkawić_ećkałek': 0,
    :  'eżnawać_eżnałek': 0,
    :  'eżnawić_eżnałek': 0,
    :  'firdawić_firdagna': 0,
    :  'firdawić_firdagra': 0,
    :  'firdawić_firdazja': 0,
    :  'fokucać_fokunek': 0,
    :  'fokujać_fokunek': 0,
    :  'grocucać_grocunek': 0,
    :  'grocukać_grocunek': 0,
    :  'grokucać_grokunek': 0,
    :  'grokujać_grokunek': 0,
    :  'grokukać_grokunek': 0,
    :  'grosukać_grosunek': 0,
    :  'kanwijać_kanwigia': 0,
    :  'kanwisać_kanwigia': 0,
    :  'kazycieć_kazychie': 0,
    :  'kazycieć_kazystie': 0,
    :  'kazycieć_kazyśmie': 0,
    :  'kazymieć_kazychie': 0,
    :  'kazymieć_kazystie': 0,
    :  'kazymieć_kazyśmie': 0,
    :  'kożymieć_kożychie': 0,
    :  'kożymieć_kożystie': 0,
    :  'kunzycieć_kunzychie': 0,
    :  'kunzycieć_kunzydzie': 0,
    :  'kunzycieć_kunzystie': 0,
    :  'kunzycieć_kunzyście': 0,
    :  'kunzycieć_kunzyśmie': 0,
    :  'kunzycieć_kunzyśnie': 0,
    :  'kunzymieć_kunzychie': 0,
    :  'kunzymieć_kunzydzie': 0,
    :  'kunzymieć_kunzystie': 0,
    :  'kunzymieć_kunzyście': 0,
    :  'kunzymieć_kunzyśmie': 0,
    :  'kunzymieć_kunzyśnie': 0,
    :  'kułcykać_kułcynek': 0,
    :  'kułsykać_kułsynek': 0,
    :  'kułzycieć_kułzychie': 0,
    :  'kułzycieć_kułzystie': 0,
    :  'kułzycieć_kułzyśnie': 0,
    :  'kułzymieć_kułzychie': 0,
    :  'kułzymieć_kułzystie': 0,
    :  'kułzymieć_kułzyśnie': 0,
    :  'memszeć_memnend': 0,
    :  'mepibać_mepidia': 0,
    :  'mepibać_mepipia': 0,
    :  'mepidać_mepidia': 0,
    :  'mepidać_mepipia': 0,
    :  'mepigać_mepidia': 0,
    :  'mepigać_mepipia': 0,
    :  'mepilać_mepidia': 0,
    :  'mepilać_mepipia': 0,
    :  'mepipać_mepidia': 0,
    :  'mepipać_mepipia': 0,
    :  'mepirać_mepidia': 0,
    :  'mepirać_mepipia': 0,
    :  'mepizać_mepidia': 0,
    :  'mepizać_mepipia': 0,
    :  'mepiżać_mepidia': 0,
    :  'mepiżać_mepipia': 0,
    :  'mewijać_mewibia': 0,
    :  'mewijać_mewisia': 0,
    :  'mewisać_mewibia': 0,
    :  'mewisać_mewisia': 0,
    :  'mocebać_mocetła': 0,
    :  'mocebać_mocezja': 0,
    :  'mocedać_mocetła': 0,
    :  'mocedać_mocezja': 0,
    :  'mocefać_mocetła': 0,
    :  'mocefać_mocezja': 0,
    :  'mocegać_mocetła': 0,
    :  'mocegać_mocezja': 0,
    :  'mocehać_mocetła': 0,
    :  'mocehać_mocezja': 0,
    :  'mocejać_mocetła': 0,
    :  'mocejać_mocezja': 0,
    :  'mocekać_mocetła': 0,
    :  'mocekać_mocezja': 0,
    :  'mocelać_mocetła': 0,
    :  'mocelać_mocezja': 0,
    :  'mocepać_mocetła': 0,
    :  'mocepać_mocezja': 0,
    :  'mocerać_mocetła': 0,
    :  'mocerać_mocezja': 0,
    :  'mocetać_mocetła': 0,
    :  'mocetać_mocezja': 0,
    :  'mocezać_mocetła': 0,
    :  'mocezać_mocezja': 0,
    :  'moceżać_mocetła': 0,
    :  'moceżać_mocezja': 0,
    :  'moregać_morekia': 0,
    :  'moregać_moretia': 0,
    :  'morerać_morekia': 0,
    :  'morerać_moretia': 0,
    :  'mosechyć_moseznor': 0,
    :  'mosekieć_moseznor': 0,
    :  'mosepieć_moseznor': 0,
    :  'motadwać_motaspód': 0,
    :  'motaftać_motaspód': 0,
    :  'motazbać_motaspód': 0,
    :  'motazmać_motaspód': 0,
    :  'motaśmać_motaspód': 0,
    :  'mowelzać_mowemsko': 0,
    :  'mowenzać_mowemsko': 0,
    :  'mowesieć_mowemsko': 0,
    :  'mowełzać_mowemsko': 0,
    :  'mylisać_mylipia': 0,
    :  'mypibać_mypidia': 0,
    :  'mypibać_mypigia': 0,
    :  'mypidać_mypidia': 0,
    :  'mypidać_mypigia': 0,
    :  'mypigać_mypidia': 0,
    :  'mypigać_mypigia': 0,
    :  'mypilać_mypidia': 0,
    :  'mypilać_mypigia': 0,
    :  'mypipać_mypidia': 0,
    :  'mypipać_mypigia': 0,
    :  'mypirać_mypidia': 0,
    :  'mypirać_mypigia': 0,
    :  'mypizać_mypidia': 0,
    :  'mypizać_mypigia': 0,
    :  'mypiżać_mypidia': 0,
    :  'mypiżać_mypigia': 0,
    :  'młarykać_młarynek': 0,
    :  'młarywać_młarynek': 0,
    :  'nazjawać_nazjacie': 0,
    :  'nazycieć_nazychie': 0,
    :  'nazycieć_nazystie': 0,
    :  'nazycieć_nazyśnie': 0,
    :  'nazymieć_nazychie': 0,
    :  'nazymieć_nazystie': 0,
    :  'nazymieć_nazyśnie': 0,
    :  'neżymieć_neżydzie': 0,
    :  'neżymieć_neżystie': 0,
    :  'nibfijać_nibfinie': 0,
    :  'nichinić_nichimit': 0,
    :  'nichinić_nichimyt': 0,
    :  'nichinić_nichirat': 0,
    :  'nichinić_nichisat': 0,
    :  'nichipić_nichimit': 0,
    :  'nichipić_nichimyt': 0,
    :  'nichipić_nichirat': 0,
    :  'nichipić_nichisat': 0,
    :  'nimlisać_nimlibia': 0,
    :  'niźwijać_niźwibia': 0,
    :  'niźwisać_niźwibia': 0,
    :  'nużymieć_nużydzie': 0,
    :  'nużymieć_nużystie': 0,
    :  'ociabać_ociasce': 0,
    :  'ociabać_ociasje': 0,
    :  'ociabać_ociasme': 0,
    :  'ociabać_ociatłe': 0,
    :  'ociajać_ociasce': 0,
    :  'ociajać_ociasje': 0,
    :  'ociajać_ociasme': 0,
    :  'ociajać_ociatłe': 0,
    :  'ociamać_ociasce': 0,
    :  'ociamać_ociasje': 0,
    :  'ociamać_ociasme': 0,
    :  'ociamać_ociatłe': 0,
    :  'ociazać_ociasce': 0,
    :  'ociazać_ociasje': 0,
    :  'ociazać_ociasme': 0,
    :  'ociazać_ociatłe': 0,
    :  'omukawić_omukakra': 0,
    :  'plwocić_plwopie': 0,
    :  'pocedać_pocerza': 0,
    :  'pocedać_pocetwa': 0,
    :  'pocefać_pocerza': 0,
    :  'pocefać_pocetwa': 0,
    :  'pocehać_pocerza': 0,
    :  'pocehać_pocetwa': 0,
    :  'pocejać_pocerza': 0,
    :  'pocejać_pocetwa': 0,
    :  'pocepać_pocerza': 0,
    :  'pocepać_pocetwa': 0,
    :  'pocetać_pocerza': 0,
    :  'pocetać_pocetwa': 0,
    :  'pocezać_pocerza': 0,
    :  'pocezać_pocetwa': 0,
    :  'poceżać_pocerza': 0,
    :  'poceżać_pocetwa': 0,
    :  'podżymieć_podżychie': 0,
    :  'pozycieć_pozydzie': 0,
    :  'pozycieć_pozyście': 0,
    :  'pozymieć_pozydzie': 0,
    :  'pozymieć_pozyście': 0,
    :  'radnawać_radnałek': 0,
    :  'radnawić_radnałek': 0,
    :  'rocebać_rocepła': 0,
    :  'rocebać_roceska': 0,
    :  'rocebać_rocesza': 0,
    :  'rocebać_rocezja': 0,
    :  'rocedać_rocepła': 0,
    :  'rocedać_roceska': 0,
    :  'rocedać_rocesza': 0,
    :  'rocedać_rocezja': 0,
    :  'rocefać_rocepła': 0,
    :  'rocefać_roceska': 0,
    :  'rocefać_rocesza': 0,
    :  'rocefać_rocezja': 0,
    :  'rocegać_rocepła': 0,
    :  'rocegać_roceska': 0,
    :  'rocegać_rocesza': 0,
    :  'rocegać_rocezja': 0,
    :  'rocehać_rocepła': 0,
    :  'rocehać_roceska': 0,
    :  'rocehać_rocesza': 0,
    :  'rocehać_rocezja': 0,
    :  'rocejać_rocepła': 0,
    :  'rocejać_roceska': 0,
    :  'rocejać_rocesza': 0,
    :  'rocejać_rocezja': 0,
    :  'rocekać_rocepła': 0,
    :  'rocekać_roceska': 0,
    :  'rocekać_rocesza': 0,
    :  'rocekać_rocezja': 0,
    :  'rocelać_rocepła': 0,
    :  'rocelać_roceska': 0,
    :  'rocelać_rocesza': 0,
    :  'rocelać_rocezja': 0,
    :  'rocepać_rocepła': 0,
    :  'rocepać_roceska': 0,
    :  'rocepać_rocesza': 0,
    :  'rocepać_rocezja': 0,
    :  'rocerać_rocepła': 0,
    :  'rocerać_roceska': 0,
    :  'rocerać_rocesza': 0,
    :  'rocerać_rocezja': 0,
    :  'rocetać_rocepła': 0,
    :  'rocetać_roceska': 0,
    :  'rocetać_rocesza': 0,
    :  'rocetać_rocezja': 0,
    :  'rocezać_rocepła': 0,
    :  'rocezać_roceska': 0,
    :  'rocezać_rocesza': 0,
    :  'rocezać_rocezja': 0,
    :  'roceżać_rocepła': 0,
    :  'roceżać_roceska': 0,
    :  'roceżać_rocesza': 0,
    :  'roceżać_rocezja': 0,
    :  'rolisać_rolibia': 0,
    :  'rolisać_rolipia': 0,
    :  'rorefać_rorekia': 0,
    :  'roregać_rorekia': 0,
    :  'rorehać_rorekia': 0,
    :  'rorepać_rorekia': 0,
    :  'rorerać_rorekia': 0,
    :  'rorezać_rorekia': 0,
    :  'roreżać_rorekia': 0,
    :  'rosechyć_roseznor': 0,
    :  'rosekieć_roseznor': 0,
    :  'rosepieć_roseznor': 0,
    :  'rotadwać_rotagród': 0,
    :  'rotadwać_rotapłód': 0,
    :  'rotaftać_rotagród': 0,
    :  'rotaftać_rotapłód': 0,
    :  'rotazbać_rotagród': 0,
    :  'rotazbać_rotapłód': 0,
    :  'rotazmać_rotagród': 0,
    :  'rotazmać_rotapłód': 0,
    :  'rotaśmać_rotagród': 0,
    :  'rotaśmać_rotapłód': 0,
    :  'rowelzać_rowedsko': 0,
    :  'rowelzać_rowemsko': 0,
    :  'rowenzać_rowedsko': 0,
    :  'rowenzać_rowemsko': 0,
    :  'rowesieć_rowedsko': 0,
    :  'rowesieć_rowemsko': 0,
    :  'rowełzać_rowedsko': 0,
    :  'rowełzać_rowemsko': 0,
    :  'rywisać_rywibia': 0,
    :  'rywisać_rywigia': 0,
    :  'rywisać_rywipia': 0,
    :  'sepacerać_sepacesza': 0,
    :  'sepacezać_sepacesza': 0,
    :  'seracehać_seracesma': 0,
    :  'seracehać_seracesza': 0,
    :  'seracehać_seracetła': 0,
    :  'seracekać_seracesma': 0,
    :  'seracekać_seracesza': 0,
    :  'seracekać_seracetła': 0,
    :  'seracelać_seracesma': 0,
    :  'seracelać_seracesza': 0,
    :  'seracelać_seracetła': 0,
    :  'seracezać_seracesma': 0,
    :  'seracezać_seracesza': 0,
    :  'seracezać_seracetła': 0,
    :  'skaboczić_skaborzod': 0,
    :  'skaborzić_skaborzod': 0,
    :  'skaboskić_skaborzod': 0,
    :  'skaboznąć_skaborzod': 0,
    :  'skabośnąć_skaborzod': 0,
    :  'sobochić_soborzod': 0,
    :  'sobochić_soborzud': 0,
    :  'sobochić_soborzęd': 0,
    :  'soboczić_soborzod': 0,
    :  'soboczić_soborzud': 0,
    :  'soboczić_soborzęd': 0,
    :  'sobognąć_soborzod': 0,
    :  'sobognąć_soborzud': 0,
    :  'sobognąć_soborzęd': 0,
    :  'soborzić_soborzod': 0,
    :  'soborzić_soborzud': 0,
    :  'soborzić_soborzęd': 0,
    :  'soboskić_soborzod': 0,
    :  'soboskić_soborzud': 0,
    :  'soboskić_soborzęd': 0,
    :  'sobostić_soborzod': 0,
    :  'sobostić_soborzud': 0,
    :  'sobostić_soborzęd': 0,
    :  'soboszić_soborzod': 0,
    :  'soboszić_soborzud': 0,
    :  'soboszić_soborzęd': 0,
    :  'soboznąć_soborzod': 0,
    :  'soboznąć_soborzud': 0,
    :  'soboznąć_soborzęd': 0,
    :  'sobośnąć_soborzod': 0,
    :  'sobośnąć_soborzud': 0,
    :  'sobośnąć_soborzęd': 0,
    :  'socadiać_socagród': 0,
    :  'socafiać_socagród': 0,
    :  'socagiać_socagród': 0,
    :  'socasiać_socagród': 0,
    :  'socatiać_socagród': 0,
    :  'socaziać_socagród': 0,
    :  'sotadwać_sotagród': 0,
    :  'sotadwać_sotaśród': 0,
    :  'sotaftać_sotagród': 0,
    :  'sotaftać_sotaśród': 0,
    :  'sotazbać_sotagród': 0,
    :  'sotazbać_sotaśród': 0,
    :  'sotazmać_sotagród': 0,
    :  'sotazmać_sotaśród': 0,
    :  'sotaśmać_sotagród': 0,
    :  'sotaśmać_sotaśród': 0,
    :  'spobochić_spoborzud': 0,
    :  'spoboczić_spoborzud': 0,
    :  'spobognąć_spoborzud': 0,
    :  'spoborzić_spoborzud': 0,
    :  'spoboskić_spoborzud': 0,
    :  'spobostić_spoborzud': 0,
    :  'spoboszić_spoborzud': 0,
    :  'spoboznąć_spoborzud': 0,
    :  'spobośnąć_spoborzud': 0,
    :  'stabochić_staborzod': 0,
    :  'stabochić_staborzud': 0,
    :  'staboczić_staborzod': 0,
    :  'staboczić_staborzud': 0,
    :  'stabognąć_staborzod': 0,
    :  'stabognąć_staborzud': 0,
    :  'staborzić_staborzod': 0,
    :  'staborzić_staborzud': 0,
    :  'staboskić_staborzod': 0,
    :  'staboskić_staborzud': 0,
    :  'stabostić_staborzod': 0,
    :  'stabostić_staborzud': 0,
    :  'staboznąć_staborzod': 0,
    :  'staboznąć_staborzud': 0,
    :  'stabośnąć_staborzod': 0,
    :  'stabośnąć_staborzud': 0,
    :  'sylarykać_sylarynek': 0,
    :  'sylarywać_sylarynek': 0,
    :  'sypacykać_sypacynek': 0,
    :  'syparykać_syparynek': 0,
    :  'syparywać_syparynek': 0,
    :  'szabochić_szaborzęd': 0,
    :  'szaboczić_szaborzęd': 0,
    :  'szabognąć_szaborzęd': 0,
    :  'szaborzić_szaborzęd': 0,
    :  'szaboskić_szaborzęd': 0,
    :  'szabostić_szaborzęd': 0,
    :  'szaboszić_szaborzęd': 0,
    :  'szaboznąć_szaborzęd': 0,
    :  'szabośnąć_szaborzęd': 0,
    :  'tkwicować_tkwicodła': 0,
    :  'ucirczyć_ucirstwa': 0,
    :  'udrkucać_udrkunek': 0,
    :  'udrkujać_udrkunek': 0,
    :  'udrkukać_udrkunek': 0,
    :  'wawydzić_wawykłag': 0,
    :  'wazycieć_wazychie': 0,
    :  'wazycieć_wazystie': 0,
    :  'wazycieć_wazyśmie': 0,
    :  'wazycieć_wazyśnie': 0,
    :  'wazymieć_wazychie': 0,
    :  'wazymieć_wazystie': 0,
    :  'wazymieć_wazyśmie': 0,
    :  'wazymieć_wazyśnie': 0,
    :  'ważymieć_ważychie': 0,
    :  'ważymieć_ważystie': 0,
    :  'wowoftać_wowobrót': 0,
    :  'wowozbać_wowobrót': 0,
    :  'wowozmać_wowobrót': 0,
    :  'wowośmać_wowobrót': 0,
    :  'wukawić_wukałek': 0,
    :  'wunawać_wunanie': 0,
    :  'wunawić_wunanie': 0,
    :  'zapumkić_zapumtek': 0,
    :  'zapumnić_zapumtek': 0,
    :  'zwlocić_zwlopie': 0,
    :  'łaregać_łarekia': 0,
    :  'łarerać_łarekia': 0,
    :  'łarezać_łarekia': 0,
    :  'łareżać_łarekia': 0}
    :
    :END:

*** DONE =spss.SavWriter=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

savFileName = "test_004.sav"
with spss.SavWriter(savFileName, vnames, vtypes, ioUtf8=True) as writer:
    writer.writerows(tmp_df.values)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[107]:
    :END:
