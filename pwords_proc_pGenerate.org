#+TITLE: pwords_proc_pGenerate.org
#+AUTHOR: JNi, JDo, MZF


* DONE Stage 0000: Init
** iPython ~autoreload~

   - https://ipython.readthedocs.io/en/stable/config/extensions/autoreload.html

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from IPython import get_ipython
get_ipython().magic('load_ext autoreload')

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[3]:
   # output
   : The autoreload extension is already loaded. To reload it, use:
   :   %reload_ext autoreload
   :
   :END:

** Imports

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from init.imports    import *
get_ipython().magic('autoreload')

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[4]:
   # output
   :
   : ModuleNotFoundErrorTraceback (most recent call last)
   : <ipython-input-4-6a4d166a208c> in <module>()
   :       1
   : ----> 2 from init.imports    import *
   :       3 get_ipython().magic('autoreload')
   :
   : ModuleNotFoundError: No module named 'init'
   :END:

** Load

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from init.load       import *
get_ipython().magic('autoreload')

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[5]:
   # output
   :
   : ModuleNotFoundErrorTraceback (most recent call last)
   : <ipython-input-5-51ea746f0e2e> in <module>()
   :       1
   : ----> 2 from init.load       import *
   :       3 get_ipython().magic('autoreload')
   :
   : ModuleNotFoundError: No module named 'init'
   :END:

** Auxiliary

   #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0000.py

from aux_nlp.aux_nlp import *
get_ipython().magic('autoreload')
   
   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[6]:
   :END:

* DONE Stage 0001: Basic cleanup and filtering
** Proc 00: Load
*** DONE Load =nouns=, =verbs= and =words= DataFrames

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0000_nouns = pd.read_excel( "./data_in/s0000_nouns.xlsx", )
s0000_verbs = pd.read_excel( "./data_in/s0000_verbs.xlsx", )
s0000_words = pd.read_excel( "./data_in/s0000_words.xlsx", )

s0000_nouns.columns = ["WORD","FREQ"]
s0000_verbs.columns = ["WORD","FREQ"]
# s0000_words.columns = ["WORD","FREQ"]

print( s0000_words )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[9]:
    # output
    :        Unnamed: 0          WORD       FREQ
    : 0               0             w  240721554
    : 1               1             i  187175643
    : 2               2            na  151038296
    : 3               3             z  133291550
    : 4               4           nie  125457390
    : 5               5           się  120989072
    : 6               6            to  102605682
    : 7               7            do   93846762
    : 8               8          jest   72687005
    : 9               9            że   58400782
    : 10             10             a   57234273
    : 11             11             o   51093560
    : 12             12           jak   43277567
    : 13             13           ale   33611565
    : 14             14            po   33257173
    : 15             15            co   33158326
    : 16             16            od   29281019
    : 17             17            za   28148919
    : 18             18           dla   26620555
    : 19             19           tak   25566520
    : 20             20           tym   25532630
    : 21             21           czy   24521500
    : 22             22         przez   22881640
    : 23             23            ze   22704894
    : 24             24            są   20733532
    : 25             25         tylko   20127742
    : 26             26            ma   19966418
    : 27             27          tego   19814293
    : 28             28          oraz   19039795
    : 29             29           już   17502103
    : ...           ...           ...        ...
    : 19970       19970    wszelakich      36418
    : 19971       19971         robot      36417
    : 19972       19972        równej      36414
    : 19973       19973     końcowych      36413
    : 19974       19974  kilkukrotnie      36413
    : 19975       19975    chemicznej      36412
    : 19976       19976  niezależnego      36411
    : 19977       19977   kanalizacja      36408
    : 19978       19978        pralka      36397
    : 19979       19979    formularze      36395
    : 19980       19980        ocalić      36395
    : 19981       19981       central      36393
    : 19982       19982        anioły      36392
    : 19983       19983      noszenie      36385
    : 19984       19984      fachowca      36383
    : 19985       19985     zbiorowej      36383
    : 19986       19986      swiadczy      36380
    : 19987       19987       czosnek      36377
    : 19988       19988   występowały      36374
    : 19989       19989       udzieli      36373
    : 19990       19990           bph      36373
    : 19991       19991  konsekwencja      36368
    : 19992       19992          brąz      36368
    : 19993       19993     otwartość      36367
    : 19994       19994  obywatelskie      36366
    : 19995       19995  podobieństwa      36363
    : 19996       19996        łódzki      36361
    : 19997       19997        france      36360
    : 19998       19998         wodzą      36358
    : 19999       19999     greckiego      36356
    :
    : [20000 rows x 3 columns]
    :
    :END:

** Proc 01: Cleanup (=nouns=, =verbs= and =words=)
*** DONE Notes

    This section contains quick and easy cleanup for the following
    variables:
    - ~s0000_verbs~,
    - ~s0000_nouns~ and
    - ~s0000_words~

    Initial count

    | Category | Count | Note   |
    |----------+-------+--------|
    | nouns    |  1000 |        |
    | verbs    |  1000 |        |
    | words    | 20000 | Aprox. |

*** DONE Re-initialize (copy) =nouns=, =verbs= and =words= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns = s0000_nouns.copy()
s0001_verbs = s0000_verbs.copy()
s0001_words = s0000_words.copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[6]:
    :END:

*** DONE Sort by =FREQ=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0001_verbs.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0001_words.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[7]:
    :END:

*** DONE Checkup: ~s0001_nouns~, ~s0001_verbs~ and ~s0001_words~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_list = [  s0001_nouns,   s0001_verbs,   s0001_words,  ]
df_info = [ "s0001_nouns", "s0001_verbs", "s0001_words", ]
df_head = 8
df_tail = 8

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[8]:
    # output
    : ===========================================================================
    : s0001_nouns
    : ===========================================================================
    : idx count: 1000
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ
    : 0        to  52732929
    : 1        co  28284385
    : 2       rok  25419583
    : 3      czas  16630295
    : 4  człowiek  12163557
    : 5     praca  11797326
    : 6     dzień  11443515
    : 7       raz  11407991
    : ---------------------------------------------------------------------------
    :                 WORD    FREQ
    : 992           tabela  455112
    : 993          wyjątek  455108
    : 994           zarzut  454982
    : 995  forum.gazeta.pl  454797
    : 996          wysiłek  452766
    : 997            umysł  452428
    : 998          magazyn  451186
    : 999             Park  451031
    : ===========================================================================
    : s0001_verbs
    : ===========================================================================
    : idx count: 1000
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD       FREQ
    : 0       być  163773312
    : 1      mieć   55366421
    : 2       móc   26610696
    : 3    zostać   11638052
    : 4    chcieć    9997827
    : 5  wiedzieć    9565005
    : 6    musieć    8864472
    : 7     mówić    7085155
    : ---------------------------------------------------------------------------
    :            WORD    FREQ
    : 992   pokonywać  185354
    : 993   awansować  184924
    : 994  wychowywać  184514
    : 995  reklamować  184285
    : 996    dozwolić  184042
    : 997       łapać  184021
    : 998    zachęcić  184009
    : 999   poświęcać  183935
    : ===========================================================================
    : s0001_words
    : ===========================================================================
    : idx count: 20000
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :   WORD       FREQ
    : 0    w  240721554
    : 1    i  187175643
    : 2   na  151038296
    : 3    z  133291550
    : 4  nie  125457390
    : 5  się  120989072
    : 6   to  102605682
    : 7   do   93846762
    : ---------------------------------------------------------------------------
    :                WORD   FREQ
    : 19991  konsekwencja  36368
    : 19993     otwartość  36367
    : 19994  obywatelskie  36366
    : 19995  podobieństwa  36363
    : 19996        łódzki  36361
    : 19997        france  36360
    : 19998         wodzą  36358
    : 19999     greckiego  36356
    :
    :END:

*** DONE Legalize ~s0001_nouns_legal~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal, s0001_nouns_illegal = words_alpha(
    s0001_nouns,
    words_col="WORD",
    charset=alpha_pl["anycase"],
    n_samp=24,
    verbose=2,
)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[9]:
    # output
    : ===========================================================================
    : Got: 1000 words (rows).
    : ===========================================================================
    : keep: 987 words (rows).
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :         WORD      FREQ
    : 0         to  52732929
    : 1         co  28284385
    : 2        rok  25419583
    : 3       czas  16630295
    : 4   człowiek  12163557
    : 5      praca  11797326
    : 6      dzień  11443515
    : 7        raz  11407991
    : 8     strona  11008323
    : 9    miejsce  10632564
    : 10     osoba  10547308
    : 11  wszystko  10236449
    : 12   dziecko   8604939
    : 13     temat   8470486
    : 14    Polska   8002107
    : 15     firma   7855864
    : 16     życie   7372748
    : 17    sprawa   6925157
    : 18       coś   6848176
    : 19   problem   6737668
    : 20       nic   6549819
    : 21    sposób   6295660
    : 22       pan   6085885
    : 23       dom   5879198
    : ===========================================================================
    : drop: 13 words (rows).
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :                 WORD     FREQ
    : 168              np.  1919858
    : 299              ul.  1327050
    : 432            godz.   994941
    : 460              siÄ   933816
    : 471              ok.   914397
    : 605             art.   719336
    : 676             tys.   662444
    : 695             itp.   648396
    : 713            proc.   639475
    : 805              św.   574705
    : 818              zł.   568371
    : 876             tzw.   527707
    : 995  forum.gazeta.pl   454797
    :
    :END:

*** DONE Legalize ~s0001_verbs_legal~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_verbs_legal, s0001_verbs_illegal = words_alpha(
    s0001_verbs,
    words_col="WORD",
    charset=alpha_pl["anycase"],
    n_samp=24,
    verbose=2,
)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[10]:
    # output
    : ===========================================================================
    : Got: 1000 words (rows).
    : ===========================================================================
    : keep: 989 words (rows).
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :           WORD       FREQ
    : 0          być  163773312
    : 1         mieć   55366421
    : 2          móc   26610696
    : 3       zostać   11638052
    : 4       chcieć    9997827
    : 5     wiedzieć    9565005
    : 6       musieć    8864472
    : 7        mówić    7085155
    : 8       będzie    5966505
    : 9        robić    5517232
    : 10      zrobić    5510726
    : 11     należeć    5434608
    : 12  powiedzieć    5291187
    : 13   prowadzić    5123328
    : 14     chodzić    5053098
    : 15     znaleźć    5000166
    : 16         dać    4956082
    : 17        stać    4172496
    : 18       pisać    4120548
    : 19     widzieć    3846749
    : 20    posiadać    3843145
    : 21     działać    3799657
    : 22        znać    3474324
    : 23    dotyczyć    3449448
    : ===========================================================================
    : drop: 11 words (rows).
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :       WORD     FREQ
    : 80     np.  1780512
    : 256    ok.   804650
    : 343    siÄ   623112
    : 593   tzw.   349954
    : 600   itp.   344340
    : 724     sÄ   280654
    : 760    ks.   262959
    : 807  prof.   243514
    : 829   itd.   234705
    : 845    tj.   230038
    : 848    św.   228325
    :
    :END:

*** DONE Legalize ~s0001_words_legal~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_words_legal, s0001_words_illegal = words_alpha(
    s0001_words,
    words_col="WORD",
    charset=alpha_pl["anycase"],
    n_samp=32,
    verbose=2,
)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[11]:
    # output
    : ===========================================================================
    : Got: 20000 words (rows).
    : ===========================================================================
    : keep: 19792 words (rows).
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :      WORD       FREQ
    : 0       w  240721554
    : 1       i  187175643
    : 2      na  151038296
    : 3       z  133291550
    : 4     nie  125457390
    : 5     się  120989072
    : 6      to  102605682
    : 7      do   93846762
    : 8    jest   72687005
    : 9      że   58400782
    : 10      a   57234273
    : 11      o   51093560
    : 12    jak   43277567
    : 13    ale   33611565
    : 14     po   33257173
    : 15     co   33158326
    : 16     od   29281019
    : 17     za   28148919
    : 18    dla   26620555
    : 19    tak   25566520
    : 20    tym   25532630
    : 21    czy   24521500
    : 22  przez   22881640
    : 23     ze   22704894
    : 24     są   20733532
    : 25  tylko   20127742
    : 26     ma   19966418
    : 27   tego   19814293
    : 28   oraz   19039795
    : 29    już   17502103
    : 30     bo   17069231
    : 31   może   16504134
    : ===========================================================================
    : drop: 208 words (rows).
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :                  WORD     FREQ
    : 117               np.  4656744
    : 304               siä  2049886
    : 315             m.in.  1972218
    : 322               ok.  1945727
    : 407               ul.  1573205
    : 449              tzw.  1450465
    : 453              itp.  1445597
    : 523              tys.  1289825
    : 524               św.  1280753
    : 578             godz.  1165496
    : 610              art.  1116173
    : 613               zł.  1108532
    : 644             proc.  1062370
    : 726              itd.   928309
    : 774               ĺźe   875675
    : 864               ks.   792808
    : 899             prof.   765817
    : 1168              im.   601625
    : 1219              tj.   579279
    : 1341             ust.   525245
    : 1557              br.   462726
    : 1592  forum.gazeta.pl   454898
    : 1618              ds.   447460
    : 1639               j.   441833
    : 1647               m.   440505
    : 1701               a.   428988
    : 1723              pt.   424456
    : 1761             tzn.   414062
    : 1887              ps.   389055
    : 1907               m2   386474
    : 2029               p.   366967
    : 2124             min.   351350
    :
    :END:

*** DONE Checkup: ~s0001_*_legal~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_list = [  s0001_nouns_legal,   s0001_verbs_legal,   s0001_words_legal,  ]
df_info = [ "s0001_nouns_legal", "s0001_verbs_legal", "s0001_words_legal", ]
df_head = 8
df_tail = 8

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[12]:
    # output
    : ===========================================================================
    : s0001_nouns_legal
    : ===========================================================================
    : idx count: 987
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ
    : 0        to  52732929
    : 1        co  28284385
    : 2       rok  25419583
    : 3      czas  16630295
    : 4  człowiek  12163557
    : 5     praca  11797326
    : 6     dzień  11443515
    : 7       raz  11407991
    : ---------------------------------------------------------------------------
    :         WORD    FREQ
    : 991    wizja  455469
    : 992   tabela  455112
    : 993  wyjątek  455108
    : 994   zarzut  454982
    : 996  wysiłek  452766
    : 997    umysł  452428
    : 998  magazyn  451186
    : 999     Park  451031
    : ===========================================================================
    : s0001_verbs_legal
    : ===========================================================================
    : idx count: 989
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD       FREQ
    : 0       być  163773312
    : 1      mieć   55366421
    : 2       móc   26610696
    : 3    zostać   11638052
    : 4    chcieć    9997827
    : 5  wiedzieć    9565005
    : 6    musieć    8864472
    : 7     mówić    7085155
    : ---------------------------------------------------------------------------
    :            WORD    FREQ
    : 992   pokonywać  185354
    : 993   awansować  184924
    : 994  wychowywać  184514
    : 995  reklamować  184285
    : 996    dozwolić  184042
    : 997       łapać  184021
    : 998    zachęcić  184009
    : 999   poświęcać  183935
    : ===========================================================================
    : s0001_words_legal
    : ===========================================================================
    : idx count: 19792
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :   WORD       FREQ
    : 0    w  240721554
    : 1    i  187175643
    : 2   na  151038296
    : 3    z  133291550
    : 4  nie  125457390
    : 5  się  120989072
    : 6   to  102605682
    : 7   do   93846762
    : ---------------------------------------------------------------------------
    :                WORD   FREQ
    : 19991  konsekwencja  36368
    : 19993     otwartość  36367
    : 19994  obywatelskie  36366
    : 19995  podobieństwa  36363
    : 19996        łódzki  36361
    : 19997        france  36360
    : 19998         wodzą  36358
    : 19999     greckiego  36356
    :
    :END:

*** DONE Drop duplicates ~s0001_nouns_legal_unique~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal_unique, s0001_nouns_legal_dupes = df_dupes(
    df_data=s0001_nouns_legal,
    subset=["WORD"],
    keep='first',
    n_samp=12,
    verbose=2,
)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[13]:
    # output
    : ===========================================================================
    : Got: 987 words (rows).
    : ===========================================================================
    : KEEP: 987 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :         WORD      FREQ
    : 0         to  52732929
    : 1         co  28284385
    : 2        rok  25419583
    : 3       czas  16630295
    : 4   człowiek  12163557
    : 5      praca  11797326
    : 6      dzień  11443515
    : 7        raz  11407991
    : 8     strona  11008323
    : 9    miejsce  10632564
    : 10     osoba  10547308
    : 11  wszystko  10236449
    : ===========================================================================
    : DROP: 0 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ]
    : Index: []
    :
    :END:

*** DONE Drop duplicates ~s0001_verbs_legal_unique~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_verbs_legal_unique, s0001_verbs_legal_dupes = df_dupes(
    df_data=s0001_verbs_legal,
    subset=["WORD"],
    keep='first',
    n_samp=12,
    verbose=2,
)
   
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[14]:
    # output
    : ===========================================================================
    : Got: 989 words (rows).
    : ===========================================================================
    : KEEP: 989 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :         WORD       FREQ
    : 0        być  163773312
    : 1       mieć   55366421
    : 2        móc   26610696
    : 3     zostać   11638052
    : 4     chcieć    9997827
    : 5   wiedzieć    9565005
    : 6     musieć    8864472
    : 7      mówić    7085155
    : 8     będzie    5966505
    : 9      robić    5517232
    : 10    zrobić    5510726
    : 11   należeć    5434608
    : ===========================================================================
    : DROP: 0 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ]
    : Index: []
    :
    :END:

*** DONE Drop duplicates ~s0001_words_legal_unique~ (=subset=None=)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_words_legal_unique, s0001_words_legal_dupes = df_dupes(
    df_data=s0001_words_legal,
    subset=None, # consider all columns
    keep='first',
    n_samp=12,
    verbose=2,
)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[15]:
    # output
    : ===========================================================================
    : Got: 19792 words (rows).
    : ===========================================================================
    : KEEP: 19792 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :     WORD       FREQ
    : 0      w  240721554
    : 1      i  187175643
    : 2     na  151038296
    : 3      z  133291550
    : 4    nie  125457390
    : 5    się  120989072
    : 6     to  102605682
    : 7     do   93846762
    : 8   jest   72687005
    : 9     że   58400782
    : 10     a   57234273
    : 11     o   51093560
    : ===========================================================================
    : DROP: 0 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ]
    : Index: []
    :
    :END:

** Proc 02: SGJP (=nouns= and =verbs=)
*** DONE Notes

    Consider
    - [ ] when searching include option for ":v1" OR ":s1"
      (not only ":v" or ":s").

*** DONE Example

    #+BEGIN_SRC ipython :session *iPython* :eval yes  :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

word = "piec" # Homonim (tutaj jedno słowo jest rzeczownikiem i czasownikiem)
piec = sgjp[ sgjp["WORD"] == word ]

df_list = [  piec,  ]
df_info = [ "piec", ]
df_head = 8
df_tail = 0

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[16]:
    # output
    : ===========================================================================
    : piec
    : ===========================================================================
    : idx count: 2  [4089510, 4089766]
    : row count: 5  ['WORD', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER']
    : ---------------------------------------------------------------------------
    :          WORD    ROOT                DESCR            CLASS QUALIFIER
    : 4089510  piec  piec:s  subst:sg:nom.acc:m3  nazwa pospolita
    : 4089766  piec  piec:v           inf:imperf
    :
    :END:

*** DONE Checkup: ~sgjp~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_list = [  sgjp,  ]
df_info = [ "sgjp", ]
df_head = 8
df_tail = 8

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[17]:
    # output
    : ===========================================================================
    : sgjp
    : ===========================================================================
    : idx count: 7534908
    : row count: 5  ['WORD', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER']
    : ---------------------------------------------------------------------------
    :        WORD    ROOT                                            DESCR               CLASS QUALIFIER
    : 0        aa      aa                                           interj
    : 1    Aachen  Aachen      subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:m3  nazwa geograficzna
    : 2    Aachen  Aachen  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:n:ncol  nazwa geograficzna
    : 3       AAP     AAP       subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f    nazwa instytucji
    : 4    Aarona   Aaron                              subst:sg:gen.acc:m1                imię
    : 5     Aaron   Aaron                                  subst:sg:nom:m1                imię
    : 6  Aaronach   Aaron                                  subst:pl:loc:m1                imię
    : 7  Aaronami   Aaron                                 subst:pl:inst:m1                imię
    : ---------------------------------------------------------------------------
    :              WORD      ROOT                                            DESCR              CLASS QUALIFIER
    : 7534900  Żyżykowi  Żyżyk:s1                                  subst:sg:dat:m1           nazwisko
    : 7534901   Żyżyków  Żyżyk:s1                              subst:pl:gen.acc:m1           nazwisko
    : 7534902    Żyżyku  Żyżyk:s1                                  subst:sg:loc:m1           nazwisko
    : 7534903    Żyżyku  Żyżyk:s1                                  subst:sg:voc:m1           nazwisko
    : 7534904     Żyżyk  Żyżyk:s1                                  subst:sg:nom:m1           nazwisko
    : 7534905     Żyżyk  Żyżyk:s2       subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f           nazwisko
    : 7534906       ŻZW       ŻZW      subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:m3  nazwa organizacji
    : 7534907       ŻZW       ŻZW  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:n:ncol  nazwa organizacji
    :
    :END:

*** FIX! Merge =nouns= and =verbs= with ~sgjp~

    - [ ] Checkup on NaN values not being conveyed further

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal_unique_sgjp = s0001_nouns_legal_unique.merge(sgjp, on=["WORD"], how="inner", indicator=True, )
s0001_verbs_legal_unique_sgjp = s0001_verbs_legal_unique.merge(sgjp, on=["WORD"], how="inner", indicator=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[18]:
    :END:

*** CHCK Checkup: Unmatched =nouns= or =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

assert s0001_nouns_legal_unique_sgjp[s0001_nouns_legal_unique_sgjp["_merge"] != "both" ].empty
assert s0001_verbs_legal_unique_sgjp[s0001_verbs_legal_unique_sgjp["_merge"] != "both" ].empty

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[19]:
    :END:

*** DONE Checkup: ~sgjp~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_list = [  s0001_nouns_legal_unique_sgjp,   s0001_verbs_legal_unique_sgjp,  ]
df_info = [ "s0001_nouns_legal_unique_sgjp", "s0001_verbs_legal_unique_sgjp", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[20]:
    # output
    : ===========================================================================
    : s0001_nouns_legal_unique_sgjp
    : ===========================================================================
    : idx count: 1551
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :    WORD      FREQ   ROOT                 DESCR CLASS QUALIFIER _merge
    : 0    to  52732929    ten      adj:sg:acc:n:pos                   both
    : 1    to  52732929    ten  adj:sg:nom.voc:n:pos                   both
    : 2    to  52732929   to:c                  comp                   both
    : 3    to  52732929   to:q                  part                   both
    : 4    to  52732929   to:s   subst:sg:acc:n:ncol                   both
    : 5    to  52732929   to:s   subst:sg:nom:n:ncol                   both
    : 6    co  28284385   co:c                  comp                   both
    : 7    co  28284385  co:p1              prep:acc                   both
    : 8    co  28284385  co:p1              prep:nom                   both
    : 9    co  28284385  co:p2              prep:gen         przest.   both
    : 10   co  28284385   co:q                  part                   both
    : 11   co  28284385   co:s   subst:sg:acc:n:ncol            z_D.   both
    : ---------------------------------------------------------------------------
    :           WORD    FREQ      ROOT                        DESCR            CLASS QUALIFIER _merge
    : 1539     chory  457035   chory:s              subst:sg:voc:m1  nazwa pospolita             both
    : 1540    profil  456515    profil          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1541    aukcja  456430    aukcja               subst:sg:nom:f  nazwa pospolita   przest.   both
    : 1542  widzenie  455969  widzenie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
    : 1543  widzenie  455969   widzieć  ger:sg:nom.acc:n:imperf:aff                              both
    : 1544     wizja  455469     wizja               subst:sg:nom:f  nazwa pospolita             both
    : 1545    tabela  455112    tabela               subst:sg:nom:f  nazwa pospolita             both
    : 1546   wyjątek  455108   wyjątek          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1547    zarzut  454982    zarzut          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1548   wysiłek  452766   wysiłek          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1549     umysł  452428     umysł          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1550   magazyn  451186   magazyn          subst:sg:nom.acc:m3  nazwa pospolita             both
    : ===========================================================================
    : s0001_verbs_legal_unique_sgjp
    : ===========================================================================
    : idx count: 1171
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :         WORD       FREQ      ROOT                    DESCR            CLASS QUALIFIER _merge
    : 0        być  163773312     bycie      subst:pl:gen:n:ncol  nazwa pospolita             both
    : 1        być  163773312       być  ger:pl:gen:n:imperf:aff                              both
    : 2        być  163773312       być               inf:imperf                              both
    : 3       mieć   55366421    miecić       impt:sg:sec:imperf                       daw.   both
    : 4       mieć   55366421      mieć               inf:imperf                              both
    : 5       mieć   55366421     mieść       impt:sg:sec:imperf                              both
    : 6        móc   26610696       móc               inf:imperf                              both
    : 7     zostać   11638052    zostać                 inf:perf                              both
    : 8     chcieć    9997827    chcieć               inf:imperf                              both
    : 9   wiedzieć    9565005  wiedzieć               inf:imperf                              both
    : 10    musieć    8864472    musieć               inf:imperf                              both
    : 11     mówić    7085155     mówić               inf:imperf                              both
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT            DESCR CLASS QUALIFIER _merge
    : 1159  zróżnicować  186027  zróżnicować         inf:perf                   both
    : 1160  wystartować  185848  wystartować         inf:perf                   both
    : 1161   oczyszczać  185779   oczyszczać       inf:imperf                   both
    : 1162      obniżać  185359      obniżać       inf:imperf                   both
    : 1163    pokonywać  185354    pokonywać       inf:imperf                   both
    : 1164    awansować  184924    awansować  inf:imperf.perf                   both
    : 1165   wychowywać  184514   wychowywać       inf:imperf                   both
    : 1166   reklamować  184285   reklamować       inf:imperf                   both
    : 1167     dozwolić  184042     dozwolić         inf:perf                   both
    : 1168        łapać  184021        łapać       inf:imperf                   both
    : 1169     zachęcić  184009     zachęcić         inf:perf                   both
    : 1170    poświęcać  183935    poświęcać       inf:imperf                   both
    :
    :END:

** Proc 03: Filtering
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    In the following steps words (rows) will be moved from the newly created
    - ~s0001_*_legal_unique_sgjp_clean~ (a copy of ~s0001_*_legal_unique_sgjp~) to the
    - ~s0001_*_legal_unique_sgjp_dirty~ (an empty/blank DataFrame)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal_unique_sgjp_clean = s0001_nouns_legal_unique_sgjp.copy()
s0001_verbs_legal_unique_sgjp_clean = s0001_verbs_legal_unique_sgjp.copy()

s0001_nouns_legal_unique_sgjp_dirty = pd.DataFrame( columns=s0001_nouns_legal_unique_sgjp.columns.values, )
s0001_verbs_legal_unique_sgjp_dirty = pd.DataFrame( columns=s0001_verbs_legal_unique_sgjp.columns.values, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[21]:
    :END:

*** DONE Sort by =ROOT=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal_unique_sgjp_clean.sort_values( by=["ROOT"], ascending=True, axis=0, inplace=True, )
s0001_verbs_legal_unique_sgjp_clean.sort_values( by=["ROOT"], ascending=True, axis=0, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[22]:
    :END:

*** DONE Filter =nouns=
**** DONE Notes

     Consider
     - [X] accept only: =subst:sg= in =DESCR=
       - subst = noun
       - sg = singular
     - [X] accept only =nazwa pospolita= in
     - [X] do NOT accept =muz.= in =QUALIFIER=
     - [X] do NOT accept =jęz.= in =QUALIFIER=

**** DONE Part 01: Keep exclusively =subst:sg= in the =DESCR=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_data = s0001_nouns_legal_unique_sgjp_clean
col_ref = "ROOT"
col_chk = "DESCR"
reg_exp = "^subst:sg"
select_matching = False
keep_selected   = False
n_head  = 24
n_tail  = 24
verbose = 5

s0001_nouns_legal_unique_sgjp_clean, tmp_drop = words_filt( df_data, col_ref, col_chk, reg_exp, select_matching, keep_selected, n_head, n_tail, verbose, )
s0001_nouns_legal_unique_sgjp_dirty = pd.concat( [ s0001_nouns_legal_unique_sgjp_dirty, tmp_drop, ], axis=0, ignore_index=False, )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[23]:
     # output
     : ===========================================================================
     : Got input of: 1551 words (rows).
     : ---------------------------------------------------------------------------
     : KEEP:
     : - Words (rows) that contain:
     :   - *only (exclusively)* values in the =DESCR= field that *match* regex =^subst:sg=
     : ---------------------------------------------------------------------------
     : DROP:
     : - Words (rows) that contain:
     :   - *at least one* value in the =DESCR= field that *does not match* regex =^subst:sg=
     : ---------------------------------------------------------------------------
     : Initially selecting 1228 rows (words) that match criterion:
     : - value in "DESCR" field *does not match* regex "^subst:sg"
     :   - (this selection will be expanded and can be inverted)
     : ---------------------------------------------------------------------------
     : DROP: words that match regex: "^Adamy(?:[:].*)*$|^Adamy(?:[:].*)*$|^Ewangelia_świętego_Jana(?:[:].*)*$|^Jana(?:[:].*)*$|^Jany(?:[:].*)*$|^Jany(?:[:].*)*$|^Józefa(?:[:].*)*$|^Katowice(?:[:].*)*$|^Katowice(?:[:].*)*$|^Krak(?:[:].*)*$|^Krak(?:[:].*)*$|^Kraka(?:[:].*)*$|^Krzysztofa(?:[:].*)*$|^Lublino(?:[:].*)*$|^Marki(?:[:].*)*$|^Marki(?:[:].*)*$|^Niemce(?:[:].*)*$|^Niemce(?:[:].*)*$|^Niemcy(?:[:].*)*$|^Niemcy(?:[:].*)*$|^Niemcy(?:[:].*)*$|^Niemcy(?:[:].*)*$|^Niemiec(?:[:].*)*$|^Pawła(?:[:].*)*$|^Stanisława(?:[:].*)*$|^Stanisława(?:[:].*)*$|^Szczecina(?:[:].*)*$|^USA(?:[:].*)*$|^USA(?:[:].*)*$|^Wojciecha(?:[:].*)*$|^Wojciechy(?:[:].*)*$|^Wojciechy(?:[:].*)*$|^akta(?:[:].*)*$|^badać(?:[:].*)*$|^boleć(?:[:].*)*$|^brak(?:[:].*)*$|^bronić(?:[:].*)*$|^buta(?:[:].*)*$|^cela(?:[:].*)*$|^cent(?:[:].*)*$|^chory(?:[:].*)*$|^chory(?:[:].*)*$|^chęcić(?:[:].*)*$|^ciepło(?:[:].*)*$|^ciepły(?:[:].*)*$|^co(?:[:].*)*$|^co(?:[:].*)*$|^co(?:[:].*)*$|^co(?:[:].*)*$|^co(?:[:].*)*$|^coś(?:[:].*)*$|^cytata(?:[:].*)*$|^czas(?:[:].*)*$|^cześć(?:[:].*)*$|^czwartka(?:[:].*)*$|^córka(?:[:].*)*$|^dacha(?:[:].*)*$|^dana(?:[:].*)*$|^dany(?:[:].*)*$|^dativus(?:[:].*)*$|^dać(?:[:].*)*$|^dobry(?:[:].*)*$|^domowy(?:[:].*)*$|^dopełniacz(?:[:].*)*$|^doświadczyć(?:[:].*)*$|^drewny(?:[:].*)*$|^drogi(?:[:].*)*$|^drzwi(?:[:].*)*$|^drzwi(?:[:].*)*$|^dziać(?:[:].*)*$|^dziać(?:[:].*)*$|^działanie(?:[:].*)*$|^działać(?:[:].*)*$|^działać(?:[:].*)*$|^działać(?:[:].*)*$|^działko(?:[:].*)*$|^działo(?:[:].*)*$|^dzienia(?:[:].*)*$|^dzienie(?:[:].*)*$|^dzienić(?:[:].*)*$|^dzięk(?:[:].*)*$|^dzięka(?:[:].*)*$|^dzięki(?:[:].*)*$|^dzięki(?:[:].*)*$|^dziś(?:[:].*)*$|^finanse(?:[:].*)*$|^gaza(?:[:].*)*$|^gospodarzyć(?:[:].*)*$|^gościa(?:[:].*)*$|^gościć(?:[:].*)*$|^grać(?:[:].*)*$|^halać(?:[:].*)*$|^inny(?:[:].*)*$|^inny(?:[:].*)*$|^jeść(?:[:].*)*$|^karo(?:[:].*)*$|^kary(?:[:].*)*$|^kasać(?:[:].*)*$|^kluba(?:[:].*)*$|^koda(?:[:].*)*$|^kota(?:[:].*)*$|^koło(?:[:].*)*$|^koło(?:[:].*)*$|^krajać(?:[:].*)*$|^krewa(?:[:].*)*$|^krewić(?:[:].*)*$|^kuchnia(?:[:].*)*$|^lasa(?:[:].*)*$|^leczyć(?:[:].*)*$|^ligać(?:[:].*)*$|^lista(?:[:].*)*$|^lut(?:[:].*)*$|^luty(?:[:].*)*$|^luty(?:[:].*)*$|^maić(?:[:].*)*$|^marzyć(?:[:].*)*$|^meczeć(?:[:].*)*$|^metro(?:[:].*)*$|^miasto(?:[:].*)*$|^miasto(?:[:].*)*$|^mieszkać(?:[:].*)*$|^mieć(?:[:].*)*$|^mieć(?:[:].*)*$|^milion(?:[:].*)*$|^milion(?:[:].*)*$|^mistrzostwa(?:[:].*)*$|^mistrzostwo(?:[:].*)*$|^moc(?:[:].*)*$|^myśleć(?:[:].*)*$|^myślić(?:[:].*)*$|^nica(?:[:].*)*$|^objawić(?:[:].*)*$|^obraza(?:[:].*)*$|^oczekiwanie(?:[:].*)*$|^oczekiwać(?:[:].*)*$|^ogolić(?:[:].*)*$|^ogłosić(?:[:].*)*$|^olać(?:[:].*)*$|^oleić(?:[:].*)*$|^opiekać(?:[:].*)*$|^oprogramować(?:[:].*)*$|^otoczyć(?:[:].*)*$|^parać(?:[:].*)*$|^państwo(?:[:].*)*$|^piątka(?:[:].*)*$|^plika(?:[:].*)*$|^plus(?:[:].*)*$|^poczuć(?:[:].*)*$|^podejść(?:[:].*)*$|^podziać(?:[:].*)*$|^podziać(?:[:].*)*$|^pojazda(?:[:].*)*$|^pojąć(?:[:].*)*$|^polityka(?:[:].*)*$|^pomieścić(?:[:].*)*$|^pora(?:[:].*)*$|^porać(?:[:].*)*$|^porozumieć(?:[:].*)*$|^porto(?:[:].*)*$|^porównać(?:[:].*)*$|^posta(?:[:].*)*$|^postać(?:[:].*)*$|^postać(?:[:].*)*$|^postępować(?:[:].*)*$|^potrzeba(?:[:].*)*$|^powierzchni(?:[:].*)*$|^powodzić(?:[:].*)*$|^południ(?:[:].*)*$|^południ(?:[:].*)*$|^południ(?:[:].*)*$|^południ(?:[:].*)*$|^połączyć(?:[:].*)*$|^prawda(?:[:].*)*$|^prawda(?:[:].*)*$|^prawo(?:[:].*)*$|^prawo(?:[:].*)*$|^prawy(?:[:].*)*$|^prawy(?:[:].*)*$|^premiera(?:[:].*)*$|^prezenta(?:[:].*)*$|^procent(?:[:].*)*$|^procent(?:[:].*)*$|^przedsięwziąć(?:[:].*)*$|^przekonać(?:[:].*)*$|^przestrzenić(?:[:].*)*$|^przewodniczyć(?:[:].*)*$|^przewodniczyć(?:[:].*)*$|^przewodniczyć(?:[:].*)*$|^przewodniczący(?:[:].*)*$|^przewodniczący(?:[:].*)*$|^przewodniczący(?:[:].*)*$|^przewodniczący(?:[:].*)*$|^przygotować(?:[:].*)*$|^pytać(?:[:].*)*$|^rad(?:[:].*)*$|^rad(?:[:].*)*$|^rad(?:[:].*)*$|^radny(?:[:].*)*$|^radny(?:[:].*)*$|^rama(?:[:].*)*$|^ramy(?:[:].*)*$|^remonta(?:[:].*)*$|^rodzic(?:[:].*)*$|^rodzic(?:[:].*)*$|^rodzica(?:[:].*)*$|^rodzica(?:[:].*)*$|^rodzice(?:[:].*)*$|^rozwiązać(?:[:].*)*$|^rucho(?:[:].*)*$|^rynka(?:[:].*)*$|^rzec(?:[:].*)*$|^rzec(?:[:].*)*$|^rzekać(?:[:].*)*$|^senior(?:[:].*)*$|^siła(?:[:].*)*$|^siła(?:[:].*)*$|^skalać(?:[:].*)*$|^sklepać(?:[:].*)*$|^sklepić(?:[:].*)*$|^spokoić(?:[:].*)*$|^sposobić(?:[:].*)*$|^sposób(?:[:].*)*$|^spotkać(?:[:].*)*$|^stopić(?:[:].*)*$|^stowarzyszyć(?:[:].*)*$|^studia(?:[:].*)*$|^studio(?:[:].*)*$|^studium(?:[:].*)*$|^stylo(?:[:].*)*$|^systema(?:[:].*)*$|^szereg(?:[:].*)*$|^szkoda(?:[:].*)*$|^szkoda(?:[:].*)*$|^szkolić(?:[:].*)*$|^szlaka(?:[:].*)*$|^technikum(?:[:].*)*$|^ten(?:[:].*)*$|^ten(?:[:].*)*$|^to(?:[:].*)*$|^to(?:[:].*)*$|^tom(?:[:].*)*$|^tona(?:[:].*)*$|^tryba(?:[:].*)*$|^trybić(?:[:].*)*$|^tysiąc(?:[:].*)*$|^tysiąc(?:[:].*)*$|^tyć(?:[:].*)*$|^tyć(?:[:].*)*$|^ubezpieczyć(?:[:].*)*$|^uczenie(?:[:].*)*$|^uczuć(?:[:].*)*$|^uczyć(?:[:].*)*$|^udziać(?:[:].*)*$|^udziać(?:[:].*)*$|^umowy(?:[:].*)*$|^urządzić(?:[:].*)*$|^usta(?:[:].*)*$|^wakacje(?:[:].*)*$|^warunek(?:[:].*)*$|^warunki(?:[:].*)*$|^wesprzeć(?:[:].*)*$|^widzieć(?:[:].*)*$|^wieko(?:[:].*)*$|^wiersza(?:[:].*)*$|^wino(?:[:].*)*$|^wole(?:[:].*)*$|^woli(?:[:].*)*$|^wrazić(?:[:].*)*$|^wszyscy(?:[:].*)*$|^wszyscy(?:[:].*)*$|^wszystek(?:[:].*)*$|^wszystek(?:[:].*)*$|^wszystek(?:[:].*)*$|^wszystko(?:[:].*)*$|^wybory(?:[:].*)*$|^wybór(?:[:].*)*$|^wydarzyć(?:[:].*)*$|^wyjść(?:[:].*)*$|^wynagrodzić(?:[:].*)*$|^zachować(?:[:].*)*$|^zadać(?:[:].*)*$|^zagrozić(?:[:].*)*$|^zainteresować(?:[:].*)*$|^zająć(?:[:].*)*$|^zająć(?:[:].*)*$|^zająć(?:[:].*)*$|^zajęcia(?:[:].*)*$|^zajęcia(?:[:].*)*$|^zajęcie(?:[:].*)*$|^zakupić(?:[:].*)*$|^zamówić(?:[:].*)*$|^zasobić(?:[:].*)*$|^zastosować(?:[:].*)*$|^zawody(?:[:].*)*$|^zawód(?:[:].*)*$|^założyć(?:[:].*)*$|^zdarzyć(?:[:].*)*$|^zdarzyć(?:[:].*)*$|^zdać(?:[:].*)*$|^zdjąć(?:[:].*)*$|^zdjąć(?:[:].*)*$|^zdjąć(?:[:].*)*$|^zdjęcia(?:[:].*)*$|^zdjęcie(?:[:].*)*$|^zestawić(?:[:].*)*$|^zimać(?:[:].*)*$|^znaczyć(?:[:].*)*$|^znajomy(?:[:].*)*$|^znajomy(?:[:].*)*$|^zwierzyć(?:[:].*)*$|^związka(?:[:].*)*$|^złoty(?:[:].*)*$|^złoty(?:[:].*)*$|^ćwiczenia(?:[:].*)*$|^ćwiczenie(?:[:].*)*$|^ćwiczyć(?:[:].*)*$|^ćwiczyć(?:[:].*)*$|^ślubić(?:[:].*)*$|^światło(?:[:].*)*$|^światły(?:[:].*)*$|^święto(?:[:].*)*$|^święty(?:[:].*)*$|^żyć(?:[:].*)*$"
     : ---------------------------------------------------------------------------
     : Final mask selects 414 words (rows).
     : Final mask ignores 1137 words (rows).
     : ===========================================================================
     : KEEP: 1137 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 1137
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :           WORD     FREQ         ROOT                                       DESCR               CLASS QUALIFIER _merge
     : 895       Adam   763161      Adam:s1                             subst:sg:nom:m1                imię             both
     : 896       Adam   763161      Adam:s2                             subst:sg:nom:m1            nazwisko             both
     : 897       Adam   763161      Adam:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 619    Andrzej  1087247      Andrzej                             subst:sg:nom:m1                imię             both
     : 1111      Anna   640482      Anna:s1                              subst:sg:nom:f                imię             both
     : 1112      Anna   640482      Anna:s2                              subst:sg:nom:f  nazwa geograficzna             both
     : 1388      Bank   516635      Bank:s1                             subst:sg:nom:m1            nazwisko             both
     : 1389      Bank   516635      Bank:s2  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 903   Chrystus   757111     Chrystus                             subst:sg:nom:m1           przydomek             both
     : 950      Dzień   722730     Dzień:s1                             subst:sg:nom:m1            nazwisko             both
     : 951      Dzień   722730     Dzień:s2  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 322     Europa  1827765       Europa                              subst:sg:nom:f  nazwa geograficzna             both
     : 1200   Francja   597307      Francja                              subst:sg:nom:f  nazwa geograficzna             both
     : 1048    Gdańsk   667275       Gdańsk                         subst:sg:nom.acc:m3  nazwa geograficzna             both
     : 1497  Grzegorz   476779  Grzegorz:s1                             subst:sg:nom:m1                imię             both
     : 1498  Grzegorz   476779  Grzegorz:s2                             subst:sg:nom:m1            nazwisko             both
     : 1499  Grzegorz   476779  Grzegorz:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 1500  Grzegorz   476779  Grzegorz:s4                         subst:sg:nom.acc:m3  nazwa geograficzna             both
     : 561       Góra  1171489      Góra:s1                             subst:sg:nom:m1            nazwisko             both
     : 562       Góra  1171489      Góra:s3                              subst:sg:nom:f            nazwisko             both
     : 563       Góra  1171489      Góra:s4                              subst:sg:nom:f  nazwa geograficzna             both
     : 324   Internet  1822239     Internet                         subst:sg:nom.acc:m3     nazwa pospolita             both
     : 402        Jan  1571621       Jan:s1                             subst:sg:nom:m1                imię             both
     : 403        Jan  1571621       Jan:s2                             subst:sg:nom:m1            nazwisko             both
     : ---------------------------------------------------------------------------
     :             WORD     FREQ        ROOT                                       DESCR                      CLASS QUALIFIER _merge
     : 1311    łazienka   549269    łazienka                              subst:sg:nom:f            nazwa pospolita             both
     : 1510       łóżko   467525       łóżko                 subst:sg:nom.acc.voc:n:ncol            nazwa pospolita             both
     : 1443       Świat   492981    Świat:s1                         subst:sg:nom.acc:m3        człon nazwy własnej             both
     : 1444       Świat   492981    Świat:s2                             subst:sg:nom:m1                   nazwisko             both
     : 1445       Świat   492981    Świat:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f                   nazwisko             both
     : 1446       Świat   492981    Świat:s4                         subst:sg:nom.acc:m3  człon nazwy geograficznej             both
     : 604       ściana  1108058      ściana                              subst:sg:nom:f            nazwa pospolita             both
     : 1410     ścieżka   503101     ścieżek                             subst:sg:gen:m3            nazwa pospolita             both
     : 1411     ścieżka   503101     ścieżka                              subst:sg:nom:f            nazwa pospolita             both
     : 1484        ślad   480655        ślad                         subst:sg:nom.acc:m3            nazwa pospolita             both
     : 1412        ślub   502115        ślub                         subst:sg:nom.acc:m3            nazwa pospolita             both
     : 409       śmierć  1558268      śmierć                              subst:sg:acc:f            nazwa pospolita             both
     : 410       śmierć  1558268      śmierć                              subst:sg:nom:f            nazwa pospolita             both
     : 127       środek  3173454      środek                         subst:sg:nom.acc:m3            nazwa pospolita             both
     : 372   środowisko  1655405  środowisko                 subst:sg:nom.acc.voc:n:ncol            nazwa pospolita             both
     : 992   świadomość   702290  świadomość                              subst:sg:acc:f            nazwa pospolita             both
     : 993   świadomość   702290  świadomość                              subst:sg:nom:f            nazwa pospolita             both
     : 85         świat  4895309       świat                         subst:sg:nom.acc:m3            nazwa pospolita             both
     : 138       źródło  3149575      źródło                 subst:sg:nom.acc.voc:n:ncol            nazwa pospolita             both
     : 797         żona   869748        żona                              subst:sg:nom:f            nazwa pospolita             both
     : 1044    żołnierz   667685    żołnierz                             subst:sg:nom:m1            nazwa pospolita             both
     : 1045    żołnierz   667685    żołnierz                             subst:sg:nom:m1            nazwa pospolita     rzad.   both
     : 43         życie  7372748       życie                 subst:sg:nom.acc.voc:n:ncol            nazwa pospolita             both
     : 45         życie  7372748        żyto                         subst:sg:loc:n:ncol            nazwa pospolita             both
     : ===========================================================================
     : DROP: 414 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 414
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :            WORD     FREQ                     ROOT                      DESCR                      CLASS QUALIFIER _merge
     : 899        Adam   763161                    Adamy          subst:pl:gen:n:pt  człon nazwy geograficznej     rzad.   both
     : 898        Adam   763161                    Adamy          subst:pl:gen:n:pt  człon nazwy geograficznej             both
     : 400         Jan  1571621  Ewangelia_świętego_Jana                  brev:npun                                        both
     : 401         Jan  1571621                  Jana:s4             subst:pl:gen:f                   nazwisko             both
     : 406         Jan  1571621                  Jany:s3          subst:pl:gen:n:pt         nazwa geograficzna     rzad.   both
     : 405         Jan  1571621                  Jany:s3          subst:pl:gen:n:pt         nazwa geograficzna             both
     : 1349      Józef   533896                   Józefa             subst:pl:gen:f                       imię             both
     : 1348   Katowice   534802                 Katowice  subst:pl:nom.acc.voc:n:pt         nazwa geograficzna     rzad.   both
     : 1347   Katowice   534802                 Katowice  subst:pl:nom.acc.voc:n:pt         nazwa geograficzna             both
     : 415      Kraków  1542620                  Krak:s1        subst:pl:gen.acc:m1                       imię             both
     : 416      Kraków  1542620                  Krak:s2        subst:pl:gen.acc:m1                   nazwisko             both
     : 413      Kraków  1542620                 Kraka:s1        subst:pl:gen.acc:m1                   nazwisko             both
     : 890   Krzysztof   764318               Krzysztofa             subst:pl:gen:f                       imię             both
     : 1535     Lublin   457240                  Lublino        subst:pl:gen:n:ncol         nazwa geograficzna             both
     : 1261      Marek   575102                    Marki          subst:pl:gen:n:pt         nazwa geograficzna             both
     : 1262      Marek   575102                    Marki          subst:pl:gen:n:pt         nazwa geograficzna     rzad.   both
     : 1094    Niemiec   642896                   Niemce          subst:pl:gen:n:pt         nazwa geograficzna     rzad.   both
     : 1093    Niemiec   642896                   Niemce          subst:pl:gen:n:pt         nazwa geograficzna             both
     : 1095    Niemiec   642896                   Niemcy          subst:pl:gen:n:pt         nazwa geograficzna             both
     : 701      Niemcy   960201                   Niemcy  subst:pl:nom.acc.voc:n:pt         nazwa geograficzna             both
     : 702      Niemcy   960201                   Niemcy  subst:pl:nom.acc.voc:n:pt         nazwa geograficzna     rzad.   both
     : 1096    Niemiec   642896                   Niemcy          subst:pl:gen:n:pt         nazwa geograficzna     rzad.   both
     : 703      Niemcy   960201               Niemiec:s1        subst:pl:nom.voc:m1            nazwa pospolita             both
     : 1097    Niemiec   642896               Niemiec:s1            subst:sg:nom:m1            nazwa pospolita             both
     : ---------------------------------------------------------------------------
     :            WORD     FREQ       ROOT                        DESCR            CLASS QUALIFIER _merge
     : 418   znaczenie  1531814    znaczyć  ger:sg:nom.acc:n:imperf:aff                              both
     : 801     znajomy   860059  znajomy:a            adj:sg:acc:m3:pos                              both
     : 802     znajomy   860059  znajomy:a  adj:sg:nom.voc:m1.m2.m3:pos                              both
     : 803     znajomy   860059  znajomy:s              subst:sg:nom:m1  nazwa pospolita             both
     : 804     znajomy   860059  znajomy:s              subst:sg:voc:m1  nazwa pospolita             both
     : 626     zwierzę  1079998   zwierzyć              fin:sg:pri:perf                              both
     : 172     związek  2706007    związka               subst:pl:gen:f  nazwa pospolita      daw.   both
     : 717       złoty   945335    złoty:a            adj:sg:acc:m3:pos                              both
     : 718       złoty   945335    złoty:a  adj:sg:nom.voc:m1.m2.m3:pos                              both
     : 719       złoty   945335    złoty:s              subst:sg:nom:m2  nazwa pospolita             both
     : 720       złoty   945335    złoty:s              subst:sg:voc:m2  nazwa pospolita             both
     : 1421  ćwiczenia   498194  ćwiczenia    subst:pl:nom.acc.voc:n:pt  nazwa pospolita             both
     : 1423  ćwiczenia   498194  ćwiczenie          subst:sg:gen:n:ncol  nazwa pospolita             both
     : 1422  ćwiczenia   498194  ćwiczenie  subst:pl:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 1424  ćwiczenia   498194    ćwiczyć  ger:pl:nom.acc:n:imperf:aff                              both
     : 1425  ćwiczenia   498194    ćwiczyć      ger:sg:gen:n:imperf:aff                              both
     : 1413       ślub   502115     ślubić           impt:sg:sec:imperf                       daw.   both
     : 546     światło  1197323  światło:d                      adv:pos                       daw.   both
     : 547     światło  1197323  światło:s  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 548     światło  1197323    światły                         adja                              both
     : 805      święto   859741   święto:d                      adv:pos                       daw.   both
     : 806      święto   859741   święto:s  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 807      święto   859741   święty:a                         adja                              both
     : 44        życie  7372748        żyć  ger:sg:nom.acc:n:imperf:aff                              both
     :
     :END:

**** DONE Part 02: Keep exclusively =nazwa pospolita= in the =CLASS=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_data = s0001_nouns_legal_unique_sgjp_clean
col_ref = "ROOT"
col_chk = "CLASS"
reg_exp = "^nazwa.pospolita$"
select_matching = False
keep_selected   = False
n_head  = 24
n_tail  = 24
verbose = 5

s0001_nouns_legal_unique_sgjp_clean, tmp_drop = words_filt( df_data, col_ref, col_chk, reg_exp, select_matching, keep_selected, n_head, n_tail, verbose, )
s0001_nouns_legal_unique_sgjp_dirty = pd.concat( [ s0001_nouns_legal_unique_sgjp_dirty, tmp_drop, ], axis=0, ignore_index=False, )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[24]:
     # output
     : ===========================================================================
     : Got input of: 1137 words (rows).
     : ---------------------------------------------------------------------------
     : KEEP:
     : - Words (rows) that contain:
     :   - *only (exclusively)* values in the =CLASS= field that *match* regex =^nazwa.pospolita$=
     : ---------------------------------------------------------------------------
     : DROP:
     : - Words (rows) that contain:
     :   - *at least one* value in the =CLASS= field that *does not match* regex =^nazwa.pospolita$=
     : ---------------------------------------------------------------------------
     : Initially selecting 1033 rows (words) that match criterion:
     : - value in "CLASS" field *does not match* regex "^nazwa.pospolita$"
     :   - (this selection will be expanded and can be inverted)
     : ---------------------------------------------------------------------------
     : DROP: words that match regex: "^Adam(?:[:].*)*$|^Adam(?:[:].*)*$|^Adam(?:[:].*)*$|^Andrzej(?:[:].*)*$|^Anna(?:[:].*)*$|^Anna(?:[:].*)*$|^Bank(?:[:].*)*$|^Bank(?:[:].*)*$|^Chrystus(?:[:].*)*$|^Dzień(?:[:].*)*$|^Dzień(?:[:].*)*$|^Europa(?:[:].*)*$|^Francja(?:[:].*)*$|^Gdańsk(?:[:].*)*$|^Grzegorz(?:[:].*)*$|^Grzegorz(?:[:].*)*$|^Grzegorz(?:[:].*)*$|^Grzegorz(?:[:].*)*$|^Góra(?:[:].*)*$|^Góra(?:[:].*)*$|^Góra(?:[:].*)*$|^Jan(?:[:].*)*$|^Jan(?:[:].*)*$|^Jan(?:[:].*)*$|^Jerzy(?:[:].*)*$|^Jerzy(?:[:].*)*$|^Jerzy(?:[:].*)*$|^Jerzy(?:[:].*)*$|^Jerzy(?:[:].*)*$|^Jezus(?:[:].*)*$|^Józef(?:[:].*)*$|^Józef(?:[:].*)*$|^Józef(?:[:].*)*$|^Kaczyński(?:[:].*)*$|^Kaczyński(?:[:].*)*$|^Kościół(?:[:].*)*$|^Kraków(?:[:].*)*$|^Krzysztof(?:[:].*)*$|^Krzysztof(?:[:].*)*$|^Krzysztof(?:[:].*)*$|^Lublin(?:[:].*)*$|^Marcin(?:[:].*)*$|^Marcin(?:[:].*)*$|^Marek(?:[:].*)*$|^Marek(?:[:].*)*$|^Maria(?:[:].*)*$|^Michał(?:[:].*)*$|^PO(?:[:].*)*$|^PO(?:[:].*)*$|^Pan(?:[:].*)*$|^Paweł(?:[:].*)*$|^PiS(?:[:].*)*$|^PiS(?:[:].*)*$|^PiS(?:[:].*)*$|^Piotr(?:[:].*)*$|^Piotr(?:[:].*)*$|^Piotr(?:[:].*)*$|^Polak(?:[:].*)*$|^Polak(?:[:].*)*$|^Polska(?:[:].*)*$|^Polska(?:[:].*)*$|^Polska(?:[:].*)*$|^Poznań(?:[:].*)*$|^Poznań(?:[:].*)*$|^Poznań(?:[:].*)*$|^RP(?:[:].*)*$|^Rosja(?:[:].*)*$|^Stanisław(?:[:].*)*$|^Stanisław(?:[:].*)*$|^Szczecin(?:[:].*)*$|^Tomasz(?:[:].*)*$|^Tomasz(?:[:].*)*$|^Tomasz(?:[:].*)*$|^UE(?:[:].*)*$|^UE(?:[:].*)*$|^Unia(?:[:].*)*$|^Warszawa(?:[:].*)*$|^Warszawa(?:[:].*)*$|^Warszawa(?:[:].*)*$|^Windows(?:[:].*)*$|^Windows(?:[:].*)*$|^Wisła(?:[:].*)*$|^Wisła(?:[:].*)*$|^Wisła(?:[:].*)*$|^Wojciech(?:[:].*)*$|^Wojciech(?:[:].*)*$|^Wojciech(?:[:].*)*$|^Wojciech(?:[:].*)*$|^Wrocław(?:[:].*)*$|^cóż(?:[:].*)*$|^cóż(?:[:].*)*$|^cóż(?:[:].*)*$|^kto(?:[:].*)*$|^ktoś(?:[:].*)*$|^nic(?:[:].*)*$|^nic(?:[:].*)*$|^nic(?:[:].*)*$|^nikt(?:[:].*)*$|^Łódź(?:[:].*)*$|^Łódź(?:[:].*)*$|^Świat(?:[:].*)*$|^Świat(?:[:].*)*$|^Świat(?:[:].*)*$|^Świat(?:[:].*)*$"
     : ---------------------------------------------------------------------------
     : Final mask selects 106 words (rows).
     : Final mask ignores 1031 words (rows).
     : ===========================================================================
     : KEEP: 1031 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 1031
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :                WORD     FREQ           ROOT                                       DESCR            CLASS QUALIFIER _merge
     : 324        Internet  1822239       Internet                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1147            WWW   615922            WWW  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f  nazwa pospolita             both
     : 1367  administracja   522797  administracja                              subst:sg:nom:f  nazwa pospolita             both
     : 591           adres  1127345          adres                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 991         agencja   703140        agencja                              subst:sg:nom:f  nazwa pospolita             both
     : 1386       akademia   517686       akademia                              subst:sg:nom:f  nazwa pospolita             both
     : 219           akcja  2327268          akcja                              subst:sg:nom:f  nazwa pospolita             both
     : 1222            akt   586576         akt:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1223            akt   586576         akt:s2                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1374      aktywność   520272      aktywność                              subst:sg:acc:f  nazwa pospolita             both
     : 1375      aktywność   520272      aktywność                              subst:sg:nom:f  nazwa pospolita             both
     : 1299          album   553738          album                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1141        alkohol   619491        alkohol                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1528        allegro   458602        allegro                 subst:sg:nom.acc.voc:n:ncol  nazwa pospolita      muz.   both
     : 663         analiza  1024374        analiza                              subst:sg:nom:f  nazwa pospolita             both
     : 858          aparat   786385      aparat:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 859          aparat   786385      aparat:s2                             subst:sg:nom:m1  nazwa pospolita      pot.   both
     : 714       aplikacja   949097      aplikacja                              subst:sg:nom:f  nazwa pospolita             both
     : 1128       argument   625611       argument                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1475          armia   482219          armia                              subst:sg:nom:f  nazwa pospolita             both
     : 340         artykuł  1739561        artykuł                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 934         artysta   733768        artysta                             subst:sg:nom:m1  nazwa pospolita             both
     : 1418         aspekt   499775         aspekt                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 771            atak   883020           atak                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : ---------------------------------------------------------------------------
     :             WORD     FREQ        ROOT                        DESCR            CLASS QUALIFIER _merge
     : 931   zwycięstwo   737740  zwycięstwo  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 1057        zysk   661925        zysk          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1508         ząb   468070         ząb          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1509         ząb   468070         ząb              subst:sg:nom:m2  nazwa pospolita      pot.   both
     : 1311    łazienka   549269    łazienka               subst:sg:nom:f  nazwa pospolita             both
     : 1510       łóżko   467525       łóżko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 604       ściana  1108058      ściana               subst:sg:nom:f  nazwa pospolita             both
     : 1410     ścieżka   503101     ścieżek              subst:sg:gen:m3  nazwa pospolita             both
     : 1411     ścieżka   503101     ścieżka               subst:sg:nom:f  nazwa pospolita             both
     : 1484        ślad   480655        ślad          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1412        ślub   502115        ślub          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 409       śmierć  1558268      śmierć               subst:sg:acc:f  nazwa pospolita             both
     : 410       śmierć  1558268      śmierć               subst:sg:nom:f  nazwa pospolita             both
     : 127       środek  3173454      środek          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 372   środowisko  1655405  środowisko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 992   świadomość   702290  świadomość               subst:sg:acc:f  nazwa pospolita             both
     : 993   świadomość   702290  świadomość               subst:sg:nom:f  nazwa pospolita             both
     : 85         świat  4895309       świat          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 138       źródło  3149575      źródło  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 797         żona   869748        żona               subst:sg:nom:f  nazwa pospolita             both
     : 1044    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita             both
     : 1045    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 43         życie  7372748       życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 45         życie  7372748        żyto          subst:sg:loc:n:ncol  nazwa pospolita             both
     : ===========================================================================
     : DROP: 106 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 106
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :           WORD     FREQ         ROOT                                       DESCR               CLASS QUALIFIER _merge
     : 895       Adam   763161      Adam:s1                             subst:sg:nom:m1                imię             both
     : 896       Adam   763161      Adam:s2                             subst:sg:nom:m1            nazwisko             both
     : 897       Adam   763161      Adam:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 619    Andrzej  1087247      Andrzej                             subst:sg:nom:m1                imię             both
     : 1111      Anna   640482      Anna:s1                              subst:sg:nom:f                imię             both
     : 1112      Anna   640482      Anna:s2                              subst:sg:nom:f  nazwa geograficzna             both
     : 1388      Bank   516635      Bank:s1                             subst:sg:nom:m1            nazwisko             both
     : 1389      Bank   516635      Bank:s2  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 903   Chrystus   757111     Chrystus                             subst:sg:nom:m1           przydomek             both
     : 950      Dzień   722730     Dzień:s1                             subst:sg:nom:m1            nazwisko             both
     : 951      Dzień   722730     Dzień:s2  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 322     Europa  1827765       Europa                              subst:sg:nom:f  nazwa geograficzna             both
     : 1200   Francja   597307      Francja                              subst:sg:nom:f  nazwa geograficzna             both
     : 1048    Gdańsk   667275       Gdańsk                         subst:sg:nom.acc:m3  nazwa geograficzna             both
     : 1497  Grzegorz   476779  Grzegorz:s1                             subst:sg:nom:m1                imię             both
     : 1498  Grzegorz   476779  Grzegorz:s2                             subst:sg:nom:m1            nazwisko             both
     : 1499  Grzegorz   476779  Grzegorz:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : 1500  Grzegorz   476779  Grzegorz:s4                         subst:sg:nom.acc:m3  nazwa geograficzna             both
     : 561       Góra  1171489      Góra:s1                             subst:sg:nom:m1            nazwisko             both
     : 562       Góra  1171489      Góra:s3                              subst:sg:nom:f            nazwisko             both
     : 563       Góra  1171489      Góra:s4                              subst:sg:nom:f  nazwa geograficzna             both
     : 402        Jan  1571621       Jan:s1                             subst:sg:nom:m1                imię             both
     : 403        Jan  1571621       Jan:s2                             subst:sg:nom:m1            nazwisko             both
     : 404        Jan  1571621       Jan:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f            nazwisko             both
     : ---------------------------------------------------------------------------
     :           WORD     FREQ         ROOT                                       DESCR                      CLASS QUALIFIER _merge
     : 1379     Wisła   519466     Wisła:s1                              subst:sg:nom:f         nazwa geograficzna             both
     : 1380     Wisła   519466     Wisła:s2                             subst:sg:nom:m1                   nazwisko             both
     : 1381     Wisła   519466     Wisła:s3                              subst:sg:nom:f                   nazwisko             both
     : 1477  Wojciech   481313  Wojciech:s1                             subst:sg:nom:m1                       imię             both
     : 1478  Wojciech   481313  Wojciech:s2                             subst:sg:nom:m1                   nazwisko             both
     : 1479  Wojciech   481313  Wojciech:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f                   nazwisko             both
     : 1480  Wojciech   481313  Wojciech:s4                         subst:sg:nom.acc:m3  człon nazwy geograficznej             both
     : 657    Wrocław  1029154      Wrocław                         subst:sg:nom.acc:m3         nazwa geograficzna             both
     : 965        cóż   716676          cóż                         subst:sg:nom:n:ncol                                 z_D.   both
     : 963        cóż   716676          cóż                         subst:sg:acc:n:ncol                                 z_D.   both
     : 964        cóż   716676          cóż                         subst:sg:gen:n:ncol                                rzad.   both
     : 75         kto  5024216          kto                             subst:sg:nom:m1                                        both
     : 81        ktoś  4963703      ktoś:s1                             subst:sg:nom:m1            nazwa pospolita      pot.   both
     : 82        ktoś  4963703      ktoś:s2                             subst:sg:nom:m1                                        both
     : 54         nic  6549819          nic                         subst:sg:nom:n:ncol                                 z_D.   both
     : 53         nic  6549819          nic                         subst:sg:gen:n:ncol                                        both
     : 52         nic  6549819          nic                         subst:sg:acc:n:ncol                                 z_D.   both
     : 158       nikt  2829108         nikt                             subst:sg:nom:m1                                        both
     : 1505      Łódź   474018         Łódź                              subst:sg:nom:f         nazwa geograficzna             both
     : 1504      Łódź   474018         Łódź                              subst:sg:acc:f         nazwa geograficzna             both
     : 1443     Świat   492981     Świat:s1                         subst:sg:nom.acc:m3        człon nazwy własnej             both
     : 1444     Świat   492981     Świat:s2                             subst:sg:nom:m1                   nazwisko             both
     : 1445     Świat   492981     Świat:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f                   nazwisko             both
     : 1446     Świat   492981     Świat:s4                         subst:sg:nom.acc:m3  człon nazwy geograficznej             both
     :
     :END:

**** DONE Part 03: Drop if =QUALIFIER= starts with =muz=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_data = s0001_nouns_legal_unique_sgjp_clean
col_ref = "ROOT"
col_chk = "QUALIFIER"
reg_exp = "^muz"
select_matching = True
keep_selected   = False
n_head  = 24
n_tail  = 24
verbose = 5

s0001_nouns_legal_unique_sgjp_clean, tmp_drop = words_filt( df_data, col_ref, col_chk, reg_exp, select_matching, keep_selected, n_head, n_tail, verbose, )
s0001_nouns_legal_unique_sgjp_dirty = pd.concat( [ s0001_nouns_legal_unique_sgjp_dirty, tmp_drop, ], axis=0, ignore_index=False, )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[25]:
     # output
     : ===========================================================================
     : Got input of: 1031 words (rows).
     : ---------------------------------------------------------------------------
     : KEEP:
     : - Words (rows) that contain:
     :   - *no* values in the =QUALIFIER= field that *match* regex =^muz=
     : ---------------------------------------------------------------------------
     : DROP:
     : - Words (rows) that contain:
     :   - *at least one* value in the =QUALIFIER= field that *match* regex =^muz=
     : ---------------------------------------------------------------------------
     : Initially selecting 1 rows (words) that match criterion:
     : - value in "QUALIFIER" field *matches* regex "^muz"
     :   - (this selection will be expanded and can be inverted)
     : ---------------------------------------------------------------------------
     : DROP: words that match regex: "^allegro(?:[:].*)*$"
     : ---------------------------------------------------------------------------
     : Final mask selects 1 words (rows).
     : Final mask ignores 1030 words (rows).
     : ===========================================================================
     : KEEP: 1030 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 1030
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :                WORD     FREQ           ROOT                                       DESCR            CLASS QUALIFIER _merge
     : 324        Internet  1822239       Internet                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1147            WWW   615922            WWW  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f  nazwa pospolita             both
     : 1367  administracja   522797  administracja                              subst:sg:nom:f  nazwa pospolita             both
     : 591           adres  1127345          adres                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 991         agencja   703140        agencja                              subst:sg:nom:f  nazwa pospolita             both
     : 1386       akademia   517686       akademia                              subst:sg:nom:f  nazwa pospolita             both
     : 219           akcja  2327268          akcja                              subst:sg:nom:f  nazwa pospolita             both
     : 1222            akt   586576         akt:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1223            akt   586576         akt:s2                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1374      aktywność   520272      aktywność                              subst:sg:acc:f  nazwa pospolita             both
     : 1375      aktywność   520272      aktywność                              subst:sg:nom:f  nazwa pospolita             both
     : 1299          album   553738          album                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1141        alkohol   619491        alkohol                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 663         analiza  1024374        analiza                              subst:sg:nom:f  nazwa pospolita             both
     : 858          aparat   786385      aparat:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 859          aparat   786385      aparat:s2                             subst:sg:nom:m1  nazwa pospolita      pot.   both
     : 714       aplikacja   949097      aplikacja                              subst:sg:nom:f  nazwa pospolita             both
     : 1128       argument   625611       argument                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1475          armia   482219          armia                              subst:sg:nom:f  nazwa pospolita             both
     : 340         artykuł  1739561        artykuł                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 934         artysta   733768        artysta                             subst:sg:nom:m1  nazwa pospolita             both
     : 1418         aspekt   499775         aspekt                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 771            atak   883020           atak                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 994       atmosfera   700953      atmosfera                              subst:sg:nom:f  nazwa pospolita             both
     : ---------------------------------------------------------------------------
     :             WORD     FREQ        ROOT                        DESCR            CLASS QUALIFIER _merge
     : 931   zwycięstwo   737740  zwycięstwo  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 1057        zysk   661925        zysk          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1508         ząb   468070         ząb          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1509         ząb   468070         ząb              subst:sg:nom:m2  nazwa pospolita      pot.   both
     : 1311    łazienka   549269    łazienka               subst:sg:nom:f  nazwa pospolita             both
     : 1510       łóżko   467525       łóżko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 604       ściana  1108058      ściana               subst:sg:nom:f  nazwa pospolita             both
     : 1410     ścieżka   503101     ścieżek              subst:sg:gen:m3  nazwa pospolita             both
     : 1411     ścieżka   503101     ścieżka               subst:sg:nom:f  nazwa pospolita             both
     : 1484        ślad   480655        ślad          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1412        ślub   502115        ślub          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 409       śmierć  1558268      śmierć               subst:sg:acc:f  nazwa pospolita             both
     : 410       śmierć  1558268      śmierć               subst:sg:nom:f  nazwa pospolita             both
     : 127       środek  3173454      środek          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 372   środowisko  1655405  środowisko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 992   świadomość   702290  świadomość               subst:sg:acc:f  nazwa pospolita             both
     : 993   świadomość   702290  świadomość               subst:sg:nom:f  nazwa pospolita             both
     : 85         świat  4895309       świat          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 138       źródło  3149575      źródło  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 797         żona   869748        żona               subst:sg:nom:f  nazwa pospolita             both
     : 1044    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita             both
     : 1045    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 43         życie  7372748       życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 45         życie  7372748        żyto          subst:sg:loc:n:ncol  nazwa pospolita             both
     : ===========================================================================
     : DROP: 1 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 1  [1528]
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: True
     : ---------------------------------------------------------------------------
     :          WORD    FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge
     : 1528  allegro  458602  allegro  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita      muz.   both
     : ---------------------------------------------------------------------------
     :          WORD    FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge
     : 1528  allegro  458602  allegro  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita      muz.   both
     :
     :END:

**** DONE Part 04: Drop if =QUALIFIER= starts with =jęz=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_data = s0001_nouns_legal_unique_sgjp_clean
col_ref = "ROOT"
col_chk = "QUALIFIER"
reg_exp = "^jęz"
select_matching = True
keep_selected   = False
n_head  = 24
n_tail  = 24
verbose = 5

s0001_nouns_legal_unique_sgjp_clean, tmp_drop = words_filt( df_data, col_ref, col_chk, reg_exp, select_matching, keep_selected, n_head, n_tail, verbose, )
s0001_nouns_legal_unique_sgjp_dirty = pd.concat( [ s0001_nouns_legal_unique_sgjp_dirty, tmp_drop, ], axis=0, ignore_index=False, )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[26]:
     # output
     : ===========================================================================
     : Got input of: 1030 words (rows).
     : ---------------------------------------------------------------------------
     : KEEP:
     : - Words (rows) that contain:
     :   - *no* values in the =QUALIFIER= field that *match* regex =^jęz=
     : ---------------------------------------------------------------------------
     : DROP:
     : - Words (rows) that contain:
     :   - *at least one* value in the =QUALIFIER= field that *match* regex =^jęz=
     : ---------------------------------------------------------------------------
     : Initially selecting 1 rows (words) that match criterion:
     : - value in "QUALIFIER" field *matches* regex "^jęz"
     :   - (this selection will be expanded and can be inverted)
     : ---------------------------------------------------------------------------
     : DROP: words that match regex: "^przypadek(?:[:].*)*$"
     : ---------------------------------------------------------------------------
     : Final mask selects 2 words (rows).
     : Final mask ignores 1028 words (rows).
     : ===========================================================================
     : KEEP: 1028 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 1028
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :                WORD     FREQ           ROOT                                       DESCR            CLASS QUALIFIER _merge
     : 324        Internet  1822239       Internet                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1147            WWW   615922            WWW  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f  nazwa pospolita             both
     : 1367  administracja   522797  administracja                              subst:sg:nom:f  nazwa pospolita             both
     : 591           adres  1127345          adres                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 991         agencja   703140        agencja                              subst:sg:nom:f  nazwa pospolita             both
     : 1386       akademia   517686       akademia                              subst:sg:nom:f  nazwa pospolita             both
     : 219           akcja  2327268          akcja                              subst:sg:nom:f  nazwa pospolita             both
     : 1222            akt   586576         akt:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1223            akt   586576         akt:s2                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1374      aktywność   520272      aktywność                              subst:sg:acc:f  nazwa pospolita             both
     : 1375      aktywność   520272      aktywność                              subst:sg:nom:f  nazwa pospolita             both
     : 1299          album   553738          album                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1141        alkohol   619491        alkohol                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 663         analiza  1024374        analiza                              subst:sg:nom:f  nazwa pospolita             both
     : 858          aparat   786385      aparat:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 859          aparat   786385      aparat:s2                             subst:sg:nom:m1  nazwa pospolita      pot.   both
     : 714       aplikacja   949097      aplikacja                              subst:sg:nom:f  nazwa pospolita             both
     : 1128       argument   625611       argument                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1475          armia   482219          armia                              subst:sg:nom:f  nazwa pospolita             both
     : 340         artykuł  1739561        artykuł                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 934         artysta   733768        artysta                             subst:sg:nom:m1  nazwa pospolita             both
     : 1418         aspekt   499775         aspekt                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 771            atak   883020           atak                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 994       atmosfera   700953      atmosfera                              subst:sg:nom:f  nazwa pospolita             both
     : ---------------------------------------------------------------------------
     :             WORD     FREQ        ROOT                        DESCR            CLASS QUALIFIER _merge
     : 931   zwycięstwo   737740  zwycięstwo  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 1057        zysk   661925        zysk          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1508         ząb   468070         ząb          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1509         ząb   468070         ząb              subst:sg:nom:m2  nazwa pospolita      pot.   both
     : 1311    łazienka   549269    łazienka               subst:sg:nom:f  nazwa pospolita             both
     : 1510       łóżko   467525       łóżko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 604       ściana  1108058      ściana               subst:sg:nom:f  nazwa pospolita             both
     : 1410     ścieżka   503101     ścieżek              subst:sg:gen:m3  nazwa pospolita             both
     : 1411     ścieżka   503101     ścieżka               subst:sg:nom:f  nazwa pospolita             both
     : 1484        ślad   480655        ślad          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1412        ślub   502115        ślub          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 409       śmierć  1558268      śmierć               subst:sg:acc:f  nazwa pospolita             both
     : 410       śmierć  1558268      śmierć               subst:sg:nom:f  nazwa pospolita             both
     : 127       środek  3173454      środek          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 372   środowisko  1655405  środowisko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 992   świadomość   702290  świadomość               subst:sg:acc:f  nazwa pospolita             both
     : 993   świadomość   702290  świadomość               subst:sg:nom:f  nazwa pospolita             both
     : 85         świat  4895309       świat          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 138       źródło  3149575      źródło  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 797         żona   869748        żona               subst:sg:nom:f  nazwa pospolita             both
     : 1044    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita             both
     : 1045    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 43         życie  7372748       życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 45         życie  7372748        żyto          subst:sg:loc:n:ncol  nazwa pospolita             both
     : ===========================================================================
     : DROP: 2 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 2  [83, 84]
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: True
     : ---------------------------------------------------------------------------
     :          WORD     FREQ          ROOT                DESCR            CLASS QUALIFIER _merge
     : 83  przypadek  4905306  przypadek:s1  subst:sg:nom.acc:m3  nazwa pospolita      jęz.   both
     : 84  przypadek  4905306  przypadek:s2  subst:sg:nom.acc:m3  nazwa pospolita             both
     : ---------------------------------------------------------------------------
     :          WORD     FREQ          ROOT                DESCR            CLASS QUALIFIER _merge
     : 83  przypadek  4905306  przypadek:s1  subst:sg:nom.acc:m3  nazwa pospolita      jęz.   both
     : 84  przypadek  4905306  przypadek:s2  subst:sg:nom.acc:m3  nazwa pospolita             both
     :
     :END:

**** DONE Part 05: Drop if =QUALIFIER= starts with =daw=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_data = s0001_nouns_legal_unique_sgjp_clean
col_ref = "ROOT"
col_chk = "QUALIFIER"
reg_exp = "^daw"
select_matching = True
keep_selected   = False
n_head  = 24
n_tail  = 24
verbose = 5

s0001_nouns_legal_unique_sgjp_clean, tmp_drop = words_filt( df_data, col_ref, col_chk, reg_exp, select_matching, keep_selected, n_head, n_tail, verbose, )
s0001_nouns_legal_unique_sgjp_dirty = pd.concat( [ s0001_nouns_legal_unique_sgjp_dirty, tmp_drop, ], axis=0, ignore_index=False, )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[27]:
     # output
     : ===========================================================================
     : Got input of: 1028 words (rows).
     : ---------------------------------------------------------------------------
     : KEEP:
     : - Words (rows) that contain:
     :   - *no* values in the =QUALIFIER= field that *match* regex =^daw=
     : ---------------------------------------------------------------------------
     : DROP:
     : - Words (rows) that contain:
     :   - *at least one* value in the =QUALIFIER= field that *match* regex =^daw=
     : ---------------------------------------------------------------------------
     : Initially selecting 13 rows (words) that match criterion:
     : - value in "QUALIFIER" field *matches* regex "^daw"
     :   - (this selection will be expanded and can be inverted)
     : ---------------------------------------------------------------------------
     : DROP: words that match regex: "^człowiek(?:[:].*)*$|^dokument(?:[:].*)*$|^dzień(?:[:].*)*$|^dzień(?:[:].*)*$|^koleja(?:[:].*)*$|^mor(?:[:].*)*$|^mor(?:[:].*)*$|^ogień(?:[:].*)*$|^podróża(?:[:].*)*$|^projekt(?:[:].*)*$|^rok(?:[:].*)*$|^ryzyka(?:[:].*)*$|^sztuk(?:[:].*)*$"
     : ---------------------------------------------------------------------------
     : Final mask selects 19 words (rows).
     : Final mask ignores 1009 words (rows).
     : ===========================================================================
     : KEEP: 1009 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 1009
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :                WORD     FREQ           ROOT                                       DESCR            CLASS QUALIFIER _merge
     : 324        Internet  1822239       Internet                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1147            WWW   615922            WWW  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f  nazwa pospolita             both
     : 1367  administracja   522797  administracja                              subst:sg:nom:f  nazwa pospolita             both
     : 591           adres  1127345          adres                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 991         agencja   703140        agencja                              subst:sg:nom:f  nazwa pospolita             both
     : 1386       akademia   517686       akademia                              subst:sg:nom:f  nazwa pospolita             both
     : 219           akcja  2327268          akcja                              subst:sg:nom:f  nazwa pospolita             both
     : 1222            akt   586576         akt:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1223            akt   586576         akt:s2                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1374      aktywność   520272      aktywność                              subst:sg:acc:f  nazwa pospolita             both
     : 1375      aktywność   520272      aktywność                              subst:sg:nom:f  nazwa pospolita             both
     : 1299          album   553738          album                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1141        alkohol   619491        alkohol                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 663         analiza  1024374        analiza                              subst:sg:nom:f  nazwa pospolita             both
     : 858          aparat   786385      aparat:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 859          aparat   786385      aparat:s2                             subst:sg:nom:m1  nazwa pospolita      pot.   both
     : 714       aplikacja   949097      aplikacja                              subst:sg:nom:f  nazwa pospolita             both
     : 1128       argument   625611       argument                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1475          armia   482219          armia                              subst:sg:nom:f  nazwa pospolita             both
     : 340         artykuł  1739561        artykuł                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 934         artysta   733768        artysta                             subst:sg:nom:m1  nazwa pospolita             both
     : 1418         aspekt   499775         aspekt                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 771            atak   883020           atak                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 994       atmosfera   700953      atmosfera                              subst:sg:nom:f  nazwa pospolita             both
     : ---------------------------------------------------------------------------
     :             WORD     FREQ        ROOT                        DESCR            CLASS QUALIFIER _merge
     : 931   zwycięstwo   737740  zwycięstwo  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 1057        zysk   661925        zysk          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1508         ząb   468070         ząb          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1509         ząb   468070         ząb              subst:sg:nom:m2  nazwa pospolita      pot.   both
     : 1311    łazienka   549269    łazienka               subst:sg:nom:f  nazwa pospolita             both
     : 1510       łóżko   467525       łóżko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 604       ściana  1108058      ściana               subst:sg:nom:f  nazwa pospolita             both
     : 1410     ścieżka   503101     ścieżek              subst:sg:gen:m3  nazwa pospolita             both
     : 1411     ścieżka   503101     ścieżka               subst:sg:nom:f  nazwa pospolita             both
     : 1484        ślad   480655        ślad          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1412        ślub   502115        ślub          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 409       śmierć  1558268      śmierć               subst:sg:acc:f  nazwa pospolita             both
     : 410       śmierć  1558268      śmierć               subst:sg:nom:f  nazwa pospolita             both
     : 127       środek  3173454      środek          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 372   środowisko  1655405  środowisko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 992   świadomość   702290  świadomość               subst:sg:acc:f  nazwa pospolita             both
     : 993   świadomość   702290  świadomość               subst:sg:nom:f  nazwa pospolita             both
     : 85         świat  4895309       świat          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 138       źródło  3149575      źródło  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 797         żona   869748        żona               subst:sg:nom:f  nazwa pospolita             both
     : 1044    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita             both
     : 1045    żołnierz   667685    żołnierz              subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 43         życie  7372748       życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 45         życie  7372748        żyto          subst:sg:loc:n:ncol  nazwa pospolita             both
     : ===========================================================================
     : DROP: 19 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 19  [19, 18, 408, 407, 24]
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :           WORD      FREQ      ROOT                DESCR            CLASS    QUALIFIER _merge
     : 19    człowiek  12163557  człowiek      subst:sg:nom:m1  nazwa pospolita         daw.   both
     : 18    człowiek  12163557  człowiek      subst:sg:nom:m1  nazwa pospolita                both
     : 408   dokument   1564012  dokument  subst:sg:nom.acc:m3  nazwa pospolita         daw.   both
     : 407   dokument   1564012  dokument  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 24       dzień  11443515  dzień:s1  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 25       dzień  11443515  dzień:s2       subst:sg:acc:f  nazwa pospolita  daw.|pszcz.   both
     : 26       dzień  11443515  dzień:s2       subst:sg:nom:f  nazwa pospolita  daw.|pszcz.   both
     : 652     koleja   1034050    koleja       subst:sg:nom:f  nazwa pospolita         daw.   both
     : 790      morze    874268       mor      subst:sg:voc:m3  nazwa pospolita         daw.   both
     : 789      morze    874268       mor      subst:sg:loc:m3  nazwa pospolita         daw.   both
     : 1461     ogień    487442     ogień  subst:sg:nom.acc:m3  nazwa pospolita         daw.   both
     : 1460     ogień    487442     ogień  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 1266   podróża    573290   podróża       subst:sg:nom:f  nazwa pospolita         daw.   both
     : 94     projekt   4429990   projekt  subst:sg:nom.acc:m3  nazwa pospolita         daw.   both
     : 93     projekt   4429990   projekt  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 14         rok  25419583    rok:s1  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 15         rok  25419583    rok:s2  subst:sg:nom.acc:m3  nazwa pospolita   daw.|praw.   both
     : 877     ryzyko    770517    ryzyka       subst:sg:voc:f  nazwa pospolita         daw.   both
     : 353     sztuka   1685239     sztuk      subst:sg:gen:m3  nazwa pospolita         daw.   both
     : ---------------------------------------------------------------------------
     :           WORD      FREQ      ROOT                DESCR            CLASS    QUALIFIER _merge
     : 19    człowiek  12163557  człowiek      subst:sg:nom:m1  nazwa pospolita         daw.   both
     : 18    człowiek  12163557  człowiek      subst:sg:nom:m1  nazwa pospolita                both
     : 408   dokument   1564012  dokument  subst:sg:nom.acc:m3  nazwa pospolita         daw.   both
     : 407   dokument   1564012  dokument  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 24       dzień  11443515  dzień:s1  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 25       dzień  11443515  dzień:s2       subst:sg:acc:f  nazwa pospolita  daw.|pszcz.   both
     : 26       dzień  11443515  dzień:s2       subst:sg:nom:f  nazwa pospolita  daw.|pszcz.   both
     : 652     koleja   1034050    koleja       subst:sg:nom:f  nazwa pospolita         daw.   both
     : 790      morze    874268       mor      subst:sg:voc:m3  nazwa pospolita         daw.   both
     : 789      morze    874268       mor      subst:sg:loc:m3  nazwa pospolita         daw.   both
     : 1461     ogień    487442     ogień  subst:sg:nom.acc:m3  nazwa pospolita         daw.   both
     : 1460     ogień    487442     ogień  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 1266   podróża    573290   podróża       subst:sg:nom:f  nazwa pospolita         daw.   both
     : 94     projekt   4429990   projekt  subst:sg:nom.acc:m3  nazwa pospolita         daw.   both
     : 93     projekt   4429990   projekt  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 14         rok  25419583    rok:s1  subst:sg:nom.acc:m3  nazwa pospolita                both
     : 15         rok  25419583    rok:s2  subst:sg:nom.acc:m3  nazwa pospolita   daw.|praw.   both
     : 877     ryzyko    770517    ryzyka       subst:sg:voc:f  nazwa pospolita         daw.   both
     : 353     sztuka   1685239     sztuk      subst:sg:gen:m3  nazwa pospolita         daw.   both
     :
     :END:

**** DONE Part 06: Drop if =QUALIFIER= starts with =rzad=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_data = s0001_nouns_legal_unique_sgjp_clean
col_ref = "ROOT"
col_chk = "QUALIFIER"
reg_exp = "^rzad"
select_matching = True
keep_selected   = False
n_head  = 24
n_tail  = 24
verbose = 5

s0001_nouns_legal_unique_sgjp_clean, tmp_drop = words_filt( df_data, col_ref, col_chk, reg_exp, select_matching, keep_selected, n_head, n_tail, verbose, )
s0001_nouns_legal_unique_sgjp_dirty = pd.concat( [ s0001_nouns_legal_unique_sgjp_dirty, tmp_drop, ], axis=0, ignore_index=False, )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[28]:
     # output
     : ===========================================================================
     : Got input of: 1009 words (rows).
     : ---------------------------------------------------------------------------
     : KEEP:
     : - Words (rows) that contain:
     :   - *no* values in the =QUALIFIER= field that *match* regex =^rzad=
     : ---------------------------------------------------------------------------
     : DROP:
     : - Words (rows) that contain:
     :   - *at least one* value in the =QUALIFIER= field that *match* regex =^rzad=
     : ---------------------------------------------------------------------------
     : Initially selecting 6 rows (words) that match criterion:
     : - value in "QUALIFIER" field *matches* regex "^rzad"
     :   - (this selection will be expanded and can be inverted)
     : ---------------------------------------------------------------------------
     : DROP: words that match regex: "^gospodarz(?:[:].*)*$|^komentarz(?:[:].*)*$|^lekarz(?:[:].*)*$|^piłkarz(?:[:].*)*$|^sport(?:[:].*)*$|^żołnierz(?:[:].*)*$"
     : ---------------------------------------------------------------------------
     : Final mask selects 13 words (rows).
     : Final mask ignores 996 words (rows).
     : ===========================================================================
     : KEEP: 996 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 996
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :                WORD     FREQ           ROOT                                       DESCR            CLASS QUALIFIER _merge
     : 324        Internet  1822239       Internet                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1147            WWW   615922            WWW  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f  nazwa pospolita             both
     : 1367  administracja   522797  administracja                              subst:sg:nom:f  nazwa pospolita             both
     : 591           adres  1127345          adres                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 991         agencja   703140        agencja                              subst:sg:nom:f  nazwa pospolita             both
     : 1386       akademia   517686       akademia                              subst:sg:nom:f  nazwa pospolita             both
     : 219           akcja  2327268          akcja                              subst:sg:nom:f  nazwa pospolita             both
     : 1222            akt   586576         akt:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1223            akt   586576         akt:s2                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1374      aktywność   520272      aktywność                              subst:sg:acc:f  nazwa pospolita             both
     : 1375      aktywność   520272      aktywność                              subst:sg:nom:f  nazwa pospolita             both
     : 1299          album   553738          album                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1141        alkohol   619491        alkohol                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 663         analiza  1024374        analiza                              subst:sg:nom:f  nazwa pospolita             both
     : 858          aparat   786385      aparat:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 859          aparat   786385      aparat:s2                             subst:sg:nom:m1  nazwa pospolita      pot.   both
     : 714       aplikacja   949097      aplikacja                              subst:sg:nom:f  nazwa pospolita             both
     : 1128       argument   625611       argument                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1475          armia   482219          armia                              subst:sg:nom:f  nazwa pospolita             both
     : 340         artykuł  1739561        artykuł                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 934         artysta   733768        artysta                             subst:sg:nom:m1  nazwa pospolita             both
     : 1418         aspekt   499775         aspekt                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 771            atak   883020           atak                         subst:sg:nom.acc:m3  nazwa pospolita             both
     : 994       atmosfera   700953      atmosfera                              subst:sg:nom:f  nazwa pospolita             both
     : ---------------------------------------------------------------------------
     :             WORD     FREQ        ROOT                        DESCR            CLASS QUALIFIER _merge
     : 171      związek  2706007     związek          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1295       zwrot   556931       zwrot          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 931   zwycięstwo   737740  zwycięstwo  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 1057        zysk   661925        zysk          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1508         ząb   468070         ząb          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1509         ząb   468070         ząb              subst:sg:nom:m2  nazwa pospolita      pot.   both
     : 1311    łazienka   549269    łazienka               subst:sg:nom:f  nazwa pospolita             both
     : 1510       łóżko   467525       łóżko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 604       ściana  1108058      ściana               subst:sg:nom:f  nazwa pospolita             both
     : 1410     ścieżka   503101     ścieżek              subst:sg:gen:m3  nazwa pospolita             both
     : 1411     ścieżka   503101     ścieżka               subst:sg:nom:f  nazwa pospolita             both
     : 1484        ślad   480655        ślad          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 1412        ślub   502115        ślub          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 409       śmierć  1558268      śmierć               subst:sg:acc:f  nazwa pospolita             both
     : 410       śmierć  1558268      śmierć               subst:sg:nom:f  nazwa pospolita             both
     : 127       środek  3173454      środek          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 372   środowisko  1655405  środowisko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 992   świadomość   702290  świadomość               subst:sg:acc:f  nazwa pospolita             both
     : 993   świadomość   702290  świadomość               subst:sg:nom:f  nazwa pospolita             both
     : 85         świat  4895309       świat          subst:sg:nom.acc:m3  nazwa pospolita             both
     : 138       źródło  3149575      źródło  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 797         żona   869748        żona               subst:sg:nom:f  nazwa pospolita             both
     : 43         życie  7372748       życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
     : 45         życie  7372748        żyto          subst:sg:loc:n:ncol  nazwa pospolita             both
     : ===========================================================================
     : DROP: 13 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 13  [1270, 1269, 370, 369, 313]
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :            WORD     FREQ       ROOT                DESCR            CLASS QUALIFIER _merge
     : 1270  gospodarz   571939  gospodarz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 1269  gospodarz   571939  gospodarz      subst:sg:nom:m1  nazwa pospolita             both
     : 370   komentarz  1659615  komentarz  subst:sg:nom.acc:m3  nazwa pospolita     rzad.   both
     : 369   komentarz  1659615  komentarz  subst:sg:nom.acc:m3  nazwa pospolita             both
     : 313      lekarz  1854843     lekarz      subst:sg:nom:m1  nazwa pospolita             both
     : 314      lekarz  1854843     lekarz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 1062    piłkarz   658225    piłkarz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 1061    piłkarz   658225    piłkarz      subst:sg:nom:m1  nazwa pospolita             both
     : 638       sport  1056595   sport:s1  subst:sg:nom.acc:m3  nazwa pospolita             both
     : 639       sport  1056595   sport:s2  subst:sg:nom.acc:m3  nazwa pospolita     rzad.   both
     : 640       sport  1056595   sport:s2      subst:sg:nom:m2  nazwa pospolita             both
     : 1044   żołnierz   667685   żołnierz      subst:sg:nom:m1  nazwa pospolita             both
     : 1045   żołnierz   667685   żołnierz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : ---------------------------------------------------------------------------
     :            WORD     FREQ       ROOT                DESCR            CLASS QUALIFIER _merge
     : 1270  gospodarz   571939  gospodarz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 1269  gospodarz   571939  gospodarz      subst:sg:nom:m1  nazwa pospolita             both
     : 370   komentarz  1659615  komentarz  subst:sg:nom.acc:m3  nazwa pospolita     rzad.   both
     : 369   komentarz  1659615  komentarz  subst:sg:nom.acc:m3  nazwa pospolita             both
     : 313      lekarz  1854843     lekarz      subst:sg:nom:m1  nazwa pospolita             both
     : 314      lekarz  1854843     lekarz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 1062    piłkarz   658225    piłkarz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     : 1061    piłkarz   658225    piłkarz      subst:sg:nom:m1  nazwa pospolita             both
     : 638       sport  1056595   sport:s1  subst:sg:nom.acc:m3  nazwa pospolita             both
     : 639       sport  1056595   sport:s2  subst:sg:nom.acc:m3  nazwa pospolita     rzad.   both
     : 640       sport  1056595   sport:s2      subst:sg:nom:m2  nazwa pospolita             both
     : 1044   żołnierz   667685   żołnierz      subst:sg:nom:m1  nazwa pospolita             both
     : 1045   żołnierz   667685   żołnierz      subst:sg:nom:m1  nazwa pospolita     rzad.   both
     :
     :END:

*** DONE Filter =verbs=
**** DONE Part 01: Keep words that only/exclusively have ~inf~ at the  beginning their ~"DESCR"~

     KEEP:
     - Words (rows) that contain:
       - *only (exclusively)* values in the =DESCR= field that *start* with =inf=

     DROP:
     - Words (rows) that contain:
       - *at least one* value in the =DESCR= field that *does not start* with =inf=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_data = s0001_verbs_legal_unique_sgjp_clean
col_ref = "ROOT"
col_chk = "DESCR"
reg_exp = "^inf"
select_matching = False
keep_selected   = False
n_head  = 24
n_tail  = 24
verbose = 5

s0001_verbs_legal_unique_sgjp_clean, tmp_drop = words_filt( df_data, col_ref, col_chk, reg_exp, select_matching, keep_selected, n_head, n_tail, verbose, )
s0001_verbs_legal_unique_sgjp_dirty = pd.concat( [ s0001_verbs_legal_unique_sgjp_dirty, tmp_drop, ], axis=0, ignore_index=False, )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[29]:
     # output
     : ===========================================================================
     : Got input of: 1171 words (rows).
     : ---------------------------------------------------------------------------
     : KEEP:
     : - Words (rows) that contain:
     :   - *only (exclusively)* values in the =DESCR= field that *match* regex =^inf=
     : ---------------------------------------------------------------------------
     : DROP:
     : - Words (rows) that contain:
     :   - *at least one* value in the =DESCR= field that *does not match* regex =^inf=
     : ---------------------------------------------------------------------------
     : Initially selecting 1074 rows (words) that match criterion:
     : - value in "DESCR" field *does not match* regex "^inf"
     :   - (this selection will be expanded and can be inverted)
     : ---------------------------------------------------------------------------
     : DROP: words that match regex: "^bicie(?:[:].*)*$|^bić(?:[:].*)*$|^bracić(?:[:].*)*$|^brać(?:[:].*)*$|^brać(?:[:].*)*$|^bycie(?:[:].*)*$|^być(?:[:].*)*$|^być(?:[:].*)*$|^być(?:[:].*)*$|^być(?:[:].*)*$|^być(?:[:].*)*$|^chcieć(?:[:].*)*$|^czucie(?:[:].*)*$|^czuć(?:[:].*)*$|^czuć(?:[:].*)*$|^dojście(?:[:].*)*$|^dojść(?:[:].*)*$|^iścić(?:[:].*)*$|^kryć(?:[:].*)*$|^lubić(?:[:].*)*$|^miecić(?:[:].*)*$|^mieć(?:[:].*)*$|^mieć(?:[:].*)*$|^mieść(?:[:].*)*$|^mycie(?:[:].*)*$|^myć(?:[:].*)*$|^móc(?:[:].*)*$|^nabycie(?:[:].*)*$|^nabyć(?:[:].*)*$|^nadejście(?:[:].*)*$|^nadejść(?:[:].*)*$|^należeć(?:[:].*)*$|^należeć(?:[:].*)*$|^odbicie(?:[:].*)*$|^odbić(?:[:].*)*$|^odbyć(?:[:].*)*$|^odejście(?:[:].*)*$|^odejść(?:[:].*)*$|^odkrycie(?:[:].*)*$|^odkryć(?:[:].*)*$|^paść(?:[:].*)*$|^paść(?:[:].*)*$|^picie(?:[:].*)*$|^piec(?:[:].*)*$|^pić(?:[:].*)*$|^pobracić(?:[:].*)*$|^poczucie(?:[:].*)*$|^poczuć(?:[:].*)*$|^podejście(?:[:].*)*$|^podejść(?:[:].*)*$|^pokrycie(?:[:].*)*$|^pokryć(?:[:].*)*$|^powiedzieć(?:[:].*)*$|^powinien(?:[:].*)*$|^pozbyć(?:[:].*)*$|^przejście(?:[:].*)*$|^przejść(?:[:].*)*$|^przejść(?:[:].*)*$|^przeżycie(?:[:].*)*$|^przeżyć(?:[:].*)*$|^przybycie(?:[:].*)*$|^przybyć(?:[:].*)*$|^przyjść(?:[:].*)*$|^pójście(?:[:].*)*$|^pójść(?:[:].*)*$|^rozbicie(?:[:].*)*$|^rozbić(?:[:].*)*$|^stać(?:[:].*)*$|^ukrycie(?:[:].*)*$|^ukryć(?:[:].*)*$|^umieść(?:[:].*)*$|^użycie(?:[:].*)*$|^użyć(?:[:].*)*$|^wejście(?:[:].*)*$|^wejść(?:[:].*)*$|^wiedzieć(?:[:].*)*$|^wieścić(?:[:].*)*$|^wieść(?:[:].*)*$|^wieść(?:[:].*)*$|^wyjście(?:[:].*)*$|^wyjść(?:[:].*)*$|^wykrycie(?:[:].*)*$|^wykryć(?:[:].*)*$|^wyniść(?:[:].*)*$|^zabicie(?:[:].*)*$|^zabić(?:[:].*)*$|^zagracić(?:[:].*)*$|^zajście(?:[:].*)*$|^zajść(?:[:].*)*$|^zajść(?:[:].*)*$|^zdobycie(?:[:].*)*$|^zdobyć(?:[:].*)*$|^zejście(?:[:].*)*$|^zejść(?:[:].*)*$|^znać(?:[:].*)*$|^życie(?:[:].*)*$|^żyć(?:[:].*)*$"
     : ---------------------------------------------------------------------------
     : Final mask selects 149 words (rows).
     : Final mask ignores 1022 words (rows).
     : ===========================================================================
     : KEEP: 1022 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 1022
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :                  WORD     FREQ             ROOT            DESCR CLASS QUALIFIER _merge
     : 1028       akceptować   220664       akceptować       inf:imperf                   both
     : 878        analizować   274534       analizować       inf:imperf                   both
     : 757          atakować   326561         atakować       inf:imperf                   both
     : 1164        awansować   184924        awansować  inf:imperf.perf                   both
     : 393             badać   660357            badać       inf:imperf                   both
     : 410             bawić   646081            bawić       inf:imperf                   both
     : 295               bać   885991              bać       inf:imperf                   both
     : 945              biec   245891             biec       inf:imperf                   both
     : 693            biegać   360340           biegać       inf:imperf                   both
     : 971          blokować   235861         blokować       inf:imperf                   both
     : 547             boleć   469296         boleć:v1       inf:imperf                   both
     : 548             boleć   469296         boleć:v2       inf:imperf                   both
     : 268          brakować   953667         brakować       inf:imperf                   both
     : 481            bronić   534274           bronić       inf:imperf                   both
     : 455           brzmieć   579650       brzmieć:v1       inf:imperf                   both
     : 456           brzmieć   579650       brzmieć:v2       inf:imperf           rzad.   both
     : 210           budować  1149540          budować       inf:imperf                   both
     : 505            budzić   503263           budzić       inf:imperf                   both
     : 327             bywać   785171            bywać       inf:imperf                   both
     : 687             cenić   365146            cenić       inf:imperf                   both
     : 697   charakteryzować   359522  charakteryzować       inf:imperf                   both
     : 19            chodzić  5053098          chodzić       inf:imperf                   both
     : 445           chronić   597217          chronić       inf:imperf                   both
     : 862           chwalić   279048          chwalić       inf:imperf                   both
     : ---------------------------------------------------------------------------
     :            WORD     FREQ        ROOT       DESCR CLASS QUALIFIER _merge
     : 519   zwiększać   495342   zwiększać  inf:imperf                   both
     : 279   zwiększyć   932002   zwiększyć    inf:perf                   both
     : 637     zwolnić   393799     zwolnić    inf:perf                   both
     : 332     zwracać   780257     zwracać  inf:imperf                   both
     : 234     zwrócić  1055384     zwrócić    inf:perf                   both
     : 692      zyskać   360378      zyskać    inf:perf                   both
     : 811      złapać   302346      złapać    inf:perf                   both
     : 153      złożyć  1348100      złożyć    inf:perf                   both
     : 929     ćwiczyć   253891     ćwiczyć  inf:imperf                   both
     : 1086    ładować   203785  ładować:v1  inf:imperf                   both
     : 1087    ładować   203785  ładować:v2  inf:imperf         przest.   both
     : 882       łamać   271379       łamać  inf:imperf                   both
     : 1168      łapać   184021       łapać  inf:imperf                   both
     : 244      łączyć  1028040      łączyć  inf:imperf                   both
     : 922     ściągać   256064     ściągać  inf:imperf                   both
     : 799    ściągnąć   306188    ściągnąć    inf:perf                   both
     : 934     śledzić   250270     śledzić  inf:imperf                   both
     : 1052      śmiać   212298       śmiać  inf:imperf                   both
     : 539     śpiewać   482299     śpiewać  inf:imperf                   both
     : 247   świadczyć  1025531   świadczyć  inf:imperf                   both
     : 1014    świecić   222708     świecić  inf:imperf                   both
     : 921     żałować   256222     żałować  inf:imperf                   both
     : 314      życzyć   825599      życzyć  inf:imperf                   both
     : 931       żądać   251486       żądać  inf:imperf                   both
     : ===========================================================================
     : DROP: 149 words (rows)...
     : ---------------------------------------------------------------------------
     : ===========================================================================
     : idx count: 149
     : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
     : ---------------------------------------------------------------------------
     : is FREQ sorted: False
     : ---------------------------------------------------------------------------
     :           WORD       FREQ     ROOT                         DESCR            CLASS QUALIFIER _merge
     : 555        bić     463141    bicie           subst:pl:gen:n:ncol  nazwa pospolita             both
     : 556        bić     463141      bić       ger:pl:gen:n:imperf:aff                              both
     : 557        bić     463141      bić                    inf:imperf                              both
     : 55        brać    2467720   bracić            impt:sg:sec:imperf                       daw.   both
     : 57        brać    2467720   brać:s                subst:sg:nom:f  nazwa pospolita             both
     : 56        brać    2467720   brać:s                subst:sg:acc:f  nazwa pospolita             both
     : 58        brać    2467720   brać:v                    inf:imperf                              both
     : 0          być  163773312    bycie           subst:pl:gen:n:ncol  nazwa pospolita             both
     : 1          być  163773312      być       ger:pl:gen:n:imperf:aff                              both
     : 993    byliśmy     228192      być        praet:pl:m1:pri:imperf                              both
     : 542      byłam     474827      być         praet:sg:f:pri:imperf                              both
     : 12      będzie    5966505      być          bedzie:sg:ter:imperf                              both
     : 2          być  163773312      być                    inf:imperf                              both
     : 887      byłem     269614      być  praet:sg:m1.m2.m3:pri:imperf                              both
     : 1024  chciałam     220808   chcieć         praet:sg:f:pri:imperf                              both
     : 8       chcieć    9997827   chcieć                    inf:imperf                              both
     : 99        czuć    1865947   czucie           subst:pl:gen:n:ncol  nazwa pospolita             both
     : 100       czuć    1865947   czuć:v                          pred                              both
     : 101       czuć    1865947   czuć:v       ger:pl:gen:n:imperf:aff                              both
     : 102       czuć    1865947   czuć:v                    inf:imperf                              both
     : 167      dojść    1279745  dojście           subst:pl:gen:n:ncol  nazwa pospolita             both
     : 168      dojść    1279745    dojść         ger:pl:gen:n:perf:aff                              both
     : 169      dojść    1279745    dojść                      inf:perf                              both
     : 42         iść    2740949    iścić            impt:sg:sec:imperf                       daw.   both
     : ---------------------------------------------------------------------------
     :         WORD     FREQ      ROOT                    DESCR            CLASS QUALIFIER _merge
     : 1131  wykryć   193334    wykryć                 inf:perf                              both
     : 487   wyniść   528055    wyniść                 inf:perf                       daw.   both
     : 486   wyniść   528055    wyniść    ger:pl:gen:n:perf:aff                              both
     : 516    zabić   495408   zabicie      subst:pl:gen:n:ncol  nazwa pospolita             both
     : 518    zabić   495408     zabić                 inf:perf                              both
     : 517    zabić   495408     zabić    ger:pl:gen:n:perf:aff                              both
     : 281   zagrać   914436  zagracić         impt:sg:sec:perf                              both
     : 1122   zajść   194646   zajście      subst:pl:gen:n:ncol  nazwa pospolita             both
     : 1124   zajść   194646  zajść:v1                 inf:perf                              both
     : 1123   zajść   194646  zajść:v1    ger:pl:gen:n:perf:aff                              both
     : 1126   zajść   194646  zajść:v2                 inf:perf                    przest.   both
     : 1125   zajść   194646  zajść:v2    ger:pl:gen:n:perf:aff                              both
     : 120   zdobyć  1619818  zdobycie      subst:pl:gen:n:ncol  nazwa pospolita             both
     : 122   zdobyć  1619818    zdobyć                 inf:perf                              both
     : 121   zdobyć  1619818    zdobyć    ger:pl:gen:n:perf:aff                              both
     : 1062   zejść   207832   zejście      subst:pl:gen:n:ncol  nazwa pospolita             both
     : 1065   zejść   207832     zejść                 inf:perf                      rzad.   both
     : 1064   zejść   207832     zejść                 inf:perf                              both
     : 1063   zejść   207832     zejść    ger:pl:gen:n:perf:aff                              both
     : 31      znać  3474324    znać:v                     pred                              both
     : 32      znać  3474324    znać:v               inf:imperf                              both
     : 94       żyć  1924284     życie      subst:pl:gen:n:ncol  nazwa pospolita             both
     : 96       żyć  1924284       żyć               inf:imperf                              both
     : 95       żyć  1924284       żyć  ger:pl:gen:n:imperf:aff                              both
     :
     :END:

*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal_unique_sgjp_clean_filt = s0001_nouns_legal_unique_sgjp_clean.copy()
s0001_nouns_legal_unique_sgjp_dirty_filt = s0001_nouns_legal_unique_sgjp_dirty.copy()
s0001_verbs_legal_unique_sgjp_clean_filt = s0001_verbs_legal_unique_sgjp_clean.copy()
s0001_verbs_legal_unique_sgjp_dirty_filt = s0001_verbs_legal_unique_sgjp_dirty.copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[30]:
    :END:

*** DONE Checkup 01: Overview

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal_unique_sgjp_clean_filt = s0001_nouns_legal_unique_sgjp_clean_filt.copy()
s0001_verbs_legal_unique_sgjp_clean_filt = s0001_verbs_legal_unique_sgjp_clean_filt.copy()

df_list = [  s0001_nouns_legal_unique_sgjp_clean_filt,   s0001_nouns_legal_unique_sgjp_dirty_filt,   s0001_verbs_legal_unique_sgjp_clean_filt,   s0001_verbs_legal_unique_sgjp_dirty_filt, ]
df_info = [ "s0001_nouns_legal_unique_sgjp_clean_filt", "s0001_nouns_legal_unique_sgjp_dirty_filt", "s0001_verbs_legal_unique_sgjp_clean_filt", "s0001_verbs_legal_unique_sgjp_dirty_filt", ]
df_head = 0
df_tail = 0

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[31]:
    # output
    : ===========================================================================
    : s0001_nouns_legal_unique_sgjp_clean_filt
    : ===========================================================================
    : idx count: 996
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ===========================================================================
    : s0001_nouns_legal_unique_sgjp_dirty_filt
    : ===========================================================================
    : idx count: 555
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ===========================================================================
    : s0001_verbs_legal_unique_sgjp_clean_filt
    : ===========================================================================
    : idx count: 1022
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ===========================================================================
    : s0001_verbs_legal_unique_sgjp_dirty_filt
    : ===========================================================================
    : idx count: 149
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    :
    :END:

*** DONE Checkup 02: Listing (head, tail)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_list = [  s0001_nouns_legal_unique_sgjp_clean_filt,   s0001_nouns_legal_unique_sgjp_dirty_filt,   s0001_verbs_legal_unique_sgjp_clean_filt,   s0001_verbs_legal_unique_sgjp_dirty_filt, ]
df_info = [ "s0001_nouns_legal_unique_sgjp_clean_filt", "s0001_nouns_legal_unique_sgjp_dirty_filt", "s0001_verbs_legal_unique_sgjp_clean_filt", "s0001_verbs_legal_unique_sgjp_dirty_filt", ]
df_head = 16
df_tail = 16

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[32]:
    # output
    : ===========================================================================
    : s0001_nouns_legal_unique_sgjp_clean_filt
    : ===========================================================================
    : idx count: 996
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ---------------------------------------------------------------------------
    :                WORD     FREQ           ROOT                                       DESCR            CLASS QUALIFIER _merge
    : 324        Internet  1822239       Internet                         subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1147            WWW   615922            WWW  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:f  nazwa pospolita             both
    : 1367  administracja   522797  administracja                              subst:sg:nom:f  nazwa pospolita             both
    : 591           adres  1127345          adres                         subst:sg:nom.acc:m3  nazwa pospolita             both
    : 991         agencja   703140        agencja                              subst:sg:nom:f  nazwa pospolita             both
    : 1386       akademia   517686       akademia                              subst:sg:nom:f  nazwa pospolita             both
    : 219           akcja  2327268          akcja                              subst:sg:nom:f  nazwa pospolita             both
    : 1222            akt   586576         akt:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1223            akt   586576         akt:s2                         subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1374      aktywność   520272      aktywność                              subst:sg:acc:f  nazwa pospolita             both
    : 1375      aktywność   520272      aktywność                              subst:sg:nom:f  nazwa pospolita             both
    : 1299          album   553738          album                         subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1141        alkohol   619491        alkohol                         subst:sg:nom.acc:m3  nazwa pospolita             both
    : 663         analiza  1024374        analiza                              subst:sg:nom:f  nazwa pospolita             both
    : 858          aparat   786385      aparat:s1                         subst:sg:nom.acc:m3  nazwa pospolita             both
    : 859          aparat   786385      aparat:s2                             subst:sg:nom:m1  nazwa pospolita      pot.   both
    : ---------------------------------------------------------------------------
    :             WORD     FREQ        ROOT                        DESCR            CLASS QUALIFIER _merge
    : 604       ściana  1108058      ściana               subst:sg:nom:f  nazwa pospolita             both
    : 1410     ścieżka   503101     ścieżek              subst:sg:gen:m3  nazwa pospolita             both
    : 1411     ścieżka   503101     ścieżka               subst:sg:nom:f  nazwa pospolita             both
    : 1484        ślad   480655        ślad          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1412        ślub   502115        ślub          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 409       śmierć  1558268      śmierć               subst:sg:acc:f  nazwa pospolita             both
    : 410       śmierć  1558268      śmierć               subst:sg:nom:f  nazwa pospolita             both
    : 127       środek  3173454      środek          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 372   środowisko  1655405  środowisko  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
    : 992   świadomość   702290  świadomość               subst:sg:acc:f  nazwa pospolita             both
    : 993   świadomość   702290  świadomość               subst:sg:nom:f  nazwa pospolita             both
    : 85         świat  4895309       świat          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 138       źródło  3149575      źródło  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
    : 797         żona   869748        żona               subst:sg:nom:f  nazwa pospolita             both
    : 43         życie  7372748       życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
    : 45         życie  7372748        żyto          subst:sg:loc:n:ncol  nazwa pospolita             both
    : ===========================================================================
    : s0001_nouns_legal_unique_sgjp_dirty_filt
    : ===========================================================================
    : idx count: 555
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ---------------------------------------------------------------------------
    :            WORD     FREQ                     ROOT                      DESCR                      CLASS QUALIFIER _merge
    : 899        Adam   763161                    Adamy          subst:pl:gen:n:pt  człon nazwy geograficznej     rzad.   both
    : 898        Adam   763161                    Adamy          subst:pl:gen:n:pt  człon nazwy geograficznej             both
    : 400         Jan  1571621  Ewangelia_świętego_Jana                  brev:npun                                        both
    : 401         Jan  1571621                  Jana:s4             subst:pl:gen:f                   nazwisko             both
    : 406         Jan  1571621                  Jany:s3          subst:pl:gen:n:pt         nazwa geograficzna     rzad.   both
    : 405         Jan  1571621                  Jany:s3          subst:pl:gen:n:pt         nazwa geograficzna             both
    : 1349      Józef   533896                   Józefa             subst:pl:gen:f                       imię             both
    : 1348   Katowice   534802                 Katowice  subst:pl:nom.acc.voc:n:pt         nazwa geograficzna     rzad.   both
    : 1347   Katowice   534802                 Katowice  subst:pl:nom.acc.voc:n:pt         nazwa geograficzna             both
    : 415      Kraków  1542620                  Krak:s1        subst:pl:gen.acc:m1                       imię             both
    : 416      Kraków  1542620                  Krak:s2        subst:pl:gen.acc:m1                   nazwisko             both
    : 413      Kraków  1542620                 Kraka:s1        subst:pl:gen.acc:m1                   nazwisko             both
    : 890   Krzysztof   764318               Krzysztofa             subst:pl:gen:f                       imię             both
    : 1535     Lublin   457240                  Lublino        subst:pl:gen:n:ncol         nazwa geograficzna             both
    : 1261      Marek   575102                    Marki          subst:pl:gen:n:pt         nazwa geograficzna             both
    : 1262      Marek   575102                    Marki          subst:pl:gen:n:pt         nazwa geograficzna     rzad.   both
    : ---------------------------------------------------------------------------
    :            WORD      FREQ       ROOT                DESCR            CLASS   QUALIFIER _merge
    : 15          rok  25419583     rok:s2  subst:sg:nom.acc:m3  nazwa pospolita  daw.|praw.   both
    : 877      ryzyko    770517     ryzyka       subst:sg:voc:f  nazwa pospolita        daw.   both
    : 353      sztuka   1685239      sztuk      subst:sg:gen:m3  nazwa pospolita        daw.   both
    : 1270  gospodarz    571939  gospodarz      subst:sg:nom:m1  nazwa pospolita       rzad.   both
    : 1269  gospodarz    571939  gospodarz      subst:sg:nom:m1  nazwa pospolita               both
    : 370   komentarz   1659615  komentarz  subst:sg:nom.acc:m3  nazwa pospolita       rzad.   both
    : 369   komentarz   1659615  komentarz  subst:sg:nom.acc:m3  nazwa pospolita               both
    : 313      lekarz   1854843     lekarz      subst:sg:nom:m1  nazwa pospolita               both
    : 314      lekarz   1854843     lekarz      subst:sg:nom:m1  nazwa pospolita       rzad.   both
    : 1062    piłkarz    658225    piłkarz      subst:sg:nom:m1  nazwa pospolita       rzad.   both
    : 1061    piłkarz    658225    piłkarz      subst:sg:nom:m1  nazwa pospolita               both
    : 638       sport   1056595   sport:s1  subst:sg:nom.acc:m3  nazwa pospolita               both
    : 639       sport   1056595   sport:s2  subst:sg:nom.acc:m3  nazwa pospolita       rzad.   both
    : 640       sport   1056595   sport:s2      subst:sg:nom:m2  nazwa pospolita               both
    : 1044   żołnierz    667685   żołnierz      subst:sg:nom:m1  nazwa pospolita               both
    : 1045   żołnierz    667685   żołnierz      subst:sg:nom:m1  nazwa pospolita       rzad.   both
    : ===========================================================================
    : s0001_verbs_legal_unique_sgjp_clean_filt
    : ===========================================================================
    : idx count: 1022
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ---------------------------------------------------------------------------
    :             WORD    FREQ        ROOT            DESCR CLASS QUALIFIER _merge
    : 1028  akceptować  220664  akceptować       inf:imperf                   both
    : 878   analizować  274534  analizować       inf:imperf                   both
    : 757     atakować  326561    atakować       inf:imperf                   both
    : 1164   awansować  184924   awansować  inf:imperf.perf                   both
    : 393        badać  660357       badać       inf:imperf                   both
    : 410        bawić  646081       bawić       inf:imperf                   both
    : 295          bać  885991         bać       inf:imperf                   both
    : 945         biec  245891        biec       inf:imperf                   both
    : 693       biegać  360340      biegać       inf:imperf                   both
    : 971     blokować  235861    blokować       inf:imperf                   both
    : 547        boleć  469296    boleć:v1       inf:imperf                   both
    : 548        boleć  469296    boleć:v2       inf:imperf                   both
    : 268     brakować  953667    brakować       inf:imperf                   both
    : 481       bronić  534274      bronić       inf:imperf                   both
    : 455      brzmieć  579650  brzmieć:v1       inf:imperf                   both
    : 456      brzmieć  579650  brzmieć:v2       inf:imperf           rzad.   both
    : ---------------------------------------------------------------------------
    :            WORD     FREQ        ROOT       DESCR CLASS QUALIFIER _merge
    : 929     ćwiczyć   253891     ćwiczyć  inf:imperf                   both
    : 1086    ładować   203785  ładować:v1  inf:imperf                   both
    : 1087    ładować   203785  ładować:v2  inf:imperf         przest.   both
    : 882       łamać   271379       łamać  inf:imperf                   both
    : 1168      łapać   184021       łapać  inf:imperf                   both
    : 244      łączyć  1028040      łączyć  inf:imperf                   both
    : 922     ściągać   256064     ściągać  inf:imperf                   both
    : 799    ściągnąć   306188    ściągnąć    inf:perf                   both
    : 934     śledzić   250270     śledzić  inf:imperf                   both
    : 1052      śmiać   212298       śmiać  inf:imperf                   both
    : 539     śpiewać   482299     śpiewać  inf:imperf                   both
    : 247   świadczyć  1025531   świadczyć  inf:imperf                   both
    : 1014    świecić   222708     świecić  inf:imperf                   both
    : 921     żałować   256222     żałować  inf:imperf                   both
    : 314      życzyć   825599      życzyć  inf:imperf                   both
    : 931       żądać   251486       żądać  inf:imperf                   both
    : ===========================================================================
    : s0001_verbs_legal_unique_sgjp_dirty_filt
    : ===========================================================================
    : idx count: 149
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ---------------------------------------------------------------------------
    :           WORD       FREQ    ROOT                         DESCR            CLASS QUALIFIER _merge
    : 555        bić     463141   bicie           subst:pl:gen:n:ncol  nazwa pospolita             both
    : 556        bić     463141     bić       ger:pl:gen:n:imperf:aff                              both
    : 557        bić     463141     bić                    inf:imperf                              both
    : 55        brać    2467720  bracić            impt:sg:sec:imperf                       daw.   both
    : 57        brać    2467720  brać:s                subst:sg:nom:f  nazwa pospolita             both
    : 56        brać    2467720  brać:s                subst:sg:acc:f  nazwa pospolita             both
    : 58        brać    2467720  brać:v                    inf:imperf                              both
    : 0          być  163773312   bycie           subst:pl:gen:n:ncol  nazwa pospolita             both
    : 1          być  163773312     być       ger:pl:gen:n:imperf:aff                              both
    : 993    byliśmy     228192     być        praet:pl:m1:pri:imperf                              both
    : 542      byłam     474827     być         praet:sg:f:pri:imperf                              both
    : 12      będzie    5966505     być          bedzie:sg:ter:imperf                              both
    : 2          być  163773312     być                    inf:imperf                              both
    : 887      byłem     269614     być  praet:sg:m1.m2.m3:pri:imperf                              both
    : 1024  chciałam     220808  chcieć         praet:sg:f:pri:imperf                              both
    : 8       chcieć    9997827  chcieć                    inf:imperf                              both
    : ---------------------------------------------------------------------------
    :         WORD     FREQ      ROOT                    DESCR            CLASS QUALIFIER _merge
    : 1124   zajść   194646  zajść:v1                 inf:perf                              both
    : 1123   zajść   194646  zajść:v1    ger:pl:gen:n:perf:aff                              both
    : 1126   zajść   194646  zajść:v2                 inf:perf                    przest.   both
    : 1125   zajść   194646  zajść:v2    ger:pl:gen:n:perf:aff                              both
    : 120   zdobyć  1619818  zdobycie      subst:pl:gen:n:ncol  nazwa pospolita             both
    : 122   zdobyć  1619818    zdobyć                 inf:perf                              both
    : 121   zdobyć  1619818    zdobyć    ger:pl:gen:n:perf:aff                              both
    : 1062   zejść   207832   zejście      subst:pl:gen:n:ncol  nazwa pospolita             both
    : 1065   zejść   207832     zejść                 inf:perf                      rzad.   both
    : 1064   zejść   207832     zejść                 inf:perf                              both
    : 1063   zejść   207832     zejść    ger:pl:gen:n:perf:aff                              both
    : 31      znać  3474324    znać:v                     pred                              both
    : 32      znać  3474324    znać:v               inf:imperf                              both
    : 94       żyć  1924284     życie      subst:pl:gen:n:ncol  nazwa pospolita             both
    : 96       żyć  1924284       żyć               inf:imperf                              both
    : 95       żyć  1924284       żyć  ger:pl:gen:n:imperf:aff                              both
    :
    :END:

*** DONE Checkup 03: Count

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

print( "="*75 )
print( "s0001_nouns_legal_unique_sgjp_clean_filt: " + str( len( s0001_nouns_legal_unique_sgjp_clean_filt["WORD"].unique() ) ) )
print( "s0001_nouns_legal_unique_sgjp_dirty_filt: " + str( len( s0001_nouns_legal_unique_sgjp_dirty_filt["WORD"].unique() ) ) )
print( "="*75 )
print( "s0001_verbs_legal_unique_sgjp_clean_filt: " + str( len( s0001_verbs_legal_unique_sgjp_clean_filt["WORD"].unique() ) ) )
print( "s0001_verbs_legal_unique_sgjp_dirty_filt: " + str( len( s0001_verbs_legal_unique_sgjp_dirty_filt["WORD"].unique() ) ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[33]:
    # output
    : ===========================================================================
    : s0001_nouns_legal_unique_sgjp_clean_filt: 839
    : s0001_nouns_legal_unique_sgjp_dirty_filt: 273
    : ===========================================================================
    : s0001_verbs_legal_unique_sgjp_clean_filt: 922
    : s0001_verbs_legal_unique_sgjp_dirty_filt: 64
    :
    :END:

*** DONE Sort by =FREQ=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

s0001_nouns_legal_unique_sgjp_clean_filt.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0001_verbs_legal_unique_sgjp_clean_filt.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[34]:
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0001.py

df_to_xlsx( df_data=s0001_nouns_legal_unique_sgjp_clean_filt, df_name="s0001_nouns_legal_unique_sgjp_clean_filt", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0001_nouns_legal_unique_sgjp_dirty_filt, df_name="s0001_nouns_legal_unique_sgjp_dirty_filt", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0001_verbs_legal_unique_sgjp_clean_filt, df_name="s0001_verbs_legal_unique_sgjp_clean_filt", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0001_verbs_legal_unique_sgjp_dirty_filt, df_name="s0001_verbs_legal_unique_sgjp_dirty_filt", df_path="data_out", add_time=False, verbose=1, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[35]:
    # output
    : Saving DataFrame as: data_out/s0001_nouns_legal_unique_sgjp_clean_filt.xlsx
    : Saving DataFrame as: data_out/s0001_nouns_legal_unique_sgjp_dirty_filt.xlsx
    : Saving DataFrame as: data_out/s0001_verbs_legal_unique_sgjp_clean_filt.xlsx
    : Saving DataFrame as: data_out/s0001_verbs_legal_unique_sgjp_dirty_filt.xlsx
    :
    :END:

* DONE Stage 0002: Introduce grammatical gender class
** Proc 00: Load
*** FIX! Load

    - [ ] possibly here NaNs are re-introduced!

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

s0001_nouns_legal_unique_sgjp_clean_filt = pd.read_excel( "./data_out/s0001_nouns_legal_unique_sgjp_clean_filt.xlsx", ignore_index=True, )
s0001_nouns_legal_unique_sgjp_dirty_filt = pd.read_excel( "./data_out/s0001_nouns_legal_unique_sgjp_dirty_filt.xlsx", ignore_index=True, )
s0001_verbs_legal_unique_sgjp_clean_filt = pd.read_excel( "./data_out/s0001_verbs_legal_unique_sgjp_clean_filt.xlsx", ignore_index=True, )
s0001_verbs_legal_unique_sgjp_dirty_filt = pd.read_excel( "./data_out/s0001_verbs_legal_unique_sgjp_dirty_filt.xlsx", ignore_index=True, )

s0001_nouns_legal_unique_sgjp_clean_filt = s0001_nouns_legal_unique_sgjp_clean_filt.replace( np.nan, "", regex=True )
s0001_nouns_legal_unique_sgjp_dirty_filt = s0001_nouns_legal_unique_sgjp_dirty_filt.replace( np.nan, "", regex=True )
s0001_verbs_legal_unique_sgjp_clean_filt = s0001_verbs_legal_unique_sgjp_clean_filt.replace( np.nan, "", regex=True )
s0001_verbs_legal_unique_sgjp_dirty_filt = s0001_verbs_legal_unique_sgjp_dirty_filt.replace( np.nan, "", regex=True )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[36]:
    :END:

** Proc 01: Split =nouns= by the grammatical gender class
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

s0002_nouns_gramGen = s0001_nouns_legal_unique_sgjp_clean_filt.copy()
s0002_verbs_gramGen = s0001_verbs_legal_unique_sgjp_clean_filt.copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[37]:
    :END:

*** DONE Sort by =FREQ=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

s0002_nouns_gramGen.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0002_verbs_gramGen.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[38]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen,   s0002_verbs_gramGen,  ]
df_info = [ "s0002_nouns_gramGen", "s0002_verbs_gramGen", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[39]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen
    : ===========================================================================
    : idx count: 996
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge
    : 20    praca  11797326    praca               subst:sg:nom:f  nazwa pospolita             both
    : 27      raz  11407991   raz:s1          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 28      raz  11407991   raz:s2          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 29   strona  11008323   strona               subst:sg:nom:f  nazwa pospolita             both
    : 30  miejsce  10632564  miejsce  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
    : 31    osoba  10547308    osoba               subst:sg:nom:f  nazwa pospolita             both
    : 37  dziecko   8604939  dziecko   subst:sg:nom.acc.voc:n:col  nazwa pospolita             both
    : 38    temat   8470486    temat          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 42    firma   7855864    firma               subst:sg:nom:f  nazwa pospolita             both
    : 45    życie   7372748     żyto          subst:sg:loc:n:ncol  nazwa pospolita             both
    : 43    życie   7372748    życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
    : 46   sprawa   6925157   sprawa               subst:sg:nom:f  nazwa pospolita             both
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT                        DESCR            CLASS QUALIFIER _merge
    : 1533  społeczność  457754  społeczność               subst:sg:nom:f  nazwa pospolita             both
    : 1532  społeczność  457754  społeczność               subst:sg:acc:f  nazwa pospolita             both
    : 1540       profil  456515       profil          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1541       aukcja  456430       aukcja               subst:sg:nom:f  nazwa pospolita   przest.   both
    : 1542     widzenie  455969     widzenie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both
    : 1544        wizja  455469        wizja               subst:sg:nom:f  nazwa pospolita             both
    : 1545       tabela  455112       tabela               subst:sg:nom:f  nazwa pospolita             both
    : 1546      wyjątek  455108      wyjątek          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1547       zarzut  454982       zarzut          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1548      wysiłek  452766      wysiłek          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1549        umysł  452428        umysł          subst:sg:nom.acc:m3  nazwa pospolita             both
    : 1550      magazyn  451186      magazyn          subst:sg:nom.acc:m3  nazwa pospolita             both
    : ===========================================================================
    : s0002_verbs_gramGen
    : ===========================================================================
    : idx count: 1022
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ       ROOT       DESCR CLASS QUALIFIER _merge
    : 7      zostać  11638052     zostać    inf:perf                   both
    : 10     musieć   8864472     musieć  inf:imperf                   both
    : 11      mówić   7085155      mówić  inf:imperf                   both
    : 13      robić   5517232      robić  inf:imperf                   both
    : 14     zrobić   5510726     zrobić    inf:perf                   both
    : 18  prowadzić   5123328  prowadzić  inf:imperf                   both
    : 19    chodzić   5053098    chodzić  inf:imperf                   both
    : 20    znaleźć   5000166    znaleźć    inf:perf                   both
    : 21    znaleźć   5000166    znaleźć    inf:perf         niezal.   both
    : 22        dać   4956082        dać    inf:perf                   both
    : 26      pisać   4120548      pisać  inf:imperf                   both
    : 27    widzieć   3846749    widzieć  inf:imperf                   both
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT            DESCR CLASS QUALIFIER _merge
    : 1159  zróżnicować  186027  zróżnicować         inf:perf                   both
    : 1160  wystartować  185848  wystartować         inf:perf                   both
    : 1161   oczyszczać  185779   oczyszczać       inf:imperf                   both
    : 1162      obniżać  185359      obniżać       inf:imperf                   both
    : 1163    pokonywać  185354    pokonywać       inf:imperf                   both
    : 1164    awansować  184924    awansować  inf:imperf.perf                   both
    : 1165   wychowywać  184514   wychowywać       inf:imperf                   both
    : 1166   reklamować  184285   reklamować       inf:imperf                   both
    : 1167     dozwolić  184042     dozwolić         inf:perf                   both
    : 1168        łapać  184021        łapać       inf:imperf                   both
    : 1169     zachęcić  184009     zachęcić         inf:perf                   both
    : 1170    poświęcać  183935    poświęcać       inf:imperf                   both
    :
    :END:

*** DONE Classify (split)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

gramGen_m_regexp_str = ":m1$|:m2$|:m3$|:m1:|:m2:|:m3:"
gramGen_f_regexp_str = ":f$|:f:"
gramGen_n_regexp_str = ":n$|:n:"

gramGen_m_mask = s0002_nouns_gramGen[ "DESCR" ].str.contains( gramGen_m_regexp_str, regex=True )
gramGen_f_mask = s0002_nouns_gramGen[ "DESCR" ].str.contains( gramGen_f_regexp_str, regex=True )
gramGen_n_mask = s0002_nouns_gramGen[ "DESCR" ].str.contains( gramGen_n_regexp_str, regex=True )

# s0002_nouns_gramGen.insert(loc=len(s0002_nouns_gramGen.columns), column="M", value=gramGen_m_mask)
# s0002_nouns_gramGen.insert(loc=len(s0002_nouns_gramGen.columns), column="F", value=gramGen_f_mask)
# s0002_nouns_gramGen.insert(loc=len(s0002_nouns_gramGen.columns), column="N", value=gramGen_n_mask)

s0002_nouns_gramGen["M"] = gramGen_m_mask
s0002_nouns_gramGen["F"] = gramGen_f_mask
s0002_nouns_gramGen["N"] = gramGen_n_mask

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[40]:
    :END:

*** DONE Checkup 01: ~s0002_nouns_gramGen_0~ (unclasified)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen,  ]
df_info = [ "s0002_nouns_gramGen", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[41]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen
    : ===========================================================================
    : idx count: 996
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 20    praca  11797326    praca               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 27      raz  11407991   raz:s1          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 28      raz  11407991   raz:s2          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 29   strona  11008323   strona               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 30  miejsce  10632564  miejsce  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 31    osoba  10547308    osoba               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 37  dziecko   8604939  dziecko   subst:sg:nom.acc.voc:n:col  nazwa pospolita             both  False  False   True
    : 38    temat   8470486    temat          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 42    firma   7855864    firma               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 45    życie   7372748     żyto          subst:sg:loc:n:ncol  nazwa pospolita             both  False  False   True
    : 43    życie   7372748    życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 46   sprawa   6925157   sprawa               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 1533  społeczność  457754  społeczność               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1532  społeczność  457754  społeczność               subst:sg:acc:f  nazwa pospolita             both  False   True  False
    : 1540       profil  456515       profil          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1541       aukcja  456430       aukcja               subst:sg:nom:f  nazwa pospolita   przest.   both  False   True  False
    : 1542     widzenie  455969     widzenie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 1544        wizja  455469        wizja               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1545       tabela  455112       tabela               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1546      wyjątek  455108      wyjątek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1547       zarzut  454982       zarzut          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1548      wysiłek  452766      wysiłek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1549        umysł  452428        umysł          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1550      magazyn  451186      magazyn          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    :
    :END:

*** DONE Isolate unclasified (=0=), classified unambiguously (=1=) and ambiguously (=2=)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

s0002_nouns_gramGen_0 = s0002_nouns_gramGen[ s0002_nouns_gramGen[["M","F","N"]].sum(axis=1) == 0 ]
s0002_nouns_gramGen_1 = s0002_nouns_gramGen[ s0002_nouns_gramGen[["M","F","N"]].sum(axis=1) == 1 ]
s0002_nouns_gramGen_2 = s0002_nouns_gramGen[ s0002_nouns_gramGen[["M","F","N"]].sum(axis=1) >= 2 ]
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[42]:
    :END:

*** DONE Checkup 00: Check classification specificity

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

# print( "Is the classification complete?: " + str(s0002_nouns_gramGen_1[["M","F","N"]].any(axis=1).all(axis=0)) )
print( "Is the classification perfectly specific?: " + str(s0002_nouns_gramGen_1[["M","F","N"]].sum(axis=1).isin([1]).all(axis=0)) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[44]:
    # output
    : Is the classification perfectly specific?: True
    :
    :END:

*** DONE Checkup 01: ~s0002_nouns_gramGen_0~ (unclasified)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen_0,  ]
df_info = [ "s0002_nouns_gramGen_0", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[45]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen_0
    : ===========================================================================
    : idx count: 0  []
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge, M, F, N]
    : Index: []
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge, M, F, N]
    : Index: []
    :
    :END:

*** DONE Checkup 02: ~s0002_nouns_gramGen_1~ (classified unambiguously)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen_1,  ]
df_info = [ "s0002_nouns_gramGen_1", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[46]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen_1
    : ===========================================================================
    : idx count: 996
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 20    praca  11797326    praca               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 27      raz  11407991   raz:s1          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 28      raz  11407991   raz:s2          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 29   strona  11008323   strona               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 30  miejsce  10632564  miejsce  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 31    osoba  10547308    osoba               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 37  dziecko   8604939  dziecko   subst:sg:nom.acc.voc:n:col  nazwa pospolita             both  False  False   True
    : 38    temat   8470486    temat          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 42    firma   7855864    firma               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 45    życie   7372748     żyto          subst:sg:loc:n:ncol  nazwa pospolita             both  False  False   True
    : 43    życie   7372748    życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 46   sprawa   6925157   sprawa               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 1533  społeczność  457754  społeczność               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1532  społeczność  457754  społeczność               subst:sg:acc:f  nazwa pospolita             both  False   True  False
    : 1540       profil  456515       profil          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1541       aukcja  456430       aukcja               subst:sg:nom:f  nazwa pospolita   przest.   both  False   True  False
    : 1542     widzenie  455969     widzenie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 1544        wizja  455469        wizja               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1545       tabela  455112       tabela               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1546      wyjątek  455108      wyjątek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1547       zarzut  454982       zarzut          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1548      wysiłek  452766      wysiłek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1549        umysł  452428        umysł          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1550      magazyn  451186      magazyn          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    :
    :END:

*** DONE Checkup 03: ~s0002_nouns_gramGen_2~ (classified ambiguously)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen_2,  ]
df_info = [ "s0002_nouns_gramGen_2", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[47]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen_2
    : ===========================================================================
    : idx count: 0  []
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge, M, F, N]
    : Index: []
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge, M, F, N]
    : Index: []
    :
    :END:

** Proc 02: Drop unnecessary duplicates and obsolete columns
*** DONE Re-initialize (copy) =nouns= and =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

s0002_nouns_gramGen_1_clean = s0002_nouns_gramGen_1.copy()
s0002_nouns_gramGen_1_dirty = pd.DataFrame( columns=s0002_nouns_gramGen_1_clean.columns.values, )

s0002_verbs_gramGen_1_clean = s0002_verbs_gramGen
s0002_verbs_gramGen_1_dirty = pd.DataFrame( columns=s0002_verbs_gramGen_1_clean.columns.values, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[48]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen_1_clean,   s0002_nouns_gramGen_1_dirty,  ]
df_info = [ "s0002_nouns_gramGen_1_clean", "s0002_nouns_gramGen_1_dirty", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[49]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen_1_clean
    : ===========================================================================
    : idx count: 996
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 20    praca  11797326    praca               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 27      raz  11407991   raz:s1          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 28      raz  11407991   raz:s2          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 29   strona  11008323   strona               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 30  miejsce  10632564  miejsce  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 31    osoba  10547308    osoba               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 37  dziecko   8604939  dziecko   subst:sg:nom.acc.voc:n:col  nazwa pospolita             both  False  False   True
    : 38    temat   8470486    temat          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 42    firma   7855864    firma               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 45    życie   7372748     żyto          subst:sg:loc:n:ncol  nazwa pospolita             both  False  False   True
    : 43    życie   7372748    życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 46   sprawa   6925157   sprawa               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 1533  społeczność  457754  społeczność               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1532  społeczność  457754  społeczność               subst:sg:acc:f  nazwa pospolita             both  False   True  False
    : 1540       profil  456515       profil          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1541       aukcja  456430       aukcja               subst:sg:nom:f  nazwa pospolita   przest.   both  False   True  False
    : 1542     widzenie  455969     widzenie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 1544        wizja  455469        wizja               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1545       tabela  455112       tabela               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1546      wyjątek  455108      wyjątek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1547       zarzut  454982       zarzut          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1548      wysiłek  452766      wysiłek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1549        umysł  452428        umysł          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1550      magazyn  451186      magazyn          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : ===========================================================================
    : s0002_nouns_gramGen_1_dirty
    : ===========================================================================
    : idx count: 0  []
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge, M, F, N]
    : Index: []
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge, M, F, N]
    : Index: []
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_verbs_gramGen_1_clean,   s0002_verbs_gramGen_1_dirty,  ]
df_info = [ "s0002_verbs_gramGen_1_clean", "s0002_verbs_gramGen_1_dirty", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[50]:
    # output
    : ===========================================================================
    : s0002_verbs_gramGen_1_clean
    : ===========================================================================
    : idx count: 1022
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ       ROOT       DESCR CLASS QUALIFIER _merge
    : 7      zostać  11638052     zostać    inf:perf                   both
    : 10     musieć   8864472     musieć  inf:imperf                   both
    : 11      mówić   7085155      mówić  inf:imperf                   both
    : 13      robić   5517232      robić  inf:imperf                   both
    : 14     zrobić   5510726     zrobić    inf:perf                   both
    : 18  prowadzić   5123328  prowadzić  inf:imperf                   both
    : 19    chodzić   5053098    chodzić  inf:imperf                   both
    : 20    znaleźć   5000166    znaleźć    inf:perf                   both
    : 21    znaleźć   5000166    znaleźć    inf:perf         niezal.   both
    : 22        dać   4956082        dać    inf:perf                   both
    : 26      pisać   4120548      pisać  inf:imperf                   both
    : 27    widzieć   3846749    widzieć  inf:imperf                   both
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT            DESCR CLASS QUALIFIER _merge
    : 1159  zróżnicować  186027  zróżnicować         inf:perf                   both
    : 1160  wystartować  185848  wystartować         inf:perf                   both
    : 1161   oczyszczać  185779   oczyszczać       inf:imperf                   both
    : 1162      obniżać  185359      obniżać       inf:imperf                   both
    : 1163    pokonywać  185354    pokonywać       inf:imperf                   both
    : 1164    awansować  184924    awansować  inf:imperf.perf                   both
    : 1165   wychowywać  184514   wychowywać       inf:imperf                   both
    : 1166   reklamować  184285   reklamować       inf:imperf                   both
    : 1167     dozwolić  184042     dozwolić         inf:perf                   both
    : 1168        łapać  184021        łapać       inf:imperf                   both
    : 1169     zachęcić  184009     zachęcić         inf:perf                   both
    : 1170    poświęcać  183935    poświęcać       inf:imperf                   both
    : ===========================================================================
    : s0002_verbs_gramGen_1_dirty
    : ===========================================================================
    : idx count: 0  []
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge]
    : Index: []
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge]
    : Index: []
    :
    :END:

*** DONE Drop the easy cases =nouns=

    Drop dupes where possible (wherever there is no confusion with
    respect to =M=, =F= and =N=)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_data=s0002_nouns_gramGen_1_clean
subset=["WORD","M","F","N"]
keep="first"
n_samp=8
verbose=2

s0002_nouns_gramGen_1_clean, tmp_drop = df_dupes( df_data, subset, keep, n_samp, verbose, )
s0002_nouns_gramGen_1_dirty = pd.concat( [ s0002_nouns_gramGen_1_dirty, tmp_drop, ], axis=0, ignore_index=False, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[51]:
    # output
    : ===========================================================================
    : Got: 996 words (rows).
    : ===========================================================================
    : KEEP: 857 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :        WORD      FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 20    praca  11797326    praca               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 27      raz  11407991   raz:s1          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 29   strona  11008323   strona               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 30  miejsce  10632564  miejsce  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 31    osoba  10547308    osoba               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 37  dziecko   8604939  dziecko   subst:sg:nom.acc.voc:n:col  nazwa pospolita             both  False  False   True
    : 38    temat   8470486    temat          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 42    firma   7855864    firma               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : ===========================================================================
    : DROP: 139 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :           WORD      FREQ       ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 28         raz  11407991     raz:s2          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 43       życie   7372748      życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 80       część   4985267      część               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 91       pomoc   4527701      pomoc               subst:sg:acc:f  nazwa pospolita             both  False   True  False
    : 96   możliwość   4339202  możliwość               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 100      rzecz   4304628      rzecz               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 133       pani   3161200       pani               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 132       pani   3161200       pani               subst:sg:gen:f  nazwa pospolita             both  False   True  False
    :
    :END:


*** DONE Drop the easy cases =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_data=s0002_verbs_gramGen_1_clean
subset=["WORD",]
keep="first"
n_samp=8
verbose=2

s0002_verbs_gramGen_1_clean, tmp_drop = df_dupes( df_data, subset, keep, n_samp, verbose, )
s0002_verbs_gramGen_1_dirty = pd.concat( [ s0002_verbs_gramGen_1_dirty, tmp_drop, ], axis=0, ignore_index=False, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[52]:
    # output
    : ===========================================================================
    : Got: 1022 words (rows).
    : ===========================================================================
    : KEEP: 922 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :          WORD      FREQ       ROOT       DESCR CLASS QUALIFIER _merge
    : 7      zostać  11638052     zostać    inf:perf                   both
    : 10     musieć   8864472     musieć  inf:imperf                   both
    : 11      mówić   7085155      mówić  inf:imperf                   both
    : 13      robić   5517232      robić  inf:imperf                   both
    : 14     zrobić   5510726     zrobić    inf:perf                   both
    : 18  prowadzić   5123328  prowadzić  inf:imperf                   both
    : 19    chodzić   5053098    chodzić  inf:imperf                   both
    : 20    znaleźć   5000166    znaleźć    inf:perf                   both
    : ===========================================================================
    : DROP: 100 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :         WORD     FREQ         ROOT            DESCR CLASS QUALIFIER _merge
    : 21   znaleźć  5000166      znaleźć         inf:perf         niezal.   both
    : 28  posiadać  3843145  posiadać:v1       inf:imperf                   both
    : 47  wyglądać  2650881  wyglądać:v3       inf:imperf            daw.   both
    : 45  wyglądać  2650881  wyglądać:v1       inf:imperf                   both
    : 69  potrafić  2219880  potrafić:v1  inf:imperf.perf            daw.   both
    : 74     wziąć  2119845        wziąć         inf:perf           rzad.   both
    : 77  pozwalać  2098513  pozwalać:v2       inf:imperf                   both
    : 91     kupić  2022916     kupić:v2       inf:imperf         przest.   both
    :
    :END:

*** DONE Verify before =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

test = s0002_nouns_gramGen_1_clean["WORD"] == s0002_nouns_gramGen_1_clean["ROOT"].str.split(":",1,True)[0]
print( "Checking ROOT and WORD consistency for =nouns= BEFORE cleanup." )
print( "It is not crucial to get the \"True\" value here now." )
print( "Checkup result: " + str( test.all() ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[60]:
    # output
    : Checking ROOT and WORD consistency BEFORE cleanup.
    : It is not crucial to get the "True" value here now.
    : Checkup result: False
    :
    :END:

*** CNCL Verify before =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

test = s0002_verbs_gramGen_1_clean["WORD"] == s0002_verbs_gramGen_1_clean["ROOT"].str.split(":",1,True)[0]
print( "Checking ROOT and WORD consistency for =verbs= BEFORE cleanup." )
print( "It is not crucial to get the \"True\" value here now." )
print( "Checkup result: " + str( test.all() ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[62]:
    # output
    : Checking ROOT and WORD consistency for =verbs= BEFORE cleanup.
    : It is not crucial to get the "True" value here now.
    : Checkup result: True
    :
    :END:

*** DONE Mask rwos containing congruent =WORD= and =ROOT= for =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

cong_mask = {}

if not s0002_nouns_gramGen_1_clean.empty:
    cong_mask["clean"] = s0002_nouns_gramGen_1_clean["WORD"] == s0002_nouns_gramGen_1_clean["ROOT"].str.split(":",1,True)[0]
    print( "="*75 )
    print( "Incongurent CLEAN" )
    print( "-"*75 )
    print( s0002_nouns_gramGen_1_clean[ ~cong_mask["clean"] ] )

if not s0002_nouns_gramGen_1_dirty.empty:
    cong_mask["dirty"] = s0002_nouns_gramGen_1_dirty["WORD"] == s0002_nouns_gramGen_1_dirty["ROOT"].str.split(":",1,True)[0]
    print( "="*75 )
    print( "Incongurent DIRTY" )
    print( "-"*75 )
    print( s0002_nouns_gramGen_1_dirty[ ~cong_mask["dirty"] ] )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[63]:
    # output
    : ===========================================================================
    : Incongurent CLEAN
    : ---------------------------------------------------------------------------
    :           WORD     FREQ       ROOT                DESCR            CLASS QUALIFIER _merge      M      F      N
    : 45       życie  7372748       żyto  subst:sg:loc:n:ncol  nazwa pospolita             both  False  False   True
    : 185    badanie  2635110      badan      subst:sg:loc:m3  nazwa pospolita             both   True  False  False
    : 192       dana  2606457        dan      subst:sg:gen:m3  nazwa pospolita             both   True  False  False
    : 286      karta  1987204       kart  subst:sg:gen.acc:m2  nazwa pospolita      pot.   both   True  False  False
    : 302     muzyka  1889664      muzyk  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 470       pora  1382347     por:s2  subst:sg:gen.acc:m2  nazwa pospolita      bot.   both   True  False  False
    : 482   polityka  1357163    polityk  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 508       suma  1282709        sum  subst:sg:gen.acc:m2  nazwa pospolita             both   True  False  False
    : 518       pole  1273885       poła   subst:sg:dat.loc:f  nazwa pospolita             both  False   True  False
    : 627   praktyka  1075425    praktyk  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 727      marka   931486   marek:s2  subst:sg:gen.acc:m2  nazwa pospolita      bot.   both   True  False  False
    : 739   technika   916153    technik  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 779       para   877189     par:s1  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 791      morze   874268       mora   subst:sg:dat.loc:f  nazwa pospolita             both  False   True  False
    : 794      morze   874268        mór      subst:sg:voc:m3  nazwa pospolita             both   True  False  False
    : 825    wnętrze   834459  wnęter:s1      subst:sg:voc:m1  nazwa pospolita             both   True  False  False
    : 832     robota   814269   robot:s1  subst:sg:gen.acc:m2  nazwa pospolita             both   True  False  False
    : 1163      wino   607262       wina       subst:sg:voc:f  nazwa pospolita             both  False   True  False
    : 1371     ziemi   521277     ziemia   subst:sg:dat.loc:f  nazwa pospolita             both  False   True  False
    : 1406      ucho   506348       ucha       subst:sg:voc:f  nazwa pospolita    kulin.   both  False   True  False
    : 1410   ścieżka   503101    ścieżek      subst:sg:gen:m3  nazwa pospolita             both   True  False  False
    : 1491     ramię   478755      ramia       subst:sg:acc:f  nazwa pospolita      bot.   both  False   True  False
    : ===========================================================================
    : Incongurent DIRTY
    : ---------------------------------------------------------------------------
    :          WORD     FREQ       ROOT                DESCR            CLASS QUALIFIER _merge      M      F      N
    : 186   badanie  2635110      badan      subst:sg:voc:m3  nazwa pospolita             both   True  False  False
    : 471      pora  1382347     por:s2      subst:sg:gen:m3  nazwa pospolita      bot.   both   True  False  False
    : 469      pora  1382347     por:s1      subst:sg:gen:m3  nazwa pospolita             both   True  False  False
    : 726     marka   931486   marek:s1  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 728     marka   931486   marek:s2      subst:sg:gen:m3  nazwa pospolita      bot.   both   True  False  False
    : 793     morze   874268        mór      subst:sg:loc:m3  nazwa pospolita             both   True  False  False
    : 827   wnętrze   834459  wnęter:s2      subst:sg:voc:m2  nazwa pospolita             both   True  False  False
    : 826   wnętrze   834459  wnęter:s2      subst:sg:loc:m2  nazwa pospolita             both   True  False  False
    : 824   wnętrze   834459  wnęter:s1      subst:sg:loc:m1  nazwa pospolita             both   True  False  False
    : 834    robota   814269   robot:s2      subst:sg:gen:m3  nazwa pospolita             both   True  False  False
    : 833    robota   814269   robot:s2  subst:sg:gen.acc:m2  nazwa pospolita             both   True  False  False
    : 1372    ziemi   521277     ziemia       subst:sg:gen:f  nazwa pospolita             both  False   True  False
    :
    :END:

*** DONE Move incongurent rows from =*_clean= to =*_dirty=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

# Lines order matters!
s0002_nouns_gramGen_1_dirty = pd.concat( [ s0002_nouns_gramGen_1_dirty, s0002_nouns_gramGen_1_clean[ ~cong_mask["clean"] ], ], axis=0, ignore_index=False, )
s0002_nouns_gramGen_1_clean = s0002_nouns_gramGen_1_clean[ cong_mask["clean"] ]
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[64]:
    :END:

*** DONE Verify after =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

test = s0002_nouns_gramGen_1_clean["WORD"] == s0002_nouns_gramGen_1_clean["ROOT"].str.split(":",1,True)[0]
print( "Checking ROOT and WORD consistency for =nouns= AFTER cleanup." )
print( "Expecting to get the \"True\" value here now." )
print( "Checkup result: " + str( test.all() ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[71]:
    # output
    : Checking ROOT and WORD consistency for =nouns= AFTER cleanup.
    : Expecting to get the "True" value here now.
    : Checkup result: True
    :
    :END:

*** DONE Verify after =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

test = s0002_verbs_gramGen_1_clean["WORD"] == s0002_verbs_gramGen_1_clean["ROOT"].str.split(":",1,True)[0]
print( "Checking ROOT and WORD consistency for =verbs= AFTER cleanup." )
print( "Expecting to get the \"True\" value here now." )
print( "Checkup result: " + str( test.all() ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[72]:
    # output
    : Checking ROOT and WORD consistency for =verbs= AFTER cleanup.
    : Expecting to get the "True" value here now.
    : Checkup result: True
    :
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen_1_clean,   s0002_nouns_gramGen_1_dirty,  ]
df_info = [ "s0002_nouns_gramGen_1_clean", "s0002_nouns_gramGen_1_dirty", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[73]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen_1_clean
    : ===========================================================================
    : idx count: 835
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ     ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 20    praca  11797326    praca               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 27      raz  11407991   raz:s1          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 29   strona  11008323   strona               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 30  miejsce  10632564  miejsce  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 31    osoba  10547308    osoba               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 37  dziecko   8604939  dziecko   subst:sg:nom.acc.voc:n:col  nazwa pospolita             both  False  False   True
    : 38    temat   8470486    temat          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 42    firma   7855864    firma               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 46   sprawa   6925157   sprawa               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 51  problem   6737668  problem          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 59      pan   6085885      pan              subst:sg:nom:m1  nazwa pospolita             both   True  False  False
    : 60      dom   5879198      dom          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : ---------------------------------------------------------------------------
    :               WORD    FREQ          ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 1531  porozumienie  458259  porozumienie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 1533   społeczność  457754   społeczność               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1540        profil  456515        profil          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1541        aukcja  456430        aukcja               subst:sg:nom:f  nazwa pospolita   przest.   both  False   True  False
    : 1542      widzenie  455969      widzenie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 1544         wizja  455469         wizja               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1545        tabela  455112        tabela               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 1546       wyjątek  455108       wyjątek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1547        zarzut  454982        zarzut          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1548       wysiłek  452766       wysiłek          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1549         umysł  452428         umysł          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 1550       magazyn  451186       magazyn          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : ===========================================================================
    : s0002_nouns_gramGen_1_dirty
    : ===========================================================================
    : idx count: 161
    : row count: 10  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ---------------------------------------------------------------------------
    :           WORD      FREQ       ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 28         raz  11407991     raz:s2          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 43       życie   7372748      życie  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 80       część   4985267      część               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 91       pomoc   4527701      pomoc               subst:sg:acc:f  nazwa pospolita             both  False   True  False
    : 96   możliwość   4339202  możliwość               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 100      rzecz   4304628      rzecz               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 133       pani   3161200       pani               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 132       pani   3161200       pani               subst:sg:gen:f  nazwa pospolita             both  False   True  False
    : 131       pani   3161200       pani           subst:sg:dat.loc:f  nazwa pospolita             both  False   True  False
    : 135     klient   3160855  klient:s1              subst:sg:nom:m1  nazwa pospolita             both   True  False  False
    : 141        typ   3042926     typ:s1          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 150      forum   2846323      forum          subst:sg:dat:n:ncol  nazwa pospolita             both  False  False   True
    : ---------------------------------------------------------------------------
    :           WORD    FREQ       ROOT                DESCR            CLASS QUALIFIER _merge      M      F      N
    : 727      marka  931486   marek:s2  subst:sg:gen.acc:m2  nazwa pospolita      bot.   both   True  False  False
    : 739   technika  916153    technik  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 779       para  877189     par:s1  subst:sg:gen.acc:m1  nazwa pospolita             both   True  False  False
    : 791      morze  874268       mora   subst:sg:dat.loc:f  nazwa pospolita             both  False   True  False
    : 794      morze  874268        mór      subst:sg:voc:m3  nazwa pospolita             both   True  False  False
    : 825    wnętrze  834459  wnęter:s1      subst:sg:voc:m1  nazwa pospolita             both   True  False  False
    : 832     robota  814269   robot:s1  subst:sg:gen.acc:m2  nazwa pospolita             both   True  False  False
    : 1163      wino  607262       wina       subst:sg:voc:f  nazwa pospolita             both  False   True  False
    : 1371     ziemi  521277     ziemia   subst:sg:dat.loc:f  nazwa pospolita             both  False   True  False
    : 1406      ucho  506348       ucha       subst:sg:voc:f  nazwa pospolita    kulin.   both  False   True  False
    : 1410   ścieżka  503101    ścieżek      subst:sg:gen:m3  nazwa pospolita             both   True  False  False
    : 1491     ramię  478755      ramia       subst:sg:acc:f  nazwa pospolita      bot.   both  False   True  False
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_verbs_gramGen_1_clean,   s0002_verbs_gramGen_1_dirty,  ]
df_info = [ "s0002_verbs_gramGen_1_clean", "s0002_verbs_gramGen_1_dirty", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[74]:
    # output
    : ===========================================================================
    : s0002_verbs_gramGen_1_clean
    : ===========================================================================
    : idx count: 922
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ         ROOT       DESCR CLASS QUALIFIER _merge
    : 7      zostać  11638052       zostać    inf:perf                   both
    : 10     musieć   8864472       musieć  inf:imperf                   both
    : 11      mówić   7085155        mówić  inf:imperf                   both
    : 13      robić   5517232        robić  inf:imperf                   both
    : 14     zrobić   5510726       zrobić    inf:perf                   both
    : 18  prowadzić   5123328    prowadzić  inf:imperf                   both
    : 19    chodzić   5053098      chodzić  inf:imperf                   both
    : 20    znaleźć   5000166      znaleźć    inf:perf                   both
    : 22        dać   4956082          dać    inf:perf                   both
    : 26      pisać   4120548        pisać  inf:imperf                   both
    : 27    widzieć   3846749      widzieć  inf:imperf                   both
    : 29   posiadać   3843145  posiadać:v2    inf:perf                   both
    : ---------------------------------------------------------------------------
    :              WORD    FREQ         ROOT            DESCR CLASS QUALIFIER _merge
    : 1159  zróżnicować  186027  zróżnicować         inf:perf                   both
    : 1160  wystartować  185848  wystartować         inf:perf                   both
    : 1161   oczyszczać  185779   oczyszczać       inf:imperf                   both
    : 1162      obniżać  185359      obniżać       inf:imperf                   both
    : 1163    pokonywać  185354    pokonywać       inf:imperf                   both
    : 1164    awansować  184924    awansować  inf:imperf.perf                   both
    : 1165   wychowywać  184514   wychowywać       inf:imperf                   both
    : 1166   reklamować  184285   reklamować       inf:imperf                   both
    : 1167     dozwolić  184042     dozwolić         inf:perf                   both
    : 1168        łapać  184021        łapać       inf:imperf                   both
    : 1169     zachęcić  184009     zachęcić         inf:perf                   both
    : 1170    poświęcać  183935    poświęcać       inf:imperf                   both
    : ===========================================================================
    : s0002_verbs_gramGen_1_dirty
    : ===========================================================================
    : idx count: 100
    : row count: 7  ['WORD', 'FREQ', 'ROOT', 'DESCR', 'CLASS', 'QUALIFIER', '_merge']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ         ROOT            DESCR CLASS QUALIFIER _merge
    : 21    znaleźć  5000166      znaleźć         inf:perf         niezal.   both
    : 28   posiadać  3843145  posiadać:v1       inf:imperf                   both
    : 47   wyglądać  2650881  wyglądać:v3       inf:imperf            daw.   both
    : 45   wyglądać  2650881  wyglądać:v1       inf:imperf                   both
    : 69   potrafić  2219880  potrafić:v1  inf:imperf.perf            daw.   both
    : 74      wziąć  2119845        wziąć         inf:perf           rzad.   both
    : 77   pozwalać  2098513  pozwalać:v2       inf:imperf                   both
    : 91      kupić  2022916     kupić:v2       inf:imperf         przest.   both
    : 115    dostać  1703547    dostać:v1         inf:perf                   both
    : 116    dostać  1703547    dostać:v2         inf:perf            daw.   both
    : 139    stawać  1395032    stawać:v2       inf:imperf                   both
    : 141    stawać  1395032    stawać:v4       inf:imperf           środ.   both
    : ---------------------------------------------------------------------------
    :               WORD    FREQ             ROOT            DESCR CLASS QUALIFIER _merge
    : 968          ważyć  236078         ważyć:v1  inf:imperf.perf                   both
    : 976        odmówić  233874       odmówić:v2         inf:perf                   both
    : 989   przysługiwać  230370  przysługiwać:v2       inf:imperf           rzad.   both
    : 998        dotykać  226800       dotykać:v1       inf:imperf                   both
    : 1047       poprzeć  215035       poprzeć:v2         inf:perf           rzad.   both
    : 1069          ciąć  206422          ciąć:v1         inf:perf         przest.   both
    : 1087       ładować  203785       ładować:v2       inf:imperf         przest.   both
    : 1093      schodzić  202142      schodzić:v1       inf:imperf                   both
    : 1101        znosić  199469        znosić:v2       inf:imperf                   both
    : 1107       ubiegać  198669       ubiegać:v1       inf:imperf                   both
    : 1133      przypaść  193245      przypaść:v2         inf:perf                   both
    : 1140      powracać  191762      powracać:v2       inf:imperf                   both
    :
    :END:

*** DONE Drop the remaining cases =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_data=s0002_nouns_gramGen_1_clean
subset=["WORD"]
keep="first"
n_samp=24
verbose=2

s0002_nouns_gramGen_1_clean, tmp_drop = df_dupes( df_data, subset, keep, n_samp, verbose, )
s0002_nouns_gramGen_1_dirty = pd.concat( [ s0002_nouns_gramGen_1_dirty, tmp_drop, ], axis=0, ignore_index=False, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[75]:
    # output
    : ===========================================================================
    : Got: 835 words (rows).
    : ===========================================================================
    : KEEP: 833 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :           WORD      FREQ        ROOT                        DESCR            CLASS QUALIFIER _merge      M      F      N
    : 20       praca  11797326       praca               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 27         raz  11407991      raz:s1          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 29      strona  11008323      strona               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 30     miejsce  10632564     miejsce  subst:sg:nom.acc.voc:n:ncol  nazwa pospolita             both  False  False   True
    : 31       osoba  10547308       osoba               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 37     dziecko   8604939     dziecko   subst:sg:nom.acc.voc:n:col  nazwa pospolita             both  False  False   True
    : 38       temat   8470486       temat          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 42       firma   7855864       firma               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 46      sprawa   6925157      sprawa               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 51     problem   6737668     problem          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 59         pan   6085885         pan              subst:sg:nom:m1  nazwa pospolita             both   True  False  False
    : 60         dom   5879198         dom          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 70      koniec   5523181      koniec          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 71      szkoła   5289751      szkoła               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 72         gra   5124178         gra               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 74     program   5094536     program          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 76  informacja   5013890  informacja               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 77         cel   5008658         cel          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 79       część   4985267       część               subst:sg:acc:f  nazwa pospolita             both  False   True  False
    : 85       świat   4895309       świat          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 86      system   4834915      system          subst:sg:nom.acc:m3  nazwa pospolita             both   True  False  False
    : 88       droga   4795287       droga               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 90       grupa   4533293       grupa               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : 92       pomoc   4527701       pomoc               subst:sg:nom:f  nazwa pospolita             both  False   True  False
    : ===========================================================================
    : DROP: 2 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :         WORD    FREQ       ROOT                                            DESCR            CLASS QUALIFIER _merge      M      F      N
    : 1162     pas  607297     pas:s3  subst:sg.pl:nom.gen.dat.acc.inst.loc.voc:n:ncol  nazwa pospolita     chor.   both  False  False   True
    : 1337  sędzia  539248  sędzia:s2                                   subst:sg:nom:f  nazwa pospolita             both  False   True  False
    :
    :END:

*** DONE Drop the remaining cases =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_data=s0002_verbs_gramGen_1_clean
subset=["WORD"]
keep="first"
n_samp=24
verbose=2

s0002_verbs_gramGen_1_clean, tmp_drop = df_dupes( df_data, subset, keep, n_samp, verbose, )
s0002_verbs_gramGen_1_dirty = pd.concat( [ s0002_verbs_gramGen_1_dirty, tmp_drop, ], axis=0, ignore_index=False, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[76]:
    # output
    : ===========================================================================
    : Got: 922 words (rows).
    : ===========================================================================
    : KEEP: 922 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    :          WORD      FREQ         ROOT       DESCR CLASS QUALIFIER _merge
    : 7      zostać  11638052       zostać    inf:perf                   both
    : 10     musieć   8864472       musieć  inf:imperf                   both
    : 11      mówić   7085155        mówić  inf:imperf                   both
    : 13      robić   5517232        robić  inf:imperf                   both
    : 14     zrobić   5510726       zrobić    inf:perf                   both
    : 18  prowadzić   5123328    prowadzić  inf:imperf                   both
    : 19    chodzić   5053098      chodzić  inf:imperf                   both
    : 20    znaleźć   5000166      znaleźć    inf:perf                   both
    : 22        dać   4956082          dać    inf:perf                   both
    : 26      pisać   4120548        pisać  inf:imperf                   both
    : 27    widzieć   3846749      widzieć  inf:imperf                   both
    : 29   posiadać   3843145  posiadać:v2    inf:perf                   both
    : 30    działać   3799657      działać  inf:imperf                   both
    : 33   dotyczyć   3449448     dotyczyć  inf:imperf         książk.   both
    : 34    istnieć   3366992      istnieć  inf:imperf                   both
    : 35     zacząć   3152661       zacząć    inf:perf                   both
    : 36      dawać   3146124        dawać  inf:imperf                   both
    : 37    wydawać   3128186      wydawać  inf:imperf                   both
    : 38    napisać   2994826      napisać    inf:perf                   both
    : 39    wykonać   2961504      wykonać    inf:perf                   both
    : 40       grać   2899777         grać  inf:imperf                   both
    : 41  znajdywać   2767568    znajdywać  inf:imperf           rzad.   both
    : 43        iść   2740949          iść  inf:imperf                   both
    : 44   zobaczyć   2705523     zobaczyć    inf:perf                   both
    : ===========================================================================
    : DROP: 0 words (rows).
    : keep=first
    : ---------------------------------------------------------------------------
    : sample:
    : ---------------------------------------------------------------------------
    : Empty DataFrame
    : Columns: [WORD, FREQ, ROOT, DESCR, CLASS, QUALIFIER, _merge]
    : Index: []
    :
    :END:

*** DONE Drop obsolete columns for =nouns= and =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

drop_nouns_col = [ "ROOT", "DESCR", "CLASS", "QUALIFIER", "_merge", ]
drop_verbs_col = [ "ROOT", "DESCR", "CLASS", "QUALIFIER", "_merge", ]

s0002_nouns_gramGen_1_clean_cols = s0002_nouns_gramGen_1_clean.drop(labels=drop_nouns_col, axis=1, inplace=False)
s0002_verbs_gramGen_1_clean_cols = s0002_verbs_gramGen_1_clean.drop(labels=drop_verbs_col, axis=1, inplace=False)
s0002_nouns_gramGen_1_dirty_cols = s0002_nouns_gramGen_1_dirty.drop(labels=drop_nouns_col, axis=1, inplace=False)
s0002_verbs_gramGen_1_dirty_cols = s0002_verbs_gramGen_1_dirty.drop(labels=drop_verbs_col, axis=1, inplace=False)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[77]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_nouns_gramGen_1_clean_cols,   s0002_nouns_gramGen_1_dirty_cols,  ]
df_info = [ "s0002_nouns_gramGen_1_clean_cols", "s0002_nouns_gramGen_1_dirty_cols", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[78]:
    # output
    : ===========================================================================
    : s0002_nouns_gramGen_1_clean_cols
    : ===========================================================================
    : idx count: 833
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :        WORD      FREQ      M      F      N
    : 20    praca  11797326  False   True  False
    : 27      raz  11407991   True  False  False
    : 29   strona  11008323  False   True  False
    : 30  miejsce  10632564  False  False   True
    : 31    osoba  10547308  False   True  False
    : 37  dziecko   8604939  False  False   True
    : 38    temat   8470486   True  False  False
    : 42    firma   7855864  False   True  False
    : 46   sprawa   6925157  False   True  False
    : 51  problem   6737668   True  False  False
    : 59      pan   6085885   True  False  False
    : 60      dom   5879198   True  False  False
    : ---------------------------------------------------------------------------
    :               WORD    FREQ      M      F      N
    : 1531  porozumienie  458259  False  False   True
    : 1533   społeczność  457754  False   True  False
    : 1540        profil  456515   True  False  False
    : 1541        aukcja  456430  False   True  False
    : 1542      widzenie  455969  False  False   True
    : 1544         wizja  455469  False   True  False
    : 1545        tabela  455112  False   True  False
    : 1546       wyjątek  455108   True  False  False
    : 1547        zarzut  454982   True  False  False
    : 1548       wysiłek  452766   True  False  False
    : 1549         umysł  452428   True  False  False
    : 1550       magazyn  451186   True  False  False
    : ===========================================================================
    : s0002_nouns_gramGen_1_dirty_cols
    : ===========================================================================
    : idx count: 163
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ---------------------------------------------------------------------------
    :           WORD      FREQ      M      F      N
    : 28         raz  11407991   True  False  False
    : 43       życie   7372748  False  False   True
    : 80       część   4985267  False   True  False
    : 91       pomoc   4527701  False   True  False
    : 96   możliwość   4339202  False   True  False
    : 100      rzecz   4304628  False   True  False
    : 133       pani   3161200  False   True  False
    : 132       pani   3161200  False   True  False
    : 131       pani   3161200  False   True  False
    : 135     klient   3160855   True  False  False
    : 141        typ   3042926   True  False  False
    : 150      forum   2846323  False  False   True
    : ---------------------------------------------------------------------------
    :          WORD    FREQ      M      F      N
    : 779      para  877189   True  False  False
    : 791     morze  874268  False   True  False
    : 794     morze  874268   True  False  False
    : 825   wnętrze  834459   True  False  False
    : 832    robota  814269   True  False  False
    : 1163     wino  607262  False   True  False
    : 1371    ziemi  521277  False   True  False
    : 1406     ucho  506348  False   True  False
    : 1410  ścieżka  503101   True  False  False
    : 1491    ramię  478755  False   True  False
    : 1162      pas  607297  False  False   True
    : 1337   sędzia  539248  False   True  False
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_list = [  s0002_verbs_gramGen_1_clean_cols,   s0002_verbs_gramGen_1_dirty_cols,  ]
df_info = [ "s0002_verbs_gramGen_1_clean_cols", "s0002_verbs_gramGen_1_dirty_cols", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[79]:
    # output
    : ===========================================================================
    : s0002_verbs_gramGen_1_clean_cols
    : ===========================================================================
    : idx count: 922
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ
    : 7      zostać  11638052
    : 10     musieć   8864472
    : 11      mówić   7085155
    : 13      robić   5517232
    : 14     zrobić   5510726
    : 18  prowadzić   5123328
    : 19    chodzić   5053098
    : 20    znaleźć   5000166
    : 22        dać   4956082
    : 26      pisać   4120548
    : 27    widzieć   3846749
    : 29   posiadać   3843145
    : ---------------------------------------------------------------------------
    :              WORD    FREQ
    : 1159  zróżnicować  186027
    : 1160  wystartować  185848
    : 1161   oczyszczać  185779
    : 1162      obniżać  185359
    : 1163    pokonywać  185354
    : 1164    awansować  184924
    : 1165   wychowywać  184514
    : 1166   reklamować  184285
    : 1167     dozwolić  184042
    : 1168        łapać  184021
    : 1169     zachęcić  184009
    : 1170    poświęcać  183935
    : ===========================================================================
    : s0002_verbs_gramGen_1_dirty_cols
    : ===========================================================================
    : idx count: 100
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ
    : 21    znaleźć  5000166
    : 28   posiadać  3843145
    : 47   wyglądać  2650881
    : 45   wyglądać  2650881
    : 69   potrafić  2219880
    : 74      wziąć  2119845
    : 77   pozwalać  2098513
    : 91      kupić  2022916
    : 115    dostać  1703547
    : 116    dostać  1703547
    : 139    stawać  1395032
    : 141    stawać  1395032
    : ---------------------------------------------------------------------------
    :               WORD    FREQ
    : 968          ważyć  236078
    : 976        odmówić  233874
    : 989   przysługiwać  230370
    : 998        dotykać  226800
    : 1047       poprzeć  215035
    : 1069          ciąć  206422
    : 1087       ładować  203785
    : 1093      schodzić  202142
    : 1101        znosić  199469
    : 1107       ubiegać  198669
    : 1133      przypaść  193245
    : 1140      powracać  191762
    :
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0002.py

df_to_xlsx( df_data=s0002_nouns_gramGen_1_clean_cols, df_name="s0002_nouns_gramGen_1_clean_cols", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0002_nouns_gramGen_1_dirty_cols, df_name="s0002_nouns_gramGen_1_dirty_cols", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0002_verbs_gramGen_1_clean_cols, df_name="s0002_verbs_gramGen_1_clean_cols", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0002_verbs_gramGen_1_dirty_cols, df_name="s0002_verbs_gramGen_1_dirty_cols", df_path="data_out", add_time=False, verbose=1, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[80]:
    # output
    : Saving DataFrame as: data_out/s0002_nouns_gramGen_1_clean_cols.xlsx
    : Saving DataFrame as: data_out/s0002_nouns_gramGen_1_dirty_cols.xlsx
    : Saving DataFrame as: data_out/s0002_verbs_gramGen_1_clean_cols.xlsx
    : Saving DataFrame as: data_out/s0002_verbs_gramGen_1_dirty_cols.xlsx
    :
    :END:

* DONE Stage 0003: Advanced cleanup and filtering
** Proc 00: Load
*** FIX! Load

    - [ ] possibly here NaNs are re-introduced!

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

s0002_nouns_gramGen_1_clean_cols = pd.read_excel( "./data_out/s0002_nouns_gramGen_1_clean_cols.xlsx", ignore_index=True, )
s0002_nouns_gramGen_1_dirty_cols = pd.read_excel( "./data_out/s0002_nouns_gramGen_1_dirty_cols.xlsx", ignore_index=True, )
s0002_verbs_gramGen_1_clean_cols = pd.read_excel( "./data_out/s0002_verbs_gramGen_1_clean_cols.xlsx", ignore_index=True, )
s0002_verbs_gramGen_1_dirty_cols = pd.read_excel( "./data_out/s0002_verbs_gramGen_1_dirty_cols.xlsx", ignore_index=True, )

s0002_nouns_gramGen_1_clean_cols = s0002_nouns_gramGen_1_clean_cols.replace( np.nan, "", regex=True )
s0002_nouns_gramGen_1_dirty_cols = s0002_nouns_gramGen_1_dirty_cols.replace( np.nan, "", regex=True )
s0002_verbs_gramGen_1_clean_cols = s0002_verbs_gramGen_1_clean_cols.replace( np.nan, "", regex=True )
s0002_verbs_gramGen_1_dirty_cols = s0002_verbs_gramGen_1_dirty_cols.replace( np.nan, "", regex=True )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[81]:
    :END:

** Proc 01: Filter =nouns= and =verbs= by the ~suffix~
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

from collections import OrderedDict

s0003_words = OrderedDict()
s0003_words["nouns"] = OrderedDict()
s0003_words["verbs"] = OrderedDict()

s0003_words["nouns"]["mas"] = OrderedDict()
s0003_words["nouns"]["fem"] = OrderedDict()
s0003_words["nouns"]["neu"] = OrderedDict()
s0003_words["verbs"]["any"] = OrderedDict()

s0003_words["nouns"]["mas"]["orig"] = s0002_nouns_gramGen_1_clean_cols[ s0002_nouns_gramGen_1_clean_cols["M"] ].copy()
s0003_words["nouns"]["fem"]["orig"] = s0002_nouns_gramGen_1_clean_cols[ s0002_nouns_gramGen_1_clean_cols["F"] ].copy()
s0003_words["nouns"]["neu"]["orig"] = s0002_nouns_gramGen_1_clean_cols[ s0002_nouns_gramGen_1_clean_cols["N"] ].copy()
s0003_words["verbs"]["any"]["orig"] = s0002_verbs_gramGen_1_clean_cols.copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[82]:
    :END:

*** DONE Sort by =FREQ=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

s0003_words["nouns"]["mas"]["orig"].sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0003_words["nouns"]["fem"]["orig"].sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0003_words["nouns"]["neu"]["orig"].sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0003_words["verbs"]["any"]["orig"].sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[83]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

df_list = [  s0003_words[ "nouns" ][ "mas" ][ "orig" ],   s0003_words[ "nouns" ][ "fem" ][ "orig" ],   s0003_words[ "nouns" ][ "neu" ][ "orig" ],   s0003_words[ "verbs" ][ "any" ][ "orig" ],  ]
df_info = [ "s0003_words[\"nouns\"][\"mas\"][\"orig\"]", "s0003_words[\"nouns\"][\"fem\"][\"orig\"]", "s0003_words[\"nouns\"][\"neu\"][\"orig\"]", "s0003_words[\"verbs\"][\"any\"][\"orig\"]", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[84]:
    # output
    : ===========================================================================
    : s0003_words["nouns"]["mas"]["orig"]
    : ===========================================================================
    : idx count: 392
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :         WORD      FREQ     M      F      N
    : 27       raz  11407991  True  False  False
    : 38     temat   8470486  True  False  False
    : 51   problem   6737668  True  False  False
    : 59       pan   6085885  True  False  False
    : 60       dom   5879198  True  False  False
    : 70    koniec   5523181  True  False  False
    : 74   program   5094536  True  False  False
    : 77       cel   5008658  True  False  False
    : 85     świat   4895309  True  False  False
    : 86    system   4834915  True  False  False
    : 101     stan   4287782  True  False  False
    : 102     kraj   4238464  True  False  False
    : ---------------------------------------------------------------------------
    :           WORD    FREQ     M      F      N
    : 1519  kontrakt  462062  True  False  False
    : 1521  dziennik  461403  True  False  False
    : 1524  odbiorca  459796  True  False  False
    : 1525  konflikt  459247  True  False  False
    : 1526       kąt  459211  True  False  False
    : 1529  przemysł  458537  True  False  False
    : 1540    profil  456515  True  False  False
    : 1546   wyjątek  455108  True  False  False
    : 1547    zarzut  454982  True  False  False
    : 1548   wysiłek  452766  True  False  False
    : 1549     umysł  452428  True  False  False
    : 1550   magazyn  451186  True  False  False
    : ===========================================================================
    : s0003_words["nouns"]["fem"]["orig"]
    : ===========================================================================
    : idx count: 333
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :           WORD      FREQ      M     F      N
    : 20       praca  11797326  False  True  False
    : 29      strona  11008323  False  True  False
    : 31       osoba  10547308  False  True  False
    : 42       firma   7855864  False  True  False
    : 46      sprawa   6925157  False  True  False
    : 71      szkoła   5289751  False  True  False
    : 72         gra   5124178  False  True  False
    : 76  informacja   5013890  False  True  False
    : 79       część   4985267  False  True  False
    : 88       droga   4795287  False  True  False
    : 90       grupa   4533293  False  True  False
    : 92       pomoc   4527701  False  True  False
    : ---------------------------------------------------------------------------
    :               WORD    FREQ      M     F      N
    : 1490        księga  479001  False  True  False
    : 1494       podłoga  478224  False  True  False
    : 1496      tematyka  477530  False  True  False
    : 1503   lokalizacja  474313  False  True  False
    : 1513  szczególność  466711  False  True  False
    : 1514          moda  466387  False  True  False
    : 1520       porażka  461987  False  True  False
    : 1527       tablica  458992  False  True  False
    : 1533   społeczność  457754  False  True  False
    : 1541        aukcja  456430  False  True  False
    : 1544         wizja  455469  False  True  False
    : 1545        tabela  455112  False  True  False
    : ===========================================================================
    : s0003_words["nouns"]["neu"]["orig"]
    : ===========================================================================
    : idx count: 108
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :             WORD      FREQ      M      F     N
    : 30       miejsce  10632564  False  False  True
    : 37       dziecko   8604939  False  False  True
    : 110    spotkanie   3895707  False  False  True
    : 115      pytanie   3736580  False  False  True
    : 122        słowo   3474967  False  False  True
    : 138       źródło   3149575  False  False  True
    : 151        forum   2846323  False  False  True
    : 156          oko   2831302  False  False  True
    : 164       zdanie   2787483  False  False  True
    : 187      badanie   2635110  False  False  True
    : 222      zadanie   2320897  False  False  True
    : 257  rozwiązanie   2184542  False  False  True
    : ---------------------------------------------------------------------------
    :                  WORD    FREQ      M      F     N
    : 1407             ucho  506348  False  False  True
    : 1427      przekonanie  497722  False  False  True
    : 1437         lotnisko  495671  False  False  True
    : 1442  przedsięwzięcie  493229  False  False  True
    : 1450       ogłoszenie  492210  False  False  True
    : 1474        pokolenie  482478  False  False  True
    : 1485           drewno  480126  False  False  True
    : 1487         jedzenie  479058  False  False  True
    : 1492            ramię  478755  False  False  True
    : 1510            łóżko  467525  False  False  True
    : 1531     porozumienie  458259  False  False  True
    : 1542         widzenie  455969  False  False  True
    : ===========================================================================
    : s0003_words["verbs"]["any"]["orig"]
    : ===========================================================================
    : idx count: 922
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ
    : 7      zostać  11638052
    : 10     musieć   8864472
    : 11      mówić   7085155
    : 13      robić   5517232
    : 14     zrobić   5510726
    : 18  prowadzić   5123328
    : 19    chodzić   5053098
    : 20    znaleźć   5000166
    : 22        dać   4956082
    : 26      pisać   4120548
    : 27    widzieć   3846749
    : 29   posiadać   3843145
    : ---------------------------------------------------------------------------
    :              WORD    FREQ
    : 1159  zróżnicować  186027
    : 1160  wystartować  185848
    : 1161   oczyszczać  185779
    : 1162      obniżać  185359
    : 1163    pokonywać  185354
    : 1164    awansować  184924
    : 1165   wychowywać  184514
    : 1166   reklamować  184285
    : 1167     dozwolić  184042
    : 1168        łapać  184021
    : 1169     zachęcić  184009
    : 1170    poświęcać  183935
    :
    :END:

*** CHCK Introduce suffixes regex

    - [ ] TODO: FIXME: Consult the following with ZŻ

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

def fn_keep(x): return(x)
def fn_drop(x): return(~x)

suff_words = OrderedDict()

suff_words["list"] = OrderedDict()
suff_words["list"]["nouns"] = OrderedDict()
suff_words["list"]["verbs"] = OrderedDict()
suff_words["list"]["nouns"]["mas"] = [ ".*c", ".*ć", ".*a", ".*e", ".*o", ".*um" ]
suff_words["list"]["nouns"]["fem"] = [ ".*a" ]
suff_words["list"]["nouns"]["neu"] = [ ".*e", ".*o", ".*um" ]
suff_words["list"]["verbs"]["any"] = [ ".*ć" ]

suff_words["info"] = OrderedDict()
suff_words["info"]["nouns"] = OrderedDict()
suff_words["info"]["verbs"] = OrderedDict()
suff_words["info"]["nouns"]["mas"] = "drop"
suff_words["info"]["nouns"]["fem"] = "keep"
suff_words["info"]["nouns"]["neu"] = "keep"
suff_words["info"]["verbs"]["any"] = "keep"

suff_words["func"] = OrderedDict()
suff_words["func"]["nouns"] = OrderedDict()
suff_words["func"]["verbs"] = OrderedDict()
suff_words["func"]["nouns"]["mas"] = fn_drop
suff_words["func"]["nouns"]["fem"] = fn_keep
suff_words["func"]["nouns"]["neu"] = fn_keep
suff_words["func"]["verbs"]["any"] = fn_keep

suff_words["expr"] = OrderedDict()
suff_words["mask"] = OrderedDict()

for key1 in suff_words["list"].keys():
    suff_words["expr"][key1] = OrderedDict()
    suff_words["mask"][key1] = OrderedDict()
    for key2 in suff_words["list"][key1].keys():
        suff_words["expr"][key1][key2] = "$|".join( suff_words["list"][key1][key2] ) + "$"

suff_words["mask"]["nouns"]["mas"] = s0003_words["nouns"]["mas"]["orig"]["WORD"].str.contains( suff_words["expr"]["nouns"]["mas"], regex=True )
suff_words["mask"]["nouns"]["fem"] = s0003_words["nouns"]["fem"]["orig"]["WORD"].str.contains( suff_words["expr"]["nouns"]["fem"], regex=True )
suff_words["mask"]["nouns"]["neu"] = s0003_words["nouns"]["neu"]["orig"]["WORD"].str.contains( suff_words["expr"]["nouns"]["neu"], regex=True )
suff_words["mask"]["verbs"]["any"] = s0003_words["verbs"]["any"]["orig"]["WORD"].str.contains( suff_words["expr"]["verbs"]["any"], regex=True )

dict_print( input_dict=suff_words, input_name="suff_words")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[85]:
    # output
    : suff_words["list"]["nouns"]["mas"] = ['.*c', '.*ć', '.*a', '.*e', '.*o', '.*um']
    : suff_words["list"]["nouns"]["fem"] = ['.*a']
    : suff_words["list"]["nouns"]["neu"] = ['.*e', '.*o', '.*um']
    : suff_words["list"]["verbs"]["any"] = ['.*ć']
    : suff_words["info"]["nouns"]["mas"] = "drop"
    : suff_words["info"]["nouns"]["fem"] = "keep"
    : suff_words["info"]["nouns"]["neu"] = "keep"
    : suff_words["info"]["verbs"]["any"] = "keep"
    : suff_words["func"]["nouns"]["mas"] = <function:fn_drop>
    : suff_words["func"]["nouns"]["fem"] = <function:fn_keep>
    : suff_words["func"]["nouns"]["neu"] = <function:fn_keep>
    : suff_words["func"]["verbs"]["any"] = <function:fn_keep>
    : suff_words["expr"]["nouns"]["mas"] = ".*c$|.*ć$|.*a$|.*e$|.*o$|.*um$"
    : suff_words["expr"]["nouns"]["fem"] = ".*a$"
    : suff_words["expr"]["nouns"]["neu"] = ".*e$|.*o$|.*um$"
    : suff_words["expr"]["verbs"]["any"] = ".*ć$"
    : suff_words["mask"]["nouns"]["mas"] = <Series>
    : suff_words["mask"]["nouns"]["fem"] = <Series>
    : suff_words["mask"]["nouns"]["neu"] = <Series>
    : suff_words["mask"]["verbs"]["any"] = <Series>
    :
    :END:

*** DONE Describe masks

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

fmt1 = len( str( max(
    suff_words["func"]["nouns"]["mas"]( ~suff_words["mask"]["nouns"]["mas"] ).sum(),
    suff_words["func"]["nouns"]["fem"]( ~suff_words["mask"]["nouns"]["fem"] ).sum(),
    suff_words["func"]["nouns"]["neu"]( ~suff_words["mask"]["nouns"]["neu"] ).sum(),
    suff_words["func"]["verbs"]["any"]( ~suff_words["mask"]["verbs"]["any"] ).sum(),
)))

fmt2 = len( str( max(
    suff_words["func"]["nouns"]["mas"](  suff_words["mask"]["nouns"]["mas"] ).shape[0],
    suff_words["func"]["nouns"]["fem"](  suff_words["mask"]["nouns"]["fem"] ).shape[0],
    suff_words["func"]["nouns"]["neu"](  suff_words["mask"]["nouns"]["neu"] ).shape[0],
    suff_words["func"]["verbs"]["any"](  suff_words["mask"]["verbs"]["any"] ).shape[0],
)))

print( "="*75 )
print( "Drop counts:" )
print( "-"*75 )
print( "nouns: mas: " + str( suff_words["func"]["nouns"]["mas"]( ~suff_words["mask"]["nouns"]["mas"] ).sum() ).rjust(fmt1) + " of " + str( suff_words["func"]["nouns"]["mas"](  suff_words["mask"]["nouns"]["mas"] ).shape[0] ).rjust(fmt2) )
print( "nouns: fem: " + str( suff_words["func"]["nouns"]["fem"]( ~suff_words["mask"]["nouns"]["fem"] ).sum() ).rjust(fmt1) + " of " + str( suff_words["func"]["nouns"]["fem"](  suff_words["mask"]["nouns"]["fem"] ).shape[0] ).rjust(fmt2) )
print( "nouns: neu: " + str( suff_words["func"]["nouns"]["neu"]( ~suff_words["mask"]["nouns"]["neu"] ).sum() ).rjust(fmt1) + " of " + str( suff_words["func"]["nouns"]["neu"](  suff_words["mask"]["nouns"]["neu"] ).shape[0] ).rjust(fmt2) )
print( "verbs: any: " + str( suff_words["func"]["verbs"]["any"]( ~suff_words["mask"]["verbs"]["any"] ).sum() ).rjust(fmt1) + " of " + str( suff_words["func"]["verbs"]["any"](  suff_words["mask"]["verbs"]["any"] ).shape[0] ).rjust(fmt2) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[86]:
    # output
    : ===========================================================================
    : Drop counts:
    : ---------------------------------------------------------------------------
    : nouns: mas: 27 of 392
    : nouns: fem: 62 of 333
    : nouns: neu:  3 of 108
    : verbs: any:  6 of 922
    :
    :END:

*** DONE Execute

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

s0003_words["nouns"]["mas"]["keep"] = s0003_words["nouns"]["mas"]["orig"][ suff_words["func"]["nouns"]["mas"](  suff_words["mask"]["nouns"]["mas"] ) ]
s0003_words["nouns"]["fem"]["keep"] = s0003_words["nouns"]["fem"]["orig"][ suff_words["func"]["nouns"]["fem"](  suff_words["mask"]["nouns"]["fem"] ) ]
s0003_words["nouns"]["neu"]["keep"] = s0003_words["nouns"]["neu"]["orig"][ suff_words["func"]["nouns"]["neu"](  suff_words["mask"]["nouns"]["neu"] ) ]
s0003_words["verbs"]["any"]["keep"] = s0003_words["verbs"]["any"]["orig"][ suff_words["func"]["verbs"]["any"](  suff_words["mask"]["verbs"]["any"] ) ]

s0003_words["nouns"]["mas"]["drop"] = s0003_words["nouns"]["mas"]["orig"][ suff_words["func"]["nouns"]["mas"]( ~suff_words["mask"]["nouns"]["mas"] ) ]
s0003_words["nouns"]["fem"]["drop"] = s0003_words["nouns"]["fem"]["orig"][ suff_words["func"]["nouns"]["fem"]( ~suff_words["mask"]["nouns"]["fem"] ) ]
s0003_words["nouns"]["neu"]["drop"] = s0003_words["nouns"]["neu"]["orig"][ suff_words["func"]["nouns"]["neu"]( ~suff_words["mask"]["nouns"]["neu"] ) ]
s0003_words["verbs"]["any"]["drop"] = s0003_words["verbs"]["any"]["orig"][ suff_words["func"]["verbs"]["any"]( ~suff_words["mask"]["verbs"]["any"] ) ]

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[87]:
    :END:

*** DONE Checkup: =*[*][*]["keep"]=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

print( "="*75 )
dict_print( input_dict=suff_words["list"], input_name="suff_words[\"list\"]")

df_list = [  s0003_words[ "nouns" ][ "mas" ][ "keep" ],   s0003_words[ "nouns" ][ "fem" ][ "keep" ],   s0003_words[ "nouns" ][ "neu" ][ "keep" ],   s0003_words[ "verbs" ][ "any" ][ "keep" ],  ]
df_info = [ "s0003_words[\"nouns\"][\"mas\"][\"keep\"]", "s0003_words[\"nouns\"][\"fem\"][\"keep\"]", "s0003_words[\"nouns\"][\"neu\"][\"keep\"]", "s0003_words[\"verbs\"][\"any\"][\"keep\"]", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[88]:
    # output
    : ===========================================================================
    : suff_words["list"]["nouns"]["mas"] = ['.*c', '.*ć', '.*a', '.*e', '.*o', '.*um']
    : suff_words["list"]["nouns"]["fem"] = ['.*a']
    : suff_words["list"]["nouns"]["neu"] = ['.*e', '.*o', '.*um']
    : suff_words["list"]["verbs"]["any"] = ['.*ć']
    : ===========================================================================
    : s0003_words["nouns"]["mas"]["keep"]
    : ===========================================================================
    : idx count: 365
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :         WORD      FREQ     M      F      N
    : 27       raz  11407991  True  False  False
    : 38     temat   8470486  True  False  False
    : 51   problem   6737668  True  False  False
    : 59       pan   6085885  True  False  False
    : 60       dom   5879198  True  False  False
    : 74   program   5094536  True  False  False
    : 77       cel   5008658  True  False  False
    : 85     świat   4895309  True  False  False
    : 86    system   4834915  True  False  False
    : 101     stan   4287782  True  False  False
    : 102     kraj   4238464  True  False  False
    : 111   zespół   3890979  True  False  False
    : ---------------------------------------------------------------------------
    :           WORD    FREQ     M      F      N
    : 1518     urlop  462723  True  False  False
    : 1519  kontrakt  462062  True  False  False
    : 1521  dziennik  461403  True  False  False
    : 1525  konflikt  459247  True  False  False
    : 1526       kąt  459211  True  False  False
    : 1529  przemysł  458537  True  False  False
    : 1540    profil  456515  True  False  False
    : 1546   wyjątek  455108  True  False  False
    : 1547    zarzut  454982  True  False  False
    : 1548   wysiłek  452766  True  False  False
    : 1549     umysł  452428  True  False  False
    : 1550   magazyn  451186  True  False  False
    : ===========================================================================
    : s0003_words["nouns"]["fem"]["keep"]
    : ===========================================================================
    : idx count: 271
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :            WORD      FREQ      M     F      N
    : 20        praca  11797326  False  True  False
    : 29       strona  11008323  False  True  False
    : 31        osoba  10547308  False  True  False
    : 42        firma   7855864  False  True  False
    : 46       sprawa   6925157  False  True  False
    : 71       szkoła   5289751  False  True  False
    : 72          gra   5124178  False  True  False
    : 76   informacja   5013890  False  True  False
    : 88        droga   4795287  False  True  False
    : 90        grupa   4533293  False  True  False
    : 104    sytuacja   4235570  False  True  False
    : 105      zmiana   4172001  False  True  False
    : ---------------------------------------------------------------------------
    :                WORD    FREQ      M     F      N
    : 1483  reprezentacja  481307  False  True  False
    : 1489         prośba  479057  False  True  False
    : 1490         księga  479001  False  True  False
    : 1494        podłoga  478224  False  True  False
    : 1496       tematyka  477530  False  True  False
    : 1503    lokalizacja  474313  False  True  False
    : 1514           moda  466387  False  True  False
    : 1520        porażka  461987  False  True  False
    : 1527        tablica  458992  False  True  False
    : 1541         aukcja  456430  False  True  False
    : 1544          wizja  455469  False  True  False
    : 1545         tabela  455112  False  True  False
    : ===========================================================================
    : s0003_words["nouns"]["neu"]["keep"]
    : ===========================================================================
    : idx count: 105
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :             WORD      FREQ      M      F     N
    : 30       miejsce  10632564  False  False  True
    : 37       dziecko   8604939  False  False  True
    : 110    spotkanie   3895707  False  False  True
    : 115      pytanie   3736580  False  False  True
    : 122        słowo   3474967  False  False  True
    : 138       źródło   3149575  False  False  True
    : 151        forum   2846323  False  False  True
    : 156          oko   2831302  False  False  True
    : 164       zdanie   2787483  False  False  True
    : 187      badanie   2635110  False  False  True
    : 222      zadanie   2320897  False  False  True
    : 257  rozwiązanie   2184542  False  False  True
    : ---------------------------------------------------------------------------
    :                  WORD    FREQ      M      F     N
    : 1402    wynagrodzenie  508535  False  False  True
    : 1407             ucho  506348  False  False  True
    : 1427      przekonanie  497722  False  False  True
    : 1437         lotnisko  495671  False  False  True
    : 1442  przedsięwzięcie  493229  False  False  True
    : 1450       ogłoszenie  492210  False  False  True
    : 1474        pokolenie  482478  False  False  True
    : 1485           drewno  480126  False  False  True
    : 1487         jedzenie  479058  False  False  True
    : 1510            łóżko  467525  False  False  True
    : 1531     porozumienie  458259  False  False  True
    : 1542         widzenie  455969  False  False  True
    : ===========================================================================
    : s0003_words["verbs"]["any"]["keep"]
    : ===========================================================================
    : idx count: 916
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ
    : 7      zostać  11638052
    : 10     musieć   8864472
    : 11      mówić   7085155
    : 13      robić   5517232
    : 14     zrobić   5510726
    : 18  prowadzić   5123328
    : 19    chodzić   5053098
    : 20    znaleźć   5000166
    : 22        dać   4956082
    : 26      pisać   4120548
    : 27    widzieć   3846749
    : 29   posiadać   3843145
    : ---------------------------------------------------------------------------
    :              WORD    FREQ
    : 1159  zróżnicować  186027
    : 1160  wystartować  185848
    : 1161   oczyszczać  185779
    : 1162      obniżać  185359
    : 1163    pokonywać  185354
    : 1164    awansować  184924
    : 1165   wychowywać  184514
    : 1166   reklamować  184285
    : 1167     dozwolić  184042
    : 1168        łapać  184021
    : 1169     zachęcić  184009
    : 1170    poświęcać  183935
    :
    :END:

*** DONE Checkup: =*[*][*]["drop"]=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

print( "="*75 )
dict_print( input_dict=suff_words["list"], input_name="suff_words[\"list\"]")

df_list = [  s0003_words[ "nouns" ][ "mas" ][ "drop" ],   s0003_words[ "nouns" ][ "fem" ][ "drop" ],   s0003_words[ "nouns" ][ "neu" ][ "drop" ],   s0003_words[ "verbs" ][ "any" ][ "drop" ],  ]
df_info = [ "s0003_words[\"nouns\"][\"mas\"][\"drop\"]", "s0003_words[\"nouns\"][\"fem\"][\"drop\"]", "s0003_words[\"nouns\"][\"neu\"][\"drop\"]", "s0003_words[\"verbs\"][\"any\"][\"drop\"]", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[89]:
    # output
    : ===========================================================================
    : suff_words["list"]["nouns"]["mas"] = ['.*c', '.*ć', '.*a', '.*e', '.*o', '.*um']
    : suff_words["list"]["nouns"]["fem"] = ['.*a']
    : suff_words["list"]["nouns"]["neu"] = ['.*e', '.*o', '.*um']
    : suff_words["list"]["verbs"]["any"] = ['.*ć']
    : ===========================================================================
    : s0003_words["nouns"]["mas"]["drop"]
    : ===========================================================================
    : idx count: 27  [70, 145, 278, 333, 371]
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :             WORD     FREQ     M      F      N
    : 70        koniec  5523181  True  False  False
    : 145      miesiąc  2989275  True  False  False
    : 278  mieszkaniec  2040027  True  False  False
    : 333         gość  1770277  True  False  False
    : 371       ojciec  1656464  True  False  False
    : 376    mężczyzna  1645871  True  False  False
    : 446       kolega  1430829  True  False  False
    : 449     czerwiec  1428803  True  False  False
    : 522       marzec  1252955  True  False  False
    : 579     kierowca  1141042  True  False  False
    : 623       lipiec  1083659  True  False  False
    : 809        kibic   857966  True  False  False
    : ---------------------------------------------------------------------------
    :                 WORD    FREQ     M      F      N
    : 1043          twórca  668635  True  False  False
    : 1106        chłopiec  641970  True  False  False
    : 1146            owoc  616563  True  False  False
    : 1168            plac  602504  True  False  False
    : 1238       wykonawca  581363  True  False  False
    : 1277  przedsiębiorca  567794  True  False  False
    : 1296          taniec  556501  True  False  False
    : 1299           album  553738  True  False  False
    : 1336          sędzia  539248  True  False  False
    : 1340           palec  535966  True  False  False
    : 1416         turysta  501580  True  False  False
    : 1524        odbiorca  459796  True  False  False
    : ===========================================================================
    : s0003_words["nouns"]["fem"]["drop"]
    : ===========================================================================
    : idx count: 62
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :             WORD     FREQ      M     F      N
    : 79         część  4985267  False  True  False
    : 92         pomoc  4527701  False  True  False
    : 95     możliwość  4339202  False  True  False
    : 99         rzecz  4304628  False  True  False
    : 134         pani  3161200  False  True  False
    : 181    większość  2658974  False  True  False
    : 217      wartość  2327771  False  True  False
    : 226        ilość  2288240  False  True  False
    : 236  działalność  2269697  False  True  False
    : 252         sieć  2218041  False  True  False
    : 276    odpowiedź  2048257  False  True  False
    : 283       jakość  2014035  False  True  False
    : ---------------------------------------------------------------------------
    :               WORD    FREQ      M     F      N
    : 1156          chęć  609442  False  True  False
    : 1213   przyjemność  591809  False  True  False
    : 1257      zdolność  576443  False  True  False
    : 1312     odległość  549252  False  True  False
    : 1332      własność  540935  False  True  False
    : 1359          dłoń  527535  False  True  False
    : 1374     aktywność  520272  False  True  False
    : 1382         pierś  519319  False  True  False
    : 1456     znajomość  489834  False  True  False
    : 1472      trudność  484067  False  True  False
    : 1513  szczególność  466711  False  True  False
    : 1533   społeczność  457754  False  True  False
    : ===========================================================================
    : s0003_words["nouns"]["neu"]["drop"]
    : ===========================================================================
    : idx count: 3  [514, 624, 1492]
    : row count: 5  ['WORD', 'FREQ', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ      M      F     N
    : 514      imię  1276507  False  False  True
    : 624   zwierzę  1079998  False  False  True
    : 1492    ramię   478755  False  False  True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ      M      F     N
    : 514      imię  1276507  False  False  True
    : 624   zwierzę  1079998  False  False  True
    : 1492    ramię   478755  False  False  True
    : ===========================================================================
    : s0003_words["verbs"]["any"]["drop"]
    : ===========================================================================
    : idx count: 6  [118, 623, 805, 854, 883]
    : row count: 2  ['WORD', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ
    : 118     pomóc  1701715
    : 623      ulec   404381
    : 805      rzec   303535
    : 854  dostrzec   282144
    : 883     uciec   271353
    : 945      biec   245891
    : ---------------------------------------------------------------------------
    :          WORD     FREQ
    : 118     pomóc  1701715
    : 623      ulec   404381
    : 805      rzec   303535
    : 854  dostrzec   282144
    : 883     uciec   271353
    : 945      biec   245891
    :
    :END:

** Proc 02: Hyphenation (syllabification, =pyphen=)
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

s0003_nouns_mas_keep = s0003_words["nouns"]["mas"]["keep"]
s0003_nouns_fem_keep = s0003_words["nouns"]["fem"]["keep"]
s0003_nouns_neu_keep = s0003_words["nouns"]["neu"]["keep"]
s0003_verbs_any_keep = s0003_words["verbs"]["any"]["keep"]

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[90]:
    :END:

*** DONE Hyphenation

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

s0003_nouns_mas_keep_hyphen = words_hyphen( s0003_nouns_mas_keep, field="WORD", verbose=0, )
s0003_nouns_fem_keep_hyphen = words_hyphen( s0003_nouns_fem_keep, field="WORD", verbose=0, )
s0003_nouns_neu_keep_hyphen = words_hyphen( s0003_nouns_neu_keep, field="WORD", verbose=0, )
s0003_verbs_any_keep_hyphen = words_hyphen( s0003_verbs_any_keep, field="WORD", verbose=0, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[91]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

df_list = [  s0003_nouns_mas_keep_hyphen,   s0003_nouns_fem_keep_hyphen,   s0003_nouns_neu_keep_hyphen,   s0003_verbs_any_keep_hyphen,  ]
df_info = [ "s0003_nouns_mas_keep_hyphen", "s0003_nouns_fem_keep_hyphen", "s0003_nouns_neu_keep_hyphen", "s0003_verbs_any_keep_hyphen", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[92]:
    # output
    : ===========================================================================
    : s0003_nouns_mas_keep_hyphen
    : ===========================================================================
    : idx count: 365
    : row count: 8  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :         WORD      FREQ     M      F      N      SYLL  SYLL_COUNT  CHAR_COUNT
    : 27       raz  11407991  True  False  False       raz           1           3
    : 38     temat   8470486  True  False  False    te-mat           2           5
    : 51   problem   6737668  True  False  False  pro-blem           2           7
    : 59       pan   6085885  True  False  False       pan           1           3
    : 60       dom   5879198  True  False  False       dom           1           3
    : 74   program   5094536  True  False  False  pro-gram           2           7
    : 77       cel   5008658  True  False  False       cel           1           3
    : 85     świat   4895309  True  False  False     świat           1           5
    : 86    system   4834915  True  False  False   sys-tem           2           6
    : 101     stan   4287782  True  False  False      stan           1           4
    : 102     kraj   4238464  True  False  False      kraj           1           4
    : 111   zespół   3890979  True  False  False   ze-spół           2           6
    : ---------------------------------------------------------------------------
    :           WORD    FREQ     M      F      N       SYLL  SYLL_COUNT  CHAR_COUNT
    : 1518     urlop  462723  True  False  False     u-rlop           2           5
    : 1519  kontrakt  462062  True  False  False  kon-trakt           2           8
    : 1521  dziennik  461403  True  False  False  dzien-nik           2           8
    : 1525  konflikt  459247  True  False  False  kon-flikt           2           8
    : 1526       kąt  459211  True  False  False        kąt           1           3
    : 1529  przemysł  458537  True  False  False  prze-mysł           2           8
    : 1540    profil  456515  True  False  False    pro-fil           2           6
    : 1546   wyjątek  455108  True  False  False  wy-ją-tek           3           7
    : 1547    zarzut  454982  True  False  False    za-rzut           2           6
    : 1548   wysiłek  452766  True  False  False  wy-si-łek           3           7
    : 1549     umysł  452428  True  False  False     u-mysł           2           5
    : 1550   magazyn  451186  True  False  False  ma-ga-zyn           3           7
    : ===========================================================================
    : s0003_nouns_fem_keep_hyphen
    : ===========================================================================
    : idx count: 271
    : row count: 8  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :            WORD      FREQ      M     F      N           SYLL  SYLL_COUNT  CHAR_COUNT
    : 20        praca  11797326  False  True  False         pra-ca           2           5
    : 29       strona  11008323  False  True  False        stro-na           2           6
    : 31        osoba  10547308  False  True  False        o-so-ba           3           5
    : 42        firma   7855864  False  True  False         fir-ma           2           5
    : 46       sprawa   6925157  False  True  False        spra-wa           2           6
    : 71       szkoła   5289751  False  True  False        szko-ła           2           6
    : 72          gra   5124178  False  True  False            gra           1           3
    : 76   informacja   5013890  False  True  False  in-for-ma-cja           4          10
    : 88        droga   4795287  False  True  False         dro-ga           2           5
    : 90        grupa   4533293  False  True  False         gru-pa           2           5
    : 104    sytuacja   4235570  False  True  False     sy-tu-acja           3           8
    : 105      zmiana   4172001  False  True  False        zmia-na           2           6
    : ---------------------------------------------------------------------------
    :                WORD    FREQ      M     F      N               SYLL  SYLL_COUNT  CHAR_COUNT
    : 1483  reprezentacja  481307  False  True  False  re-pre-zen-ta-cja           5          13
    : 1489         prośba  479057  False  True  False            proś-ba           2           6
    : 1490         księga  479001  False  True  False            księ-ga           2           6
    : 1494        podłoga  478224  False  True  False          pod-ło-ga           3           7
    : 1496       tematyka  477530  False  True  False        te-ma-ty-ka           4           8
    : 1503    lokalizacja  474313  False  True  False    lo-ka-li-za-cja           5          11
    : 1514           moda  466387  False  True  False              mo-da           2           4
    : 1520        porażka  461987  False  True  False          po-raż-ka           3           7
    : 1527        tablica  458992  False  True  False          ta-bli-ca           3           7
    : 1541         aukcja  456430  False  True  False            au-kcja           2           6
    : 1544          wizja  455469  False  True  False             wi-zja           2           5
    : 1545         tabela  455112  False  True  False           ta-be-la           3           6
    : ===========================================================================
    : s0003_nouns_neu_keep_hyphen
    : ===========================================================================
    : idx count: 105
    : row count: 8  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :             WORD      FREQ      M      F     N            SYLL  SYLL_COUNT  CHAR_COUNT
    : 30       miejsce  10632564  False  False  True        miej-sce           2           7
    : 37       dziecko   8604939  False  False  True        dziec-ko           2           7
    : 110    spotkanie   3895707  False  False  True     spo-tka-nie           3           9
    : 115      pytanie   3736580  False  False  True       py-ta-nie           3           7
    : 122        słowo   3474967  False  False  True          sło-wo           2           5
    : 138       źródło   3149575  False  False  True         źró-dło           2           6
    : 151        forum   2846323  False  False  True          fo-rum           2           5
    : 156          oko   2831302  False  False  True            o-ko           2           3
    : 164       zdanie   2787483  False  False  True         zda-nie           2           6
    : 187      badanie   2635110  False  False  True       ba-da-nie           3           7
    : 222      zadanie   2320897  False  False  True       za-da-nie           3           7
    : 257  rozwiązanie   2184542  False  False  True  roz-wią-za-nie           4          11
    : ---------------------------------------------------------------------------
    :                  WORD    FREQ      M      F     N                SYLL  SYLL_COUNT  CHAR_COUNT
    : 1402    wynagrodzenie  508535  False  False  True   wy-na-gro-dze-nie           5          13
    : 1407             ucho  506348  False  False  True               u-cho           2           4
    : 1427      przekonanie  497722  False  False  True      prze-ko-na-nie           4          11
    : 1437         lotnisko  495671  False  False  True          lot-ni-sko           3           8
    : 1442  przedsięwzięcie  493229  False  False  True  przed-się-wzię-cie           4          15
    : 1450       ogłoszenie  492210  False  False  True       o-gło-sze-nie           4          10
    : 1474        pokolenie  482478  False  False  True        po-ko-le-nie           4           9
    : 1485           drewno  480126  False  False  True             drew-no           2           6
    : 1487         jedzenie  479058  False  False  True          je-dze-nie           3           8
    : 1510            łóżko  467525  False  False  True              łóż-ko           2           5
    : 1531     porozumienie  458259  False  False  True    po-ro-zu-mie-nie           5          12
    : 1542         widzenie  455969  False  False  True          wi-dze-nie           3           8
    : ===========================================================================
    : s0003_verbs_any_keep_hyphen
    : ===========================================================================
    : idx count: 916
    : row count: 5  ['WORD', 'FREQ', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ         SYLL  SYLL_COUNT  CHAR_COUNT
    : 7      zostać  11638052      zo-stać           2           6
    : 10     musieć   8864472      mu-sieć           2           6
    : 11      mówić   7085155       mó-wić           2           5
    : 13      robić   5517232       ro-bić           2           5
    : 14     zrobić   5510726      zro-bić           2           6
    : 18  prowadzić   5123328  pro-wa-dzić           3           9
    : 19    chodzić   5053098     cho-dzić           2           7
    : 20    znaleźć   5000166     zna-leźć           2           7
    : 22        dać   4956082          dać           1           3
    : 26      pisać   4120548       pi-sać           2           5
    : 27    widzieć   3846749     wi-dzieć           2           7
    : 29   posiadać   3843145   po-sia-dać           3           8
    : ---------------------------------------------------------------------------
    :              WORD    FREQ            SYLL  SYLL_COUNT  CHAR_COUNT
    : 1159  zróżnicować  186027  zróż-ni-co-wać           4          11
    : 1160  wystartować  185848  wy-star-to-wać           4          11
    : 1161   oczyszczać  185779    o-czysz-czać           3          10
    : 1162      obniżać  185359       ob-ni-żać           3           7
    : 1163    pokonywać  185354    po-ko-ny-wać           4           9
    : 1164    awansować  184924    a-wan-so-wać           4           9
    : 1165   wychowywać  184514   wy-cho-wy-wać           4          10
    : 1166   reklamować  184285   re-kla-mo-wać           4          10
    : 1167     dozwolić  184042      do-zwo-lić           3           8
    : 1168        łapać  184021          ła-pać           2           5
    : 1169     zachęcić  184009      za-chę-cić           3           8
    : 1170    poświęcać  183935     po-świę-cać           3           9
    :
    :END:

*** DONE Skimming

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

syll_min=2
syll_max=4
char_min=6
char_max=8
syll_count_col="SYLL_COUNT"
char_count_col="CHAR_COUNT"
verbose=5

s0003_nouns_mas_keep_hyphen_skimmed = words_skim( s0003_nouns_mas_keep_hyphen, "s0003_nouns_mas_keep_hyphen_skimmed", syll_min, syll_max, char_min, char_max, syll_count_col, char_count_col, verbose, )
s0003_nouns_fem_keep_hyphen_skimmed = words_skim( s0003_nouns_fem_keep_hyphen, "s0003_nouns_fem_keep_hyphen_skimmed", syll_min, syll_max, char_min, char_max, syll_count_col, char_count_col, verbose, )
s0003_nouns_neu_keep_hyphen_skimmed = words_skim( s0003_nouns_neu_keep_hyphen, "s0003_nouns_neu_keep_hyphen_skimmed", syll_min, syll_max, char_min, char_max, syll_count_col, char_count_col, verbose, )
s0003_verbs_any_keep_hyphen_skimmed = words_skim( s0003_verbs_any_keep_hyphen, "s0003_verbs_any_keep_hyphen_skimmed", syll_min, syll_max, char_min, char_max, syll_count_col, char_count_col, verbose, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[93]:
    # output
    : ===========================================================================
    : Processing: s0003_nouns_mas_keep_hyphen_skimmed
    : ---------------------------------------------------------------------------
    : Dropped 200 words (total reduced from 365 to 165)
    : ===========================================================================
    : Processing: s0003_nouns_fem_keep_hyphen_skimmed
    : ---------------------------------------------------------------------------
    : Dropped 134 words (total reduced from 271 to 137)
    : ===========================================================================
    : Processing: s0003_nouns_neu_keep_hyphen_skimmed
    : ---------------------------------------------------------------------------
    : Dropped 70 words (total reduced from 105 to 35)
    : ===========================================================================
    : Processing: s0003_verbs_any_keep_hyphen_skimmed
    : ---------------------------------------------------------------------------
    : Dropped 417 words (total reduced from 916 to 499)
    :
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

df_list = [  s0003_nouns_mas_keep_hyphen_skimmed,   s0003_nouns_fem_keep_hyphen_skimmed,   s0003_nouns_neu_keep_hyphen_skimmed,   s0003_verbs_any_keep_hyphen_skimmed,  ]
df_info = [ "s0003_nouns_mas_keep_hyphen_skimmed", "s0003_nouns_fem_keep_hyphen_skimmed", "s0003_nouns_neu_keep_hyphen_skimmed", "s0003_verbs_any_keep_hyphen_skimmed", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[94]:
    # output
    : ===========================================================================
    : s0003_nouns_mas_keep_hyphen_skimmed
    : ===========================================================================
    : idx count: 165
    : row count: 8  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ     M      F      N        SYLL  SYLL_COUNT  CHAR_COUNT
    : 51    problem  6737668  True  False  False    pro-blem           2           7
    : 74    program  5094536  True  False  False    pro-gram           2           7
    : 86     system  4834915  True  False  False     sys-tem           2           6
    : 111    zespół  3890979  True  False  False     ze-spół           2           6
    : 124    poziom  3291497  True  False  False     po-ziom           2           6
    : 127    środek  3173454  True  False  False     śro-dek           2           6
    : 130    udział  3163240  True  False  False     u-dział           2           6
    : 143  samochód  3025532  True  False  False  sa-mo-chód           3           8
    : 147  początek  2924705  True  False  False  po-czą-tek           3           8
    : 166    zakres  2755389  True  False  False     za-kres           2           6
    : 168   produkt  2730137  True  False  False    pro-dukt           2           7
    : 169    rozwój  2717101  True  False  False     roz-wój           2           6
    : ---------------------------------------------------------------------------
    :           WORD    FREQ     M      F      N        SYLL  SYLL_COUNT  CHAR_COUNT
    : 1457  czwartek  489188  True  False  False   czwar-tek           2           8
    : 1463  profesor  485781  True  False  False  pro-fe-sor           3           8
    : 1495    symbol  477630  True  False  False     sym-bol           2           6
    : 1519  kontrakt  462062  True  False  False   kon-trakt           2           8
    : 1521  dziennik  461403  True  False  False   dzien-nik           2           8
    : 1525  konflikt  459247  True  False  False   kon-flikt           2           8
    : 1529  przemysł  458537  True  False  False   prze-mysł           2           8
    : 1540    profil  456515  True  False  False     pro-fil           2           6
    : 1546   wyjątek  455108  True  False  False   wy-ją-tek           3           7
    : 1547    zarzut  454982  True  False  False     za-rzut           2           6
    : 1548   wysiłek  452766  True  False  False   wy-si-łek           3           7
    : 1550   magazyn  451186  True  False  False   ma-ga-zyn           3           7
    : ===========================================================================
    : s0003_nouns_fem_keep_hyphen_skimmed
    : ===========================================================================
    : idx count: 137
    : row count: 8  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ      M     F      N        SYLL  SYLL_COUNT  CHAR_COUNT
    : 29     strona  11008323  False  True  False     stro-na           2           6
    : 46     sprawa   6925157  False  True  False     spra-wa           2           6
    : 71     szkoła   5289751  False  True  False     szko-ła           2           6
    : 104  sytuacja   4235570  False  True  False  sy-tu-acja           3           8
    : 105    zmiana   4172001  False  True  False     zmia-na           2           6
    : 112    chwila   3846613  False  True  False     chwi-la           2           6
    : 117   kobieta   3540625  False  True  False   ko-bie-ta           3           7
    : 121   godzina   3532243  False  True  False   go-dzi-na           3           7
    : 139    oferta   3114414  False  True  False    o-fer-ta           3           6
    : 140    zasada   3105957  False  True  False    za-sa-da           3           6
    : 146   rodzina   2988154  False  True  False   ro-dzi-na           3           7
    : 149  historia   2873478  False  True  False  hi-sto-ria           3           8
    : ---------------------------------------------------------------------------
    :           WORD    FREQ      M     F      N         SYLL  SYLL_COUNT  CHAR_COUNT
    : 1417  przygoda  500761  False  True  False   przy-go-da           3           8
    : 1429    stawka  496841  False  True  False      staw-ka           2           6
    : 1459  przyroda  488502  False  True  False   przy-ro-da           3           8
    : 1468    kamera  484712  False  True  False     ka-me-ra           3           6
    : 1489    prośba  479057  False  True  False      proś-ba           2           6
    : 1490    księga  479001  False  True  False      księ-ga           2           6
    : 1494   podłoga  478224  False  True  False    pod-ło-ga           3           7
    : 1496  tematyka  477530  False  True  False  te-ma-ty-ka           4           8
    : 1520   porażka  461987  False  True  False    po-raż-ka           3           7
    : 1527   tablica  458992  False  True  False    ta-bli-ca           3           7
    : 1541    aukcja  456430  False  True  False      au-kcja           2           6
    : 1545    tabela  455112  False  True  False     ta-be-la           3           6
    : ===========================================================================
    : s0003_nouns_neu_keep_hyphen_skimmed
    : ===========================================================================
    : idx count: 35
    : row count: 8  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ      M      F     N        SYLL  SYLL_COUNT  CHAR_COUNT
    : 30    miejsce  10632564  False  False  True    miej-sce           2           7
    : 37    dziecko   8604939  False  False  True    dziec-ko           2           7
    : 115   pytanie   3736580  False  False  True   py-ta-nie           3           7
    : 138    źródło   3149575  False  False  True     źró-dło           2           6
    : 164    zdanie   2787483  False  False  True     zda-nie           2           6
    : 187   badanie   2635110  False  False  True   ba-da-nie           3           7
    : 222   zadanie   2320897  False  False  True   za-da-nie           3           7
    : 273   centrum   2072348  False  False  True    cen-trum           2           7
    : 347   zdrowie   1705478  False  False  True    zdro-wie           2           7
    : 506  wrażenie   1289242  False  False  True  wra-że-nie           3           8
    : 673   pojęcie   1017281  False  False  True   po-ję-cie           3           7
    : 694    medium    963970  False  False  True     me-dium           2           6
    : ---------------------------------------------------------------------------
    :           WORD    FREQ      M      F     N        SYLL  SYLL_COUNT  CHAR_COUNT
    : 1157    paliwo  608160  False  False  True    pa-li-wo           3           6
    : 1165    wojsko  605803  False  False  True     woj-sko           2           6
    : 1190  poczucie  599769  False  False  True  po-czu-cie           3           8
    : 1239  marzenie  581158  False  False  True  ma-rze-nie           3           8
    : 1327   jezioro  542873  False  False  True   je-zio-ro           3           7
    : 1331   osiedle  540965  False  False  True   o-sie-dle           3           7
    : 1334   wyjście  540531  False  False  True    wyj-ście           2           7
    : 1366  południe  525246  False  False  True  po-łu-dnie           3           8
    : 1437  lotnisko  495671  False  False  True  lot-ni-sko           3           8
    : 1485    drewno  480126  False  False  True     drew-no           2           6
    : 1487  jedzenie  479058  False  False  True  je-dze-nie           3           8
    : 1542  widzenie  455969  False  False  True  wi-dze-nie           3           8
    : ===========================================================================
    : s0003_verbs_any_keep_hyphen_skimmed
    : ===========================================================================
    : idx count: 499
    : row count: 5  ['WORD', 'FREQ', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :         WORD      FREQ        SYLL  SYLL_COUNT  CHAR_COUNT
    : 7     zostać  11638052     zo-stać           2           6
    : 10    musieć   8864472     mu-sieć           2           6
    : 14    zrobić   5510726     zro-bić           2           6
    : 19   chodzić   5053098    cho-dzić           2           7
    : 20   znaleźć   5000166    zna-leźć           2           7
    : 27   widzieć   3846749    wi-dzieć           2           7
    : 29  posiadać   3843145  po-sia-dać           3           8
    : 30   działać   3799657    dzia-łać           2           7
    : 33  dotyczyć   3449448  do-ty-czyć           3           8
    : 34   istnieć   3366992    ist-nieć           2           7
    : 35    zacząć   3152661     za-cząć           2           6
    : 37   wydawać   3128186   wy-da-wać           3           7
    : ---------------------------------------------------------------------------
    :           WORD    FREQ        SYLL  SYLL_COUNT  CHAR_COUNT
    : 1142  odczytać  190440  od-czy-tać           3           8
    : 1144  zwalczać  190074   zwal-czać           2           8
    : 1146    nabrać  189697     na-brać           2           6
    : 1147  oznaczyć  189340  o-zna-czyć           3           8
    : 1148  zechcieć  189208   ze-chcieć           2           8
    : 1153  wbudować  187815  wbu-do-wać           3           8
    : 1155  dojechać  186891  do-je-chać           3           8
    : 1156  szacować  186729  sza-co-wać           3           8
    : 1158  wyrównać  186130  wy-rów-nać           3           8
    : 1162   obniżać  185359   ob-ni-żać           3           7
    : 1167  dozwolić  184042  do-zwo-lić           3           8
    : 1169  zachęcić  184009  za-chę-cić           3           8
    :
    :END:

** Proc 03: Extract suffix (for the =Wyggy= regex construction)
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

s0003_nouns_mas_keep_hyphen_skimmed_suff = s0003_nouns_mas_keep_hyphen_skimmed
s0003_nouns_fem_keep_hyphen_skimmed_suff = s0003_nouns_fem_keep_hyphen_skimmed
s0003_nouns_neu_keep_hyphen_skimmed_suff = s0003_nouns_neu_keep_hyphen_skimmed
s0003_verbs_any_keep_hyphen_skimmed_suff = s0003_verbs_any_keep_hyphen_skimmed

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[95]:
    :END:

*** DONE Inspect known suffixes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

print("="*75)
print("nouns_suff_MAS")
print("-"*75)
print( nouns_suff_MAS )
print("="*75)
print("nouns_suff_FEM")
print("-"*75)
print( nouns_suff_FEM )
print("="*75)
print("nouns_suff_NEU")
print("-"*75)
print( nouns_suff_NEU )
print("="*75)
print("nouns_suff_ALL")
print("-"*75)
print(nouns_suff_ALL)
print("="*75)
print("verbs_suff_ALL")
print("-"*75)
print(verbs_suff_ALL)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[13]:
    # output
    : ===========================================================================
    : nouns_suff_MAS
    : ---------------------------------------------------------------------------
    : ['w', 'd', 'cz', 'ź', 'm', 'ć', 'n', 'j', 'ł', 't', 'st', 'r', 'ż', 'zd', 'b', 'sz', 'anin', 'k', 'dź', 'rz', 's', 'c', 'g', 'dz', 'l', 'dż', 'ń', 'ś', 'p', 'f', 'ch', 'z']
    : ===========================================================================
    : nouns_suff_FEM
    : ---------------------------------------------------------------------------
    : ['ra', 'da', 'w', 'sta', 'cz', 'ź', 'ma', 'm', 'ć', 'ga', 'j', 'za', 'ba', 'wa', 'pa', 'b', 'sz', 'dź', 'fa', 'zda', 'c', 'na', 'ta', 'a', 'dz', 'ka', 'sa', 'l', 'cha', 'ń', 'ś', 'p', 'ła', 'rz']
    : ===========================================================================
    : nouns_suff_NEU
    : ---------------------------------------------------------------------------
    : ['ło', 'zo', 'no', 'sto', 'to', 'so', 'o', 'um', 'zdo', 'do', 'wo', 'cho', 'go', 'e', 'fo', 'ro', 'ko', 'po', 'ę', 'bo', 'mo']
    : ===========================================================================
    : nouns_suff_ALL
    : ---------------------------------------------------------------------------
    : ['ra', 'ło', 'zo', 'no', 'da', 'w', 'sto', 'd', 'to', 'sta', 'cz', 'ch', 'so', 'ź', 'ma', 'o', 'm', 'um', 'zdo', 'ć', 'do', 'n', 'mo', 'ga', 'j', 'za', 'wo', 'cho', 'ł', 'ba', 'go', 't', 'st', 'wa', 'r', 'e', 'fo', 'ż', 'zd', 'b', 'pa', 'sz', 'ro', 'anin', 'k', 'dź', 'fa', 's', 'zda', 'c', 'ko', 'na', 'ta', 'g', 'a', 'dz', 'l', 'ka', 'dż', 'ń', 'sa', 'cha', 'po', 'ę', 'ś', 'p', 'ła', 'f', 'bo', 'rz', 'z']
    : ===========================================================================
    : verbs_suff_ALL
    : ---------------------------------------------------------------------------
    : ['ć', 'iwać', 'nąć', 'ywać', 'eć', 'ąć', 'ść', 'ić', 'ać', 'ować', 'c', 'yć']
    :
    :END:

*** DONE Match suffixes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

s0003_nouns_mas_keep_hyphen_skimmed_suff_match = words_suff( df_data=s0003_nouns_mas_keep_hyphen_skimmed_suff, suff_list=nouns_suff_MAS, words_col="WORD", verbose=0, )
s0003_nouns_fem_keep_hyphen_skimmed_suff_match = words_suff( df_data=s0003_nouns_fem_keep_hyphen_skimmed_suff, suff_list=nouns_suff_FEM, words_col="WORD", verbose=0, )
s0003_nouns_neu_keep_hyphen_skimmed_suff_match = words_suff( df_data=s0003_nouns_neu_keep_hyphen_skimmed_suff, suff_list=nouns_suff_NEU, words_col="WORD", verbose=0, )
s0003_verbs_any_keep_hyphen_skimmed_suff_match = words_suff( df_data=s0003_verbs_any_keep_hyphen_skimmed_suff, suff_list=verbs_suff_ALL, words_col="WORD", verbose=0, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[97]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

df_list = [
    s0003_nouns_mas_keep_hyphen_skimmed_suff_match,
    s0003_nouns_fem_keep_hyphen_skimmed_suff_match,
    s0003_nouns_neu_keep_hyphen_skimmed_suff_match,
    s0003_verbs_any_keep_hyphen_skimmed_suff_match,
]

df_info = [
    "s0003_nouns_mas_keep_hyphen_skimmed_suff_match",
    "s0003_nouns_fem_keep_hyphen_skimmed_suff_match",
    "s0003_nouns_neu_keep_hyphen_skimmed_suff_match",
    "s0003_verbs_any_keep_hyphen_skimmed_suff_match",
]

df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[98]:
    # output
    : ===========================================================================
    : s0003_nouns_mas_keep_hyphen_skimmed_suff_match
    : ===========================================================================
    : idx count: 165
    : row count: 9  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ     M      F      N        SYLL  SYLL_COUNT  CHAR_COUNT  SUFF
    : 51    problem  6737668  True  False  False    pro-blem           2           7  .*m$
    : 74    program  5094536  True  False  False    pro-gram           2           7  .*m$
    : 86     system  4834915  True  False  False     sys-tem           2           6  .*m$
    : 111    zespół  3890979  True  False  False     ze-spół           2           6  .*ł$
    : 124    poziom  3291497  True  False  False     po-ziom           2           6  .*m$
    : 127    środek  3173454  True  False  False     śro-dek           2           6  .*k$
    : 130    udział  3163240  True  False  False     u-dział           2           6  .*ł$
    : 143  samochód  3025532  True  False  False  sa-mo-chód           3           8  .*d$
    : 147  początek  2924705  True  False  False  po-czą-tek           3           8  .*k$
    : 166    zakres  2755389  True  False  False     za-kres           2           6  .*s$
    : 168   produkt  2730137  True  False  False    pro-dukt           2           7  .*t$
    : 169    rozwój  2717101  True  False  False     roz-wój           2           6  .*j$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ     M      F      N        SYLL  SYLL_COUNT  CHAR_COUNT  SUFF
    : 1457  czwartek  489188  True  False  False   czwar-tek           2           8  .*k$
    : 1463  profesor  485781  True  False  False  pro-fe-sor           3           8  .*r$
    : 1495    symbol  477630  True  False  False     sym-bol           2           6  .*l$
    : 1519  kontrakt  462062  True  False  False   kon-trakt           2           8  .*t$
    : 1521  dziennik  461403  True  False  False   dzien-nik           2           8  .*k$
    : 1525  konflikt  459247  True  False  False   kon-flikt           2           8  .*t$
    : 1529  przemysł  458537  True  False  False   prze-mysł           2           8  .*ł$
    : 1540    profil  456515  True  False  False     pro-fil           2           6  .*l$
    : 1546   wyjątek  455108  True  False  False   wy-ją-tek           3           7  .*k$
    : 1547    zarzut  454982  True  False  False     za-rzut           2           6  .*t$
    : 1548   wysiłek  452766  True  False  False   wy-si-łek           3           7  .*k$
    : 1550   magazyn  451186  True  False  False   ma-ga-zyn           3           7  .*n$
    : ===========================================================================
    : s0003_nouns_fem_keep_hyphen_skimmed_suff_match
    : ===========================================================================
    : idx count: 137
    : row count: 9  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ      M     F      N        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 29     strona  11008323  False  True  False     stro-na           2           6  .*na$
    : 46     sprawa   6925157  False  True  False     spra-wa           2           6  .*wa$
    : 71     szkoła   5289751  False  True  False     szko-ła           2           6  .*ła$
    : 104  sytuacja   4235570  False  True  False  sy-tu-acja           3           8   .*a$
    : 105    zmiana   4172001  False  True  False     zmia-na           2           6  .*na$
    : 112    chwila   3846613  False  True  False     chwi-la           2           6   .*a$
    : 117   kobieta   3540625  False  True  False   ko-bie-ta           3           7  .*ta$
    : 121   godzina   3532243  False  True  False   go-dzi-na           3           7  .*na$
    : 139    oferta   3114414  False  True  False    o-fer-ta           3           6  .*ta$
    : 140    zasada   3105957  False  True  False    za-sa-da           3           6  .*da$
    : 146   rodzina   2988154  False  True  False   ro-dzi-na           3           7  .*na$
    : 149  historia   2873478  False  True  False  hi-sto-ria           3           8   .*a$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ      M     F      N         SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 1417  przygoda  500761  False  True  False   przy-go-da           3           8  .*da$
    : 1429    stawka  496841  False  True  False      staw-ka           2           6  .*ka$
    : 1459  przyroda  488502  False  True  False   przy-ro-da           3           8  .*da$
    : 1468    kamera  484712  False  True  False     ka-me-ra           3           6  .*ra$
    : 1489    prośba  479057  False  True  False      proś-ba           2           6  .*ba$
    : 1490    księga  479001  False  True  False      księ-ga           2           6  .*ga$
    : 1494   podłoga  478224  False  True  False    pod-ło-ga           3           7  .*ga$
    : 1496  tematyka  477530  False  True  False  te-ma-ty-ka           4           8  .*ka$
    : 1520   porażka  461987  False  True  False    po-raż-ka           3           7  .*ka$
    : 1527   tablica  458992  False  True  False    ta-bli-ca           3           7   .*a$
    : 1541    aukcja  456430  False  True  False      au-kcja           2           6   .*a$
    : 1545    tabela  455112  False  True  False     ta-be-la           3           6   .*a$
    : ===========================================================================
    : s0003_nouns_neu_keep_hyphen_skimmed_suff_match
    : ===========================================================================
    : idx count: 35
    : row count: 9  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ      M      F     N        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 30    miejsce  10632564  False  False  True    miej-sce           2           7   .*e$
    : 37    dziecko   8604939  False  False  True    dziec-ko           2           7  .*ko$
    : 115   pytanie   3736580  False  False  True   py-ta-nie           3           7   .*e$
    : 138    źródło   3149575  False  False  True     źró-dło           2           6  .*ło$
    : 164    zdanie   2787483  False  False  True     zda-nie           2           6   .*e$
    : 187   badanie   2635110  False  False  True   ba-da-nie           3           7   .*e$
    : 222   zadanie   2320897  False  False  True   za-da-nie           3           7   .*e$
    : 273   centrum   2072348  False  False  True    cen-trum           2           7  .*um$
    : 347   zdrowie   1705478  False  False  True    zdro-wie           2           7   .*e$
    : 506  wrażenie   1289242  False  False  True  wra-że-nie           3           8   .*e$
    : 673   pojęcie   1017281  False  False  True   po-ję-cie           3           7   .*e$
    : 694    medium    963970  False  False  True     me-dium           2           6  .*um$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ      M      F     N        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 1157    paliwo  608160  False  False  True    pa-li-wo           3           6  .*wo$
    : 1165    wojsko  605803  False  False  True     woj-sko           2           6  .*ko$
    : 1190  poczucie  599769  False  False  True  po-czu-cie           3           8   .*e$
    : 1239  marzenie  581158  False  False  True  ma-rze-nie           3           8   .*e$
    : 1327   jezioro  542873  False  False  True   je-zio-ro           3           7  .*ro$
    : 1331   osiedle  540965  False  False  True   o-sie-dle           3           7   .*e$
    : 1334   wyjście  540531  False  False  True    wyj-ście           2           7   .*e$
    : 1366  południe  525246  False  False  True  po-łu-dnie           3           8   .*e$
    : 1437  lotnisko  495671  False  False  True  lot-ni-sko           3           8  .*ko$
    : 1485    drewno  480126  False  False  True     drew-no           2           6  .*no$
    : 1487  jedzenie  479058  False  False  True  je-dze-nie           3           8   .*e$
    : 1542  widzenie  455969  False  False  True  wi-dze-nie           3           8   .*e$
    : ===========================================================================
    : s0003_verbs_any_keep_hyphen_skimmed_suff_match
    : ===========================================================================
    : idx count: 499
    : row count: 6  ['WORD', 'FREQ', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :         WORD      FREQ        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 7     zostać  11638052     zo-stać           2           6  .*ać$
    : 10    musieć   8864472     mu-sieć           2           6  .*eć$
    : 14    zrobić   5510726     zro-bić           2           6  .*ić$
    : 19   chodzić   5053098    cho-dzić           2           7  .*ić$
    : 20   znaleźć   5000166    zna-leźć           2           7   .*ć$
    : 27   widzieć   3846749    wi-dzieć           2           7  .*eć$
    : 29  posiadać   3843145  po-sia-dać           3           8  .*ać$
    : 30   działać   3799657    dzia-łać           2           7  .*ać$
    : 33  dotyczyć   3449448  do-ty-czyć           3           8  .*yć$
    : 34   istnieć   3366992    ist-nieć           2           7  .*eć$
    : 35    zacząć   3152661     za-cząć           2           6  .*ąć$
    : 37   wydawać   3128186   wy-da-wać           3           7  .*ać$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ        SYLL  SYLL_COUNT  CHAR_COUNT     SUFF
    : 1142  odczytać  190440  od-czy-tać           3           8    .*ać$
    : 1144  zwalczać  190074   zwal-czać           2           8    .*ać$
    : 1146    nabrać  189697     na-brać           2           6    .*ać$
    : 1147  oznaczyć  189340  o-zna-czyć           3           8    .*yć$
    : 1148  zechcieć  189208   ze-chcieć           2           8    .*eć$
    : 1153  wbudować  187815  wbu-do-wać           3           8  .*ować$
    : 1155  dojechać  186891  do-je-chać           3           8    .*ać$
    : 1156  szacować  186729  sza-co-wać           3           8  .*ować$
    : 1158  wyrównać  186130  wy-rów-nać           3           8    .*ać$
    : 1162   obniżać  185359   ob-ni-żać           3           7    .*ać$
    : 1167  dozwolić  184042  do-zwo-lić           3           8    .*ić$
    : 1169  zachęcić  184009  za-chę-cić           3           8    .*ić$
    :
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0003.py

df_to_xlsx( df_data=s0003_nouns_mas_keep_hyphen_skimmed_suff_match, df_name="s0003_nouns_mas_keep_hyphen_skimmed_suff_match", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0003_nouns_fem_keep_hyphen_skimmed_suff_match, df_name="s0003_nouns_fem_keep_hyphen_skimmed_suff_match", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0003_nouns_neu_keep_hyphen_skimmed_suff_match, df_name="s0003_nouns_neu_keep_hyphen_skimmed_suff_match", df_path="data_out", add_time=False, verbose=1, )
df_to_xlsx( df_data=s0003_verbs_any_keep_hyphen_skimmed_suff_match, df_name="s0003_verbs_any_keep_hyphen_skimmed_suff_match", df_path="data_out", add_time=False, verbose=1, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[99]:
    # output
    : Saving DataFrame as: data_out/s0003_nouns_mas_keep_hyphen_skimmed_suff_match.xlsx
    : Saving DataFrame as: data_out/s0003_nouns_fem_keep_hyphen_skimmed_suff_match.xlsx
    : Saving DataFrame as: data_out/s0003_nouns_neu_keep_hyphen_skimmed_suff_match.xlsx
    : Saving DataFrame as: data_out/s0003_verbs_any_keep_hyphen_skimmed_suff_match.xlsx
    :
    :END:

* DONE Stage 0004: Match nouns and verbs (~Hungarian algorithm~)
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

s0003_nouns_mas_keep_hyphen_skimmed_suff_match = pd.read_excel( "./data_out/s0003_nouns_mas_keep_hyphen_skimmed_suff_match.xlsx", ignore_index=True, )
s0003_nouns_fem_keep_hyphen_skimmed_suff_match = pd.read_excel( "./data_out/s0003_nouns_fem_keep_hyphen_skimmed_suff_match.xlsx", ignore_index=True, )
s0003_nouns_neu_keep_hyphen_skimmed_suff_match = pd.read_excel( "./data_out/s0003_nouns_neu_keep_hyphen_skimmed_suff_match.xlsx", ignore_index=True, )
s0003_verbs_any_keep_hyphen_skimmed_suff_match = pd.read_excel( "./data_out/s0003_verbs_any_keep_hyphen_skimmed_suff_match.xlsx", ignore_index=True, )

s0003_nouns_mas_keep_hyphen_skimmed_suff_match = s0003_nouns_mas_keep_hyphen_skimmed_suff_match.replace( np.nan, "", regex=True )
s0003_nouns_fem_keep_hyphen_skimmed_suff_match = s0003_nouns_fem_keep_hyphen_skimmed_suff_match.replace( np.nan, "", regex=True )
s0003_nouns_neu_keep_hyphen_skimmed_suff_match = s0003_nouns_neu_keep_hyphen_skimmed_suff_match.replace( np.nan, "", regex=True )
s0003_verbs_any_keep_hyphen_skimmed_suff_match = s0003_verbs_any_keep_hyphen_skimmed_suff_match.replace( np.nan, "", regex=True )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[5]:
    :END:

** Proc 01: Merge =nouns_*= and renew =verbs= variables
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

s0004_nouns_mas = s0003_nouns_mas_keep_hyphen_skimmed_suff_match
s0004_nouns_fem = s0003_nouns_fem_keep_hyphen_skimmed_suff_match
s0004_nouns_neu = s0003_nouns_neu_keep_hyphen_skimmed_suff_match
s0004_verbs_all = s0003_verbs_any_keep_hyphen_skimmed_suff_match

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[6]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

df_list = [  s0004_nouns_mas,   s0004_nouns_fem,   s0004_nouns_neu,   s0004_verbs_all,  ]
df_info = [ "s0004_nouns_mas", "s0004_nouns_fem", "s0004_nouns_neu", "s0004_verbs_all", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[8]:
    # output
    : ===========================================================================
    : s0004_nouns_mas
    : ===========================================================================
    : idx count: 165
    : row count: 9  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD     FREQ     M      F      N        SYLL  SYLL_COUNT  CHAR_COUNT  SUFF
    : 51    problem  6737668  True  False  False    pro-blem           2           7  .*m$
    : 74    program  5094536  True  False  False    pro-gram           2           7  .*m$
    : 86     system  4834915  True  False  False     sys-tem           2           6  .*m$
    : 111    zespół  3890979  True  False  False     ze-spół           2           6  .*ł$
    : 124    poziom  3291497  True  False  False     po-ziom           2           6  .*m$
    : 127    środek  3173454  True  False  False     śro-dek           2           6  .*k$
    : 130    udział  3163240  True  False  False     u-dział           2           6  .*ł$
    : 143  samochód  3025532  True  False  False  sa-mo-chód           3           8  .*d$
    : 147  początek  2924705  True  False  False  po-czą-tek           3           8  .*k$
    : 166    zakres  2755389  True  False  False     za-kres           2           6  .*s$
    : 168   produkt  2730137  True  False  False    pro-dukt           2           7  .*t$
    : 169    rozwój  2717101  True  False  False     roz-wój           2           6  .*j$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ     M      F      N        SYLL  SYLL_COUNT  CHAR_COUNT  SUFF
    : 1457  czwartek  489188  True  False  False   czwar-tek           2           8  .*k$
    : 1463  profesor  485781  True  False  False  pro-fe-sor           3           8  .*r$
    : 1495    symbol  477630  True  False  False     sym-bol           2           6  .*l$
    : 1519  kontrakt  462062  True  False  False   kon-trakt           2           8  .*t$
    : 1521  dziennik  461403  True  False  False   dzien-nik           2           8  .*k$
    : 1525  konflikt  459247  True  False  False   kon-flikt           2           8  .*t$
    : 1529  przemysł  458537  True  False  False   prze-mysł           2           8  .*ł$
    : 1540    profil  456515  True  False  False     pro-fil           2           6  .*l$
    : 1546   wyjątek  455108  True  False  False   wy-ją-tek           3           7  .*k$
    : 1547    zarzut  454982  True  False  False     za-rzut           2           6  .*t$
    : 1548   wysiłek  452766  True  False  False   wy-si-łek           3           7  .*k$
    : 1550   magazyn  451186  True  False  False   ma-ga-zyn           3           7  .*n$
    : ===========================================================================
    : s0004_nouns_fem
    : ===========================================================================
    : idx count: 137
    : row count: 9  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ      M     F      N        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 29     strona  11008323  False  True  False     stro-na           2           6  .*na$
    : 46     sprawa   6925157  False  True  False     spra-wa           2           6  .*wa$
    : 71     szkoła   5289751  False  True  False     szko-ła           2           6  .*ła$
    : 104  sytuacja   4235570  False  True  False  sy-tu-acja           3           8   .*a$
    : 105    zmiana   4172001  False  True  False     zmia-na           2           6  .*na$
    : 112    chwila   3846613  False  True  False     chwi-la           2           6   .*a$
    : 117   kobieta   3540625  False  True  False   ko-bie-ta           3           7  .*ta$
    : 121   godzina   3532243  False  True  False   go-dzi-na           3           7  .*na$
    : 139    oferta   3114414  False  True  False    o-fer-ta           3           6  .*ta$
    : 140    zasada   3105957  False  True  False    za-sa-da           3           6  .*da$
    : 146   rodzina   2988154  False  True  False   ro-dzi-na           3           7  .*na$
    : 149  historia   2873478  False  True  False  hi-sto-ria           3           8   .*a$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ      M     F      N         SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 1417  przygoda  500761  False  True  False   przy-go-da           3           8  .*da$
    : 1429    stawka  496841  False  True  False      staw-ka           2           6  .*ka$
    : 1459  przyroda  488502  False  True  False   przy-ro-da           3           8  .*da$
    : 1468    kamera  484712  False  True  False     ka-me-ra           3           6  .*ra$
    : 1489    prośba  479057  False  True  False      proś-ba           2           6  .*ba$
    : 1490    księga  479001  False  True  False      księ-ga           2           6  .*ga$
    : 1494   podłoga  478224  False  True  False    pod-ło-ga           3           7  .*ga$
    : 1496  tematyka  477530  False  True  False  te-ma-ty-ka           4           8  .*ka$
    : 1520   porażka  461987  False  True  False    po-raż-ka           3           7  .*ka$
    : 1527   tablica  458992  False  True  False    ta-bli-ca           3           7   .*a$
    : 1541    aukcja  456430  False  True  False      au-kcja           2           6   .*a$
    : 1545    tabela  455112  False  True  False     ta-be-la           3           6   .*a$
    : ===========================================================================
    : s0004_nouns_neu
    : ===========================================================================
    : idx count: 35
    : row count: 9  ['WORD', 'FREQ', 'M', 'F', 'N', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :          WORD      FREQ      M      F     N        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 30    miejsce  10632564  False  False  True    miej-sce           2           7   .*e$
    : 37    dziecko   8604939  False  False  True    dziec-ko           2           7  .*ko$
    : 115   pytanie   3736580  False  False  True   py-ta-nie           3           7   .*e$
    : 138    źródło   3149575  False  False  True     źró-dło           2           6  .*ło$
    : 164    zdanie   2787483  False  False  True     zda-nie           2           6   .*e$
    : 187   badanie   2635110  False  False  True   ba-da-nie           3           7   .*e$
    : 222   zadanie   2320897  False  False  True   za-da-nie           3           7   .*e$
    : 273   centrum   2072348  False  False  True    cen-trum           2           7  .*um$
    : 347   zdrowie   1705478  False  False  True    zdro-wie           2           7   .*e$
    : 506  wrażenie   1289242  False  False  True  wra-że-nie           3           8   .*e$
    : 673   pojęcie   1017281  False  False  True   po-ję-cie           3           7   .*e$
    : 694    medium    963970  False  False  True     me-dium           2           6  .*um$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ      M      F     N        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 1157    paliwo  608160  False  False  True    pa-li-wo           3           6  .*wo$
    : 1165    wojsko  605803  False  False  True     woj-sko           2           6  .*ko$
    : 1190  poczucie  599769  False  False  True  po-czu-cie           3           8   .*e$
    : 1239  marzenie  581158  False  False  True  ma-rze-nie           3           8   .*e$
    : 1327   jezioro  542873  False  False  True   je-zio-ro           3           7  .*ro$
    : 1331   osiedle  540965  False  False  True   o-sie-dle           3           7   .*e$
    : 1334   wyjście  540531  False  False  True    wyj-ście           2           7   .*e$
    : 1366  południe  525246  False  False  True  po-łu-dnie           3           8   .*e$
    : 1437  lotnisko  495671  False  False  True  lot-ni-sko           3           8  .*ko$
    : 1485    drewno  480126  False  False  True     drew-no           2           6  .*no$
    : 1487  jedzenie  479058  False  False  True  je-dze-nie           3           8   .*e$
    : 1542  widzenie  455969  False  False  True  wi-dze-nie           3           8   .*e$
    : ===========================================================================
    : s0004_verbs_all
    : ===========================================================================
    : idx count: 499
    : row count: 6  ['WORD', 'FREQ', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'SUFF']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: True
    : ---------------------------------------------------------------------------
    :         WORD      FREQ        SYLL  SYLL_COUNT  CHAR_COUNT   SUFF
    : 7     zostać  11638052     zo-stać           2           6  .*ać$
    : 10    musieć   8864472     mu-sieć           2           6  .*eć$
    : 14    zrobić   5510726     zro-bić           2           6  .*ić$
    : 19   chodzić   5053098    cho-dzić           2           7  .*ić$
    : 20   znaleźć   5000166    zna-leźć           2           7   .*ć$
    : 27   widzieć   3846749    wi-dzieć           2           7  .*eć$
    : 29  posiadać   3843145  po-sia-dać           3           8  .*ać$
    : 30   działać   3799657    dzia-łać           2           7  .*ać$
    : 33  dotyczyć   3449448  do-ty-czyć           3           8  .*yć$
    : 34   istnieć   3366992    ist-nieć           2           7  .*eć$
    : 35    zacząć   3152661     za-cząć           2           6  .*ąć$
    : 37   wydawać   3128186   wy-da-wać           3           7  .*ać$
    : ---------------------------------------------------------------------------
    :           WORD    FREQ        SYLL  SYLL_COUNT  CHAR_COUNT     SUFF
    : 1142  odczytać  190440  od-czy-tać           3           8    .*ać$
    : 1144  zwalczać  190074   zwal-czać           2           8    .*ać$
    : 1146    nabrać  189697     na-brać           2           6    .*ać$
    : 1147  oznaczyć  189340  o-zna-czyć           3           8    .*yć$
    : 1148  zechcieć  189208   ze-chcieć           2           8    .*eć$
    : 1153  wbudować  187815  wbu-do-wać           3           8  .*ować$
    : 1155  dojechać  186891  do-je-chać           3           8    .*ać$
    : 1156  szacować  186729  sza-co-wać           3           8  .*ować$
    : 1158  wyrównać  186130  wy-rów-nać           3           8    .*ać$
    : 1162   obniżać  185359   ob-ni-żać           3           7    .*ać$
    : 1167  dozwolić  184042  do-zwo-lić           3           8    .*ić$
    : 1169  zachęcić  184009  za-chę-cić           3           8    .*ić$
    :
    :END:

*** CNCL Generate surrogate data for =nouns= and =verbs= (~optional~: =DEMO_MODE=)

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

DEMO_MODE = False

if DEMO_MODE:

    import random
    import numpy as np
    import pandas as pd
    import warnings

    tmp_n_nouns = 15 # × 3 (MFN)
    tmp_n_verbs = 50 # × 1 (ALL)

    print("*** Subsetting verbs and nouns for a surogate data (DEMO_MODE)!!! ***")
    s0004_nouns_mas = pd.DataFrame({
        "WORD": [ ''.join(random.SystemRandom().choice(string.ascii_lowercase + string.digits) for _ in range(5) ) for _ in range(tmp_n_nouns) ],
        "FREQ": np.logspace(0, random.randrange(2995, 2999, 1)/1000, num=tmp_n_nouns, endpoint=True, base=10.0, dtype=int)[::-1] ,
        "M":    True,
        "F":    False,
        "N":    False,
        "SUFF": ".*"
    })
    s0004_nouns_fem = pd.DataFrame({
        "WORD": [ ''.join(random.SystemRandom().choice(string.ascii_lowercase + string.digits) for _ in range(5) ) for _ in range(tmp_n_nouns) ],
        "FREQ": np.logspace(0, random.randrange(2995, 2999, 1)/1000, num=tmp_n_nouns, endpoint=True, base=10.0, dtype=int)[::-1] ,
        "M":    False,
        "F":    True,
        "N":    False,
        "SUFF": ".*"
    })
    s0004_nouns_neu = pd.DataFrame({
        "WORD": [ ''.join(random.SystemRandom().choice(string.ascii_lowercase + string.digits) for _ in range(5) ) for _x in range(tmp_n_nouns) ],
        "FREQ": np.logspace(0, random.randrange(2995, 2999, 1)/1000, num=tmp_n_nouns, endpoint=True, base=10.0, dtype=int)[::-1] ,
        "M":    False,
        "F":    False,
        "N":    True,
        "SUFF": ".*"
    })
    s0004_verbs_all = pd.DataFrame({
        "WORD": [ ''.join(random.SystemRandom().choice(string.ascii_lowercase + string.digits) for _ in range(5) ) for _ in range(tmp_n_verbs) ],
        "FREQ": np.logspace(0, random.randrange(2995, 2999, 1)/1000, num=tmp_n_verbs, endpoint=True, base=10.0, dtype=int)[::-1] ,
        "SUFF": ".*"
    })

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[9]:
    :END:

*** DONE Merge =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

s0004_nouns_all = pd.concat([
    s0004_nouns_mas,
    s0004_nouns_fem,
    s0004_nouns_neu,
], axis=0, ignore_index=False, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[10]:
    :END:

*** DONE Sort by =FREQ=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

s0004_nouns_all.drop( columns=[ "idx_nouns", "index", "level_0", ], inplace=True, errors="ignore", )
s0004_verbs_all.drop( columns=[ "idx_verbs", "index", "level_0", ], inplace=True, errors="ignore", )

s0004_nouns_all.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )
s0004_verbs_all.sort_values( by=["FREQ"], ascending=False, axis=0, inplace=True, )

s0004_nouns_all.reset_index( level=None, drop=True, inplace=True, )
s0004_verbs_all.reset_index( level=None, drop=True, inplace=True, )

s0004_nouns_all.drop( columns=[ "index", "level_0", ], inplace=True, errors="ignore", )
s0004_verbs_all.drop( columns=[ "index", "level_0", ], inplace=True, errors="ignore", )

s0004_nouns_all.reset_index( level=None, drop=False, inplace=True, )
s0004_verbs_all.reset_index( level=None, drop=False, inplace=True, )

s0004_nouns_all.rename( columns = { "index" : "idx_nouns" }, inplace=True, )
s0004_verbs_all.rename( columns = { "index" : "idx_verbs" }, inplace=True, )

s0004_nouns_all.rename( columns = { "WORD" : "WORD_nouns" }, inplace=True, )
s0004_verbs_all.rename( columns = { "WORD" : "WORD_verbs" }, inplace=True, )

s0004_nouns_all.rename( columns = { "FREQ" : "FREQ_nouns" }, inplace=True, )
s0004_verbs_all.rename( columns = { "FREQ" : "FREQ_verbs" }, inplace=True, )

s0004_nouns_all.rename( columns = { "SUFF" : "SUFF_nouns" }, inplace=True, )
s0004_verbs_all.rename( columns = { "SUFF" : "SUFF_verbs" }, inplace=True, )

s0004_nouns_all.rename( columns = { "SYLL" : "SYLL_nouns" }, inplace=True, )
s0004_verbs_all.rename( columns = { "SYLL" : "SYLL_verbs" }, inplace=True, )

s0004_nouns_all.rename( columns = { "SYLL_COUNT" : "SYLL_COUNT_nouns" }, inplace=True, )
s0004_verbs_all.rename( columns = { "SYLL_COUNT" : "SYLL_COUNT_verbs" }, inplace=True, )

s0004_nouns_all.rename( columns = { "CHAR_COUNT" : "CHAR_COUNT_nouns" }, inplace=True, )
s0004_verbs_all.rename( columns = { "CHAR_COUNT" : "CHAR_COUNT_verbs" }, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[11]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

df_list = [  s0004_nouns_all,   s0004_verbs_all,  ]
df_info = [ "s0004_nouns_all", "s0004_verbs_all", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[13]:
    # output
    : ===========================================================================
    : s0004_nouns_all
    : ===========================================================================
    : idx count: 337
    : row count: 10  ['idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'M', 'F', 'N', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns']
    : ---------------------------------------------------------------------------
    :     idx_nouns WORD_nouns  FREQ_nouns      M      F      N  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns
    : 0           0     strona    11008323  False   True  False     stro-na                 2                 6      .*na$
    : 1           1    miejsce    10632564  False  False   True    miej-sce                 2                 7       .*e$
    : 2           2    dziecko     8604939  False  False   True    dziec-ko                 2                 7      .*ko$
    : 3           3     sprawa     6925157  False   True  False     spra-wa                 2                 6      .*wa$
    : 4           4    problem     6737668   True  False  False    pro-blem                 2                 7       .*m$
    : 5           5     szkoła     5289751  False   True  False     szko-ła                 2                 6      .*ła$
    : 6           6    program     5094536   True  False  False    pro-gram                 2                 7       .*m$
    : 7           7     system     4834915   True  False  False     sys-tem                 2                 6       .*m$
    : 8           8   sytuacja     4235570  False   True  False  sy-tu-acja                 3                 8       .*a$
    : 9           9     zmiana     4172001  False   True  False     zmia-na                 2                 6      .*na$
    : 10         10     zespół     3890979   True  False  False     ze-spół                 2                 6       .*ł$
    : 11         11     chwila     3846613  False   True  False     chwi-la                 2                 6       .*a$
    : ---------------------------------------------------------------------------
    :      idx_nouns WORD_nouns  FREQ_nouns      M      F      N  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns
    : 325        325   dziennik      461403   True  False  False   dzien-nik                 2                 8       .*k$
    : 326        326   konflikt      459247   True  False  False   kon-flikt                 2                 8       .*t$
    : 327        327    tablica      458992  False   True  False   ta-bli-ca                 3                 7       .*a$
    : 328        328   przemysł      458537   True  False  False   prze-mysł                 2                 8       .*ł$
    : 329        329     profil      456515   True  False  False     pro-fil                 2                 6       .*l$
    : 330        330     aukcja      456430  False   True  False     au-kcja                 2                 6       .*a$
    : 331        331   widzenie      455969  False  False   True  wi-dze-nie                 3                 8       .*e$
    : 332        332     tabela      455112  False   True  False    ta-be-la                 3                 6       .*a$
    : 333        333    wyjątek      455108   True  False  False   wy-ją-tek                 3                 7       .*k$
    : 334        334     zarzut      454982   True  False  False     za-rzut                 2                 6       .*t$
    : 335        335    wysiłek      452766   True  False  False   wy-si-łek                 3                 7       .*k$
    : 336        336    magazyn      451186   True  False  False   ma-ga-zyn                 3                 7       .*n$
    : ===========================================================================
    : s0004_verbs_all
    : ===========================================================================
    : idx count: 499
    : row count: 7  ['idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :     idx_verbs WORD_verbs  FREQ_verbs  SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 0           0     zostać    11638052     zo-stać                 2                 6      .*ać$
    : 1           1     musieć     8864472     mu-sieć                 2                 6      .*eć$
    : 2           2     zrobić     5510726     zro-bić                 2                 6      .*ić$
    : 3           3    chodzić     5053098    cho-dzić                 2                 7      .*ić$
    : 4           4    znaleźć     5000166    zna-leźć                 2                 7       .*ć$
    : 5           5    widzieć     3846749    wi-dzieć                 2                 7      .*eć$
    : 6           6   posiadać     3843145  po-sia-dać                 3                 8      .*ać$
    : 7           7    działać     3799657    dzia-łać                 2                 7      .*ać$
    : 8           8   dotyczyć     3449448  do-ty-czyć                 3                 8      .*yć$
    : 9           9    istnieć     3366992    ist-nieć                 2                 7      .*eć$
    : 10         10     zacząć     3152661     za-cząć                 2                 6      .*ąć$
    : 11         11    wydawać     3128186   wy-da-wać                 3                 7      .*ać$
    : ---------------------------------------------------------------------------
    :      idx_verbs WORD_verbs  FREQ_verbs  SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 487        487   odczytać      190440  od-czy-tać                 3                 8      .*ać$
    : 488        488   zwalczać      190074   zwal-czać                 2                 8      .*ać$
    : 489        489     nabrać      189697     na-brać                 2                 6      .*ać$
    : 490        490   oznaczyć      189340  o-zna-czyć                 3                 8      .*yć$
    : 491        491   zechcieć      189208   ze-chcieć                 2                 8      .*eć$
    : 492        492   wbudować      187815  wbu-do-wać                 3                 8    .*ować$
    : 493        493   dojechać      186891  do-je-chać                 3                 8      .*ać$
    : 494        494   szacować      186729  sza-co-wać                 3                 8    .*ować$
    : 495        495   wyrównać      186130  wy-rów-nać                 3                 8      .*ać$
    : 496        496    obniżać      185359   ob-ni-żać                 3                 7      .*ać$
    : 497        497   dozwolić      184042  do-zwo-lić                 3                 8      .*ić$
    : 498        498   zachęcić      184009  za-chę-cić                 3                 8      .*ić$
    :
    :END:

** Proc 02: Hungarian algorithm
*** DONE Calculate dist

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

from scipy.spatial.distance import cdist, squareform

XA_nouns = np.array( s0004_nouns_all["FREQ_nouns"] )[None].T
XB_verbs = np.array( s0004_verbs_all["FREQ_verbs"] )[None].T

YZ_dists = cdist( XA_nouns, XB_verbs, metric="euclidean", )


print( "="*75 )
print( "XA_nouns.shape: " + str( XA_nouns.shape ) )
print( "XB_verbs.shape: " + str( XB_verbs.shape ) )
print( "YZ_dists.shape: " + str( YZ_dists.shape ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[14]:
    # output
    : ===========================================================================
    : XA_nouns.shape: (337, 1)
    : XB_verbs.shape: (499, 1)
    : YZ_dists.shape: (337, 499)
    :
    :END:

*** DONE Apply Hungarian algorithm

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

from scipy.optimize import linear_sum_assignment

row_nouns_idx0, col_verbs_idx0 = linear_sum_assignment( YZ_dists )

assert len(row_nouns_idx0) == len(col_verbs_idx0), "we need pairs of row × col"


YZ_mask1_array = np.zeros( YZ_dists.shape, dtype='bool', )
YZ_mask1_array[ ( row_nouns_idx0, col_verbs_idx0, ) ] = True


print( "row_nouns_idx0.shape: " + str( row_nouns_idx0.shape ) )
print( "col_verbs_idx0.shape: " + str( col_verbs_idx0.shape ) )
print( "YZ_mask1_array.shape: " + str( YZ_mask1_array.shape ) )

   #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[15]:
   # output
   : row_nouns_idx0.shape: (337,)
   : col_verbs_idx0.shape: (337,)
   : YZ_mask1_array.shape: (337, 499)
   :
   :END:

*** CNCL Draw figure (~optional~: =DEMO_MODE=)

    Axes coordinates:

    |-----+-----+-----|
    | 0,0 | 0,1 | 0,2 |
    |-----+-----+-----|
    | 1,0 | 1,1 | 1,2 |
    |-----+-----+-----|
    | 2,0 | 2,1 | 2,2 |
    |-----+-----+-----|

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

if DEMO_MODE:

    from matplotlib import pyplot as plt
    from IPython.display import Image
    import numpy as np
    import pandas as pd
    import matplotlib
    import seaborn as sns

    matplotlib.rcParams.update({"font.size": 14})
    matplotlib.rcParams.update({"axes.titlesize": 24})

    file_name = "./_IMG/test_2_hungarian_algorithm.png"

    y_tick_labels = s0004_nouns_all["WORD_nouns"].tolist()
    x_tick_labels = s0004_verbs_all["WORD_verbs"].tolist()

    square_select = None
    square_select = np.argwhere(  YZ_mask1_array )
    square_ignore = np.argwhere( ~YZ_mask1_array )
    square_ignore = None

    annot = True

    figsize_w = 0.8
    figsize_h = 0.8
    fig_fract = YZ_dists.shape[1] / YZ_dists.shape[0]

    fig, ax = plt.subplots(
        3,3,
        figsize=( figsize_w * YZ_dists.shape[1], figsize_h * YZ_dists.shape[0], ),
        gridspec_kw={
            "width_ratios"  : [ 1, YZ_dists.shape[1], 0.5 ],
            "height_ratios" : [ 1, YZ_dists.shape[0], 0.5 ],
            "wspace": 0,
            "hspace": 0,
        }
    )

    ax[0][0].axis("off")
    ax[0][2].axis("off")
    ax[2][0].axis("off")
    ax[2][2].axis("off")
    ax[2][1].axis("off")

    with sns.axes_style("darkgrid"):

        hm = {}; hm[0],hm[1],hm[2] = {},{},{}

        if True:
            YZ_dists = YZ_dists.astype(int)
            XA_nouns = XA_nouns.astype(int)
            XB_verbs = XB_verbs.astype(int)
            fmt      = "d"

        hm[1][1] = sns.heatmap(
            data       = YZ_dists,
            ax         = ax[1][1],
            square     = True,
            annot      = annot,
            annot_kws  = {"size": 8},
            linewidths = 0,
            linecolor  = "white",
            cbar       = True,
            cbar_ax    = ax[1][2],
            fmt        = fmt,
        )
        # ax[1,1].set_title("YZ_dists",y=1.005)
        ax[1,1].set_yticks([])
        ax[1,1].set_xticks([])

        hm[1][0] = sns.heatmap(
            data       = XA_nouns,
            ax         = ax[1][0],
            square     = True,
            annot      = annot,
            annot_kws  = {"size": 8},
            linewidths = 2,
            linecolor  = "white",
            cbar       = False,
            cbar_ax    = None,
            fmt        = fmt,
        )
        ax[1][0].set_ylabel("XA_nouns", labelpad=20, size=24, )
        # ax[1][0].set_title( "XA_nouns" )
        ax[1][0].set_xticks([])
        ax[1][0].set_yticklabels( y_tick_labels, size=14, )
        ax[1][0].yaxis.tick_left()                # default
        ax[1][0].yaxis.set_ticks_position("left") # default
        for tick in ax[1][0].get_yticklabels():
            tick.set_rotation(0)

        hm[0][1] = sns.heatmap(
            data       = XB_verbs.T,
            ax         = ax[0][1],
            square     = True,
            annot      = annot,
            annot_kws  = {"size": 8},
            linewidths = 2,
            linecolor  = "white",
            cbar       = False,
            cbar_ax    = None,
            fmt        = fmt,
        )
        ax[0][1].set_xlabel("XB_verbs.T", labelpad=-190, size=24, )
        # ax[0][1].set_title( "XB_verbs.T", y=2.5, )
        ax[0][1].set_yticks([])
        ax[0][1].set_xticklabels( x_tick_labels, size=14, )
        ax[0][1].xaxis.tick_top()
        ax[0][1].xaxis.set_ticks_position("top")
        # ax[0][1].xticks(rotation=90)
        for tick in ax[0][1].get_xticklabels():
            tick.set_rotation(90)
            # ax[0][1].xaxis.set_ticks_position("top")

        if not square_select is None:
            for (row, col) in square_select:
               ax[1][1].add_patch(Rectangle((col, row), 1, 1, fill=False, facecolor=None,    edgecolor=(0,1,0), linewidth=2,  linestyle="--", alpha = 1.0, ) )

        if not square_ignore is None:
            for (row, col) in square_ignore:
               ax[1][1].add_patch(Rectangle((col, row), 1, 1, fill=True,  facecolor=(1,1,1), edgecolor=None,    lw=3, alpha = 0.2 ))

    ax[1][1].get_shared_x_axes().join( ax[1][1], ax[0][1] )
    ax[1][1].get_shared_y_axes().join( ax[1][1], ax[1][0] )

    fig.savefig(file_name, )
    plt.close(fig)

    Image(file_name)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[16]:
    :END:

*** DONE Merge pairs of words

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

s0004_out_pairs = pd.DataFrame()

s0004_out_pairs[ "row_nouns_idx0" ] = pd.Series( row_nouns_idx0 )
s0004_out_pairs[ "col_verbs_idx0" ] = pd.Series( col_verbs_idx0 )
s0004_out_pairs[ "YZ_dists" ] = pd.Series( YZ_dists[ row_nouns_idx0, col_verbs_idx0 ] )

s0004_out_pairs = pd.merge(
    left        = s0004_out_pairs,
    right       = s0004_nouns_all,
    how         = "inner",
    left_on     = "row_nouns_idx0",
    right_on    = "idx_nouns",
    suffixes    = ("_left", "_right"),
)

s0004_out_pairs = pd.merge(
    left        = s0004_out_pairs,
    right       = s0004_verbs_all,
    how         = "inner",
    left_on     = "col_verbs_idx0",
    right_on    = "idx_verbs",
    suffixes    = ("_left", "_right"),
)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[17]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

df_list = [  s0004_out_pairs,  ]
df_info = [ "s0004_out_pairs", ]
df_head = 45
df_tail = 0

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[18]:
    # output
    : ===========================================================================
    : s0004_out_pairs
    : ===========================================================================
    : idx count: 337
    : row count: 20  ['row_nouns_idx0', 'col_verbs_idx0', 'YZ_dists', 'idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'M', 'F', 'N', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :     row_nouns_idx0  col_verbs_idx0   YZ_dists  idx_nouns WORD_nouns  FREQ_nouns      M      F      N  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns  idx_verbs WORD_verbs  FREQ_verbs   SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 0                0               0   629729.0          0     strona    11008323  False   True  False     stro-na                 2                 6      .*na$          0     zostać    11638052      zo-stać                 2                 6      .*ać$
    : 1                1               1  1768092.0          1    miejsce    10632564  False  False   True    miej-sce                 2                 7       .*e$          1     musieć     8864472      mu-sieć                 2                 6      .*eć$
    : 2                2               2  3094213.0          2    dziecko     8604939  False  False   True    dziec-ko                 2                 7      .*ko$          2     zrobić     5510726      zro-bić                 2                 6      .*ić$
    : 3                3             336  6607740.0          3     sprawa     6925157  False   True  False     spra-wa                 2                 6      .*wa$        336   porównać      317417   po-rów-nać                 3                 8      .*ać$
    : 4                4               3  1684570.0          4    problem     6737668   True  False  False    pro-blem                 2                 7       .*m$          3    chodzić     5053098     cho-dzić                 2                 7      .*ić$
    : 5                5               5  1443002.0          5     szkoła     5289751  False   True  False     szko-ła                 2                 6      .*ła$          5    widzieć     3846749     wi-dzieć                 2                 7      .*eć$
    : 6                6               4    94370.0          6    program     5094536   True  False  False    pro-gram                 2                 7       .*m$          4    znaleźć     5000166     zna-leźć                 2                 7       .*ć$
    : 7                7             335  4515339.0          7     system     4834915   True  False  False     sys-tem                 2                 6       .*m$        335   przesłać      319576    prze-słać                 2                 8      .*ać$
    : 8                8             334  3915057.0          8   sytuacja     4235570  False   True  False  sy-tu-acja                 3                 8       .*a$        334   powrócić      320513   po-wró-cić                 3                 8      .*ić$
    : 9                9               8   722553.0          9     zmiana     4172001  False   True  False     zmia-na                 2                 6      .*na$          8   dotyczyć     3449448   do-ty-czyć                 3                 8      .*yć$
    : 10              10               6    47834.0         10     zespół     3890979   True  False  False     ze-spół                 2                 6       .*ł$          6   posiadać     3843145   po-sia-dać                 3                 8      .*ać$
    : 11              11               7    46956.0         11     chwila     3846613  False   True  False     chwi-la                 2                 6       .*a$          7    działać     3799657     dzia-łać                 2                 7      .*ać$
    : 12              12             333  3415607.0         12    pytanie     3736580  False  False   True   py-ta-nie                 3                 7       .*e$        333     skupić      320973      sku-pić                 2                 6      .*ić$
    : 13              13              10   387964.0         13    kobieta     3540625  False   True  False   ko-bie-ta                 3                 7      .*ta$         10     zacząć     3152661      za-cząć                 2                 6      .*ąć$
    : 14              14               9   165251.0         14    godzina     3532243  False   True  False   go-dzi-na                 3                 7      .*na$          9    istnieć     3366992     ist-nieć                 2                 7      .*eć$
    : 15              15             332  2968381.0         15     poziom     3291497   True  False  False     po-ziom                 2                 6       .*m$        332    ponosić      323116    po-no-sić                 3                 7      .*ić$
    : 16              16             331  2849538.0         16     środek     3173454   True  False  False     śro-dek                 2                 6       .*k$        331   wzmocnić      323916    wzmoc-nić                 2                 8      .*ić$
    : 17              17              11    35054.0         17     udział     3163240   True  False  False     u-dział                 2                 6       .*ł$         11    wydawać     3128186    wy-da-wać                 3                 7      .*ać$
    : 18              18              12   154749.0         18     źródło     3149575  False  False   True     źró-dło                 2                 6      .*ło$         12    napisać     2994826    na-pi-sać                 3                 7      .*ać$
    : 19              19             330  2789239.0         19     oferta     3114414  False   True  False    o-fer-ta                 3                 6      .*ta$        330   wymyślić      325175   wy-my-ślić                 3                 8      .*ić$
    : 20              20             329  2779396.0         20     zasada     3105957  False   True  False    za-sa-da                 3                 6      .*da$        329   atakować      326561  a-ta-ko-wać                 4                 8    .*ować$
    : 21              21              13    64028.0         21   samochód     3025532   True  False  False  sa-mo-chód                 3                 8       .*d$         13    wykonać     2961504    wy-ko-nać                 3                 7      .*ać$
    : 22              22              14   282631.0         22    rodzina     2988154  False   True  False   ro-dzi-na                 3                 7      .*na$         14   zobaczyć     2705523   zo-ba-czyć                 3                 8      .*yć$
    : 23              23             328  2596900.0         23   początek     2924705   True  False  False  po-czą-tek                 3                 8       .*k$        328   wygrywać      327805   wy-gry-wać                 3                 8    .*ywać$
    : 24              24             327  2543757.0         24   historia     2873478  False   True  False  hi-sto-ria                 3                 8       .*a$        327   ukazywać      329721  u-ka-zy-wać                 4                 8    .*ywać$
    : 25              25             326  2457586.0         25     zdanie     2787483  False  False   True     zda-nie                 2                 6       .*e$        326   wyjechać      329897   wy-je-chać                 3                 8      .*ać$
    : 26              26             325  2439989.0         26    książka     2771107  False   True  False    książ-ka                 2                 7      .*ka$        325   rozwinąć      331118   roz-wi-nąć                 3                 8     .*nąć$
    : 27              27              24   410624.0         27     zakres     2755389   True  False  False     za-kres                 2                 6       .*s$         24   pamiętać     2344765   pa-mię-tać                 3                 8      .*ać$
    : 28              28              23   293261.0         28     usługa     2737676  False   True  False    u-słu-ga                 3                 6      .*ga$         23   stanowić     2444415   sta-no-wić                 3                 8      .*ić$
    : 29              29              22   265458.0         29    produkt     2730137   True  False  False    pro-dukt                 2                 7       .*t$         22     czekać     2464679      cze-kać                 2                 6      .*ać$
    : 30              30              20   170922.0         30     rozwój     2717101   True  False  False     roz-wój                 2                 6       .*j$         20     uważać     2546179     u-wa-żać                 3                 6      .*ać$
    : 31              31              17   114941.0         31    tydzień     2710788   True  False  False    ty-dzień                 2                 7       .*ń$         17   pracować     2595847   pra-co-wać                 3                 8    .*ować$
    : 32              32              15    55126.0         32    związek     2706007   True  False  False    zwią-zek                 2                 7       .*k$         15   wyglądać     2650881   wy-glą-dać                 3                 8      .*ać$
    : 33              33              16    13763.0         33   przykład     2654182   True  False  False   przy-kład                 2                 8       .*d$         16    tworzyć     2640419     two-rzyć                 2                 7      .*yć$
    : 34              34              19    80069.0         34    badanie     2635110  False  False   True   ba-da-nie                 3                 7       .*e$         19   stosować     2555041   sto-so-wać                 3                 8    .*ować$
    : 35              35              18    40382.0         35     rodzaj     2617006   True  False  False     ro-dzaj                 2                 6       .*j$         18     prosić     2576624      pro-sić                 2                 6      .*ić$
    : 36              36              21    29028.0         36   pieniądz     2551474   True  False  False   pie-niądz                 2                 8      .*dz$         21     czytać     2522446      czy-tać                 2                 6      .*ać$
    : 37              37             324  2035764.0         37     moment     2366983   True  False  False     mo-ment                 2                 6       .*t$        324    zadawać      331219    za-da-wać                 3                 7      .*ać$
    : 38              38              25   108688.0         38   podstawa     2361763  False   True  False  pod-sta-wa                 3                 8      .*wa$         25     wybrać     2253075      wy-brać                 2                 6      .*ać$
    : 39              39             323  2004887.0         39     okazja     2336165  False   True  False    o-ka-zja                 3                 6       .*a$        323   odczuwać      331278   od-czu-wać                 3                 8      .*ać$
    : 40              40             322  1994081.0         40    decyzja     2326233  False   True  False   de-cy-zja                 3                 7       .*a$        322   ułatwiać      332152   u-ła-twiać                 3                 8      .*ać$
    : 41              41              38   380972.0         41    zadanie     2320897  False  False   True   za-da-nie                 3                 7       .*e$         38   zaczynać     1939925   za-czy-nać                 3                 8      .*ać$
    : 42              42              37   271077.0         42   nadzieja     2301222  False   True  False  na-dzie-ja                 3                 8       .*a$         37   otrzymać     2030145   o-trzy-mać                 3                 8      .*ać$
    : 43              43              32   190901.0         43    element     2273163   True  False  False   e-le-ment                 3                 7       .*t$         32   zajmować     2082262   zaj-mo-wać                 3                 8    .*ować$
    : 44              44              31   176443.0         44     budowa     2269943  False   True  False    bu-do-wa                 3                 6      .*wa$         31    zmienić     2093500     zmie-nić                 2                 7      .*ić$
    :
    :END:

*** DONE Split =pairs= by the grammatical gender class

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

s0004_out_pairs_mas = s0004_out_pairs[ s0004_out_pairs["M"] ].copy()
s0004_out_pairs_fem = s0004_out_pairs[ s0004_out_pairs["F"] ].copy()
s0004_out_pairs_neu = s0004_out_pairs[ s0004_out_pairs["N"] ].copy()

s0004_out_pairs_mas.drop( columns=["M","F","N",], inplace=True, errors="ignore", )
s0004_out_pairs_fem.drop( columns=["M","F","N",], inplace=True, errors="ignore", )
s0004_out_pairs_neu.drop( columns=["M","F","N",], inplace=True, errors="ignore", )

print( "s0004_out_pairs_mas.shape: " + str( s0004_out_pairs_mas.shape ) )
print( "s0004_out_pairs_fem.shape: " + str( s0004_out_pairs_fem.shape ) )
print( "s0004_out_pairs_neu.shape: " + str( s0004_out_pairs_neu.shape ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[19]:
    # output
    : s0004_out_pairs_mas.shape: (165, 17)
    : s0004_out_pairs_fem.shape: (137, 17)
    : s0004_out_pairs_neu.shape: (35, 17)
    :
    :END:

*** DONE Sort by distance, and frequencies

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

s0004_out_pairs_mas.sort_values( by=["FREQ_verbs","FREQ_nouns",], axis=0, ascending=False, inplace=True, )
s0004_out_pairs_fem.sort_values( by=["FREQ_verbs","FREQ_nouns",], axis=0, ascending=False, inplace=True, )
s0004_out_pairs_neu.sort_values( by=["FREQ_verbs","FREQ_nouns",], axis=0, ascending=False, inplace=True, )

s0004_out_pairs_mas.sort_values( by=["YZ_dists",], axis=0, ascending=True, inplace=True, )
s0004_out_pairs_fem.sort_values( by=["YZ_dists",], axis=0, ascending=True, inplace=True, )
s0004_out_pairs_neu.sort_values( by=["YZ_dists",], axis=0, ascending=True, inplace=True, )

FIN_LEN = 35

assert FIN_LEN <= min( [ s0004_out_pairs_mas.shape[0], s0004_out_pairs_fem.shape[0], s0004_out_pairs_neu.shape[0] ] ), "FIN_LEN should be not grater than min of the row counts for s0004_out_pairs*"

s0004_out_pairs_mas = s0004_out_pairs_mas[:FIN_LEN]
s0004_out_pairs_fem = s0004_out_pairs_fem[:FIN_LEN]
s0004_out_pairs_neu = s0004_out_pairs_neu[:FIN_LEN]


    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[20]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

df_list = [  s0004_out_pairs_mas,   s0004_out_pairs_fem,   s0004_out_pairs_neu,  ]
df_info = [ "s0004_out_pairs_mas", "s0004_out_pairs_fem", "s0004_out_pairs_neu", ]
df_head = 45
df_tail = 0

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[22]:
    # output
    : ===========================================================================
    : s0004_out_pairs_mas
    : ===========================================================================
    : idx count: 35
    : row count: 17  ['row_nouns_idx0', 'col_verbs_idx0', 'YZ_dists', 'idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :      row_nouns_idx0  col_verbs_idx0  YZ_dists  idx_nouns WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns  idx_verbs WORD_verbs  FREQ_verbs   SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 261             261             189      45.0        261    podmiot      600584    pod-miot                 2                 7       .*t$        189     wpisać      600539      wpi-sać                 2                 6      .*ać$
    : 302             302             218      91.0        302     sektor      514815     sek-tor                 2                 6       .*r$        218   ukończyć      514724   u-koń-czyć                 3                 8      .*yć$
    : 260             260             187     538.0        260    kawałek      601455   ka-wa-łek                 3                 7       .*k$        187   udzielać      600917   u-dzie-lać                 3                 8      .*ać$
    : 281             281             206     776.0        281     zachód      553205     za-chód                 2                 6       .*d$        206   spojrzeć      552429    spoj-rzeć                 2                 8      .*eć$
    : 250             250             178     899.0        250    rozmiar      623962    roz-miar                 2                 7       .*r$        178     pełnić      623063      peł-nić                 2                 6      .*ić$
    : 254             254             184     921.0        254     pogląd      610280     po-gląd                 2                 6       .*d$        184   opisywać      609359  o-pi-sy-wać                 4                 8    .*ywać$
    : 135             135              97    1087.0        135    student     1086221    stu-dent                 2                 7       .*t$         97   rozwijać     1085134   roz-wi-jać                 3                 8      .*ać$
    : 312             312             230    1337.0        312   czwartek      489188   czwar-tek                 2                 8       .*k$        230    mieścić      487851     mie-ścić                 2                 7      .*ić$
    : 259             259             188    1604.0        259   samorząd      602313  sa-mo-rząd                 3                 8       .*d$        188   otwierać      600709   o-twie-rać                 3                 8      .*ać$
    : 270             270             199    1685.0        270     zamiar      580356     za-miar                 2                 6       .*r$        199     ruszyć      578671      ru-szyć                 2                 6      .*yć$
    : 142             142             104    1773.0        142    oddział     1051807    od-dział                 2                 7       .*ł$        104    ustalić     1050034    u-sta-lić                 3                 7      .*ić$
    : 300             300             217    2014.0        300     wtorek      520403     wto-rek                 2                 6       .*k$        217     różnić      518389      róż-nić                 2                 6      .*ić$
    : 220             220             162    2189.0        220     piątek      694043     pią-tek                 2                 6       .*k$        162     leczyć      691854      le-czyć                 2                 6      .*yć$
    : 232             232             171    2211.0        232     spokój      657344     spo-kój                 2                 6       .*j$        171    ogłosić      655133    o-gło-sić                 3                 7      .*ić$
    : 304             304             220    2403.0        304     format      507084     for-mat                 2                 6       .*t$        220    wysyłać      504681    wy-sy-łać                 3                 7      .*ać$
    : 172             172             130    2817.0        172    gatunek      828416   ga-tu-nek                 3                 7       .*k$        130     życzyć      825599      ży-czyć                 2                 6      .*yć$
    : 282             282             209    2848.0        282     kamień      550594     ka-mień                 2                 6       .*ń$        209    spędzić      547746     spę-dzić                 2                 7      .*ić$
    : 125             125              92    2973.0        125     dostęp     1126052     do-stęp                 2                 6       .*p$         92   zapewnić     1123079   za-pew-nić                 3                 8      .*ić$
    : 236             236             174    3060.0        236    autobus      646733   au-to-bus                 3                 7       .*s$        174   utworzyć      643673   u-two-rzyć                 3                 8      .*yć$
    : 336             336             242    3088.0        336    magazyn      451186   ma-ga-zyn                 3                 7       .*n$        242     rzucić      448098      rzu-cić                 2                 6      .*ić$
    : 321             321             235    3092.0        321     symbol      477630     sym-bol                 2                 6       .*l$        235    przejąć      474538     prze-jąć                 2                 7      .*ąć$
    : 99               99              59    3141.0         99     kredyt     1398173     kre-dyt                 2                 6       .*t$         59     stawać     1395032      sta-wać                 2                 6      .*ać$
    : 185             185             139    3286.0        185     aparat      786385    a-pa-rat                 3                 6       .*t$        139    zamknąć      783099     za-mknąć                 2                 7     .*nąć$
    : 123             123              85    3469.0        123     powrót     1170227     po-wrót                 2                 6       .*t$         85    podawać     1166758    po-da-wać                 3                 7      .*ać$
    : 311             311             231    3587.0        311     wyścig      490833     wy-ścig                 2                 6       .*g$        231   podnosić      487246   pod-no-sić                 3                 8      .*ić$
    : 258             258             190    3790.0        258   instytut      603750  in-sty-tut                 3                 8       .*t$        190     zebrać      599960      ze-brać                 2                 6      .*ać$
    : 177             177             135    3818.0        177   standard      806051   stan-dard                 2                 8       .*d$        135     sądzić      802233      są-dzić                 2                 6      .*ić$
    : 274             274             201    4006.0        274     pakiet      572349     pa-kiet                 2                 6       .*t$        201    panować      568343    pa-no-wać                 3                 7    .*ować$
    : 228             228             166    4581.0        228     klimat      673604     kli-mat                 2                 6       .*t$        166    dzielić      669023     dzie-lić                 2                 7      .*ić$
    : 117             117              80    4668.0        117    szpital     1205473    szpi-tal                 2                 7       .*l$         80   wchodzić     1200805    wcho-dzić                 2                 8      .*ić$
    : 325             325             240    4674.0        325   dziennik      461403   dzien-nik                 2                 8       .*k$        240    wywołać      456729    wy-wo-łać                 3                 7      .*ać$
    : 215             215             155    4770.0        215    trening      708381    tre-ning                 2                 7       .*g$        155   spełniać      703611    speł-niać                 2                 8      .*ać$
    : 280             280             204    4863.0        280    weekend      560298    week-end                 2                 7       .*d$        204   wypełnić      555435   wy-peł-nić                 3                 8      .*ić$
    : 101             101              68    5424.0        101   grudzień     1330799   gru-dzień                 2                 8       .*ń$         68     starać     1325375      sta-rać                 2                 6      .*ać$
    : 251             251             181    5476.0        251    alkohol      619491   al-ko-hol                 3                 7       .*l$        181   zachęcać      614015   za-chę-cać                 3                 8      .*ać$
    : ===========================================================================
    : s0004_out_pairs_fem
    : ===========================================================================
    : idx count: 35
    : row count: 17  ['row_nouns_idx0', 'col_verbs_idx0', 'YZ_dists', 'idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :      row_nouns_idx0  col_verbs_idx0  YZ_dists  idx_nouns WORD_nouns  FREQ_nouns   SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns  idx_verbs WORD_verbs  FREQ_verbs  SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 313             313             229     142.0        313   przyroda      488502   przy-ro-da                 3                 8      .*da$        229   zostawić      488360  zo-sta-wić                 3                 8      .*ić$
    : 253             253             179     619.0        253     pogoda      617652     po-go-da                 3                 6      .*da$        179    wpływać      617033    wpły-wać                 2                 7    .*ywać$
    : 308             308             227     881.0        308     stawka      496841      staw-ka                 2                 6      .*ka$        227   pojechać      495960  po-je-chać                 3                 8      .*ać$
    : 154             154             116    1068.0        154    działka      952292     dział-ka                 2                 7      .*ka$        116   utrzymać      951224  u-trzy-mać                 3                 8      .*ać$
    : 221             221             161    1177.0        221   operacja      693812  o-pe-ra-cja                 4                 8       .*a$        161   spotykać      692635  spo-ty-kać                 3                 8      .*ać$
    : 219             219             160    1213.0        219     istota      694263     i-sto-ta                 3                 6      .*ta$        160    zgłosić      693050    zgło-sić                 2                 7      .*ić$
    : 296             296             212    1839.0        296    sekunda      535802    se-kun-da                 3                 7      .*da$        212   zdobywać      533963  zdo-by-wać                 3                 8    .*ywać$
    : 324             324             239    1906.0        324    porażka      461987    po-raż-ka                 3                 7      .*ka$        239    odebrać      460081   o-de-brać                 3                 7      .*ać$
    : 276             276             202    2274.0        276    poprawa      568711    po-pra-wa                 3                 7      .*wa$        202    urodzić      566437   u-ro-dzić                 3                 7      .*ić$
    : 315             315             232    2413.0        315     kamera      484712     ka-me-ra                 3                 6      .*ra$        232    śpiewać      482299    śpie-wać                 2                 7      .*ać$
    : 305             305             225    2660.0        305    ścieżka      503101     ścież-ka                 2                 7      .*ka$        225   usłyszeć      500441  u-sły-szeć                 3                 8      .*eć$
    : 322             322             234    2722.0        322   tematyka      477530  te-ma-ty-ka                 4                 8      .*ka$        234    uznawać      474808   u-zna-wać                 3                 7      .*ać$
    : 227             227             165    2852.0        227   placówka      675580   pla-ców-ka                 3                 8      .*ka$        165     wiązać      672728     wią-zać                 2                 6      .*ać$
    : 160             160             122    2879.0        160     opieka      906626     o-pie-ka                 3                 6      .*ka$        122    słuchać      903747    słu-chać                 2                 7      .*ać$
    : 297             297             214    3237.0        297    warstwa      531181     war-stwa                 2                 7      .*wa$        214   pozbawić      527944  po-zba-wić                 3                 8      .*ić$
    : 153             153             117    3650.0        153   promocja      952492   pro-mo-cja                 3                 8       .*a$        117   skończyć      948842   skoń-czyć                 2                 8      .*yć$
    : 252             252             180    4042.0        252     lekcja      618196      lek-cja                 2                 6       .*a$        180    włączyć      614154    włą-czyć                 2                 7      .*yć$
    : 201             201             143    4256.0        201     emocja      750595     e-mo-cja                 3                 6       .*a$        143    nauczyć      746339    na-uczyć                 2                 7      .*yć$
    : 306             306             226    4685.0        306   przygoda      500761   przy-go-da                 3                 8      .*da$        226    zgodzić      496076    zgo-dzić                 2                 7      .*ić$
    : 257             257             191    4841.0        257    kolejka      604533    ko-lej-ka                 3                 7      .*ka$        191   zaprosić      599692  za-pro-sić                 3                 8      .*ić$
    : 295             295             213    5351.0        295     wiosna      538730      wio-sna                 2                 6      .*na$        213    położyć      533379   po-ło-żyć                 3                 7      .*yć$
    : 217             217             157    5540.0        217    agencja      703140    a-gen-cja                 3                 7       .*a$        157    ustawić      697600   u-sta-wić                 3                 7      .*ić$
    : 231             231             170    6335.0        231   siedziba      663529   sie-dzi-ba                 3                 8      .*ba$        170     radzić      657194     ra-dzić                 2                 6      .*ić$
    : 141             141             100    6389.0        141     partia     1061773      par-tia                 2                 6       .*a$        100    zwrócić     1055384    zwró-cić                 2                 7      .*ić$
    : 183             183             137    6487.0        183    gwiazda      793178     gwiaz-da                 2                 7     .*zda$        137    wskazać      786691    wska-zać                 2                 7      .*ać$
    : 214             214             156    7417.0        214    galeria      709572    ga-le-ria                 3                 7       .*a$        156    pokonać      702155   po-ko-nać                 3                 7      .*ać$
    : 53               53              34    7590.0         53    kultura     2047137    kul-tu-ra                 3                 7      .*ra$         34    pojawić     2039547   po-ja-wić                 3                 7      .*ić$
    : 247             247             177    7876.0        247   fundacja      632703   fun-da-cja                 3                 8       .*a$        177     nazwać      624827     na-zwać                 2                 6      .*ać$
    : 174             174             134    8750.0        174     robota      814269     ro-bo-ta                 3                 6      .*ta$        134     oprzeć      805519     o-przeć                 2                 6      .*eć$
    : 155             155             119    9423.0        155     bramka      941832      bram-ka                 2                 6      .*ka$        119    nadawać      932409    nada-wać                 2                 7      .*ać$
    : 269             269             200    9481.0        269    religia      581129    re-li-gia                 3                 7       .*a$        200    powołać      571648   po-wo-łać                 3                 7      .*ać$
    : 130             130              95    9633.0        130     ściana     1108058      ścia-na                 2                 6      .*na$         95    pomagać     1098425   po-ma-gać                 3                 7      .*ać$
    : 116             116              81    9965.0        116    policja     1208431    po-li-cja                 3                 7       .*a$         81   zachować     1198466  za-cho-wać                 3                 8    .*ować$
    : 204             204             151   10011.0        204     branża      735805      bran-ża                 2                 6       .*a$        151   obejrzeć      725794  o-bej-rzeć                 3                 8      .*eć$
    : 264             264             197   10076.0        264   atrakcja      594702   a-trak-cja                 3                 8       .*a$        197     rosnąć      584626     ro-snąć                 2                 6     .*nąć$
    : ===========================================================================
    : s0004_out_pairs_neu
    : ===========================================================================
    : idx count: 35
    : row count: 17  ['row_nouns_idx0', 'col_verbs_idx0', 'YZ_dists', 'idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :      row_nouns_idx0  col_verbs_idx0   YZ_dists  idx_nouns WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns  idx_verbs WORD_verbs  FREQ_verbs  SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 298             298             216     1197.0        298   południe      525246  po-łu-dnie                 3                 8       .*e$        216    wykazać      524049   wy-ka-zać                 3                 7      .*ać$
    : 186             186             141     2174.0        186   nazwisko      781186  na-zwi-sko                 3                 8      .*ko$        141   postawić      779012  po-sta-wić                 3                 8      .*ić$
    : 152             152             112     2537.0        152     medium      963970     me-dium                 2                 6      .*um$        112   zauważyć      961433  za-uwa-żyć                 3                 8      .*yć$
    : 262             262             192     2552.0        262   poczucie      599769  po-czu-cie                 3                 8       .*e$        192    chronić      597217    chro-nić                 2                 7      .*ić$
    : 184             184             138     3576.0        184   wsparcie      788614   wspar-cie                 2                 8       .*e$        138   wspierać      785038   wspie-rać                 2                 8      .*ać$
    : 317             317             233     3583.0        317   jedzenie      479058  je-dze-nie                 3                 8       .*e$        233    opierać      475475   o-pie-rać                 3                 7      .*ać$
    : 256             256             186     3602.0        256     wojsko      605803     woj-sko                 2                 6      .*ko$        186     pobrać      602201     po-brać                 2                 6      .*ać$
    : 171             171             131     9372.0        171    wnętrze      834459    wnę-trze                 2                 7       .*e$        131     opisać      825087    o-pi-sać                 3                 6      .*ać$
    : 161             161             123    10147.0        161     dzieło      904326     dzie-ło                 2                 6      .*ło$        123     czynić      894179     czy-nić                 2                 6      .*ić$
    : 255             255             193    11737.0        255     paliwo      608160    pa-li-wo                 3                 6      .*wo$        193     dziwić      596423     dzi-wić                 2                 6      .*ić$
    : 207             207             154    14138.0        207   zjawisko      721485  zja-wi-sko                 3                 8      .*ko$        154    pragnąć      707347    pra-gnąć                 2                 7     .*nąć$
    : 294             294             215    15127.0        294    wyjście      540531    wyj-ście                 2                 7       .*e$        215    wyrazić      525404   wy-ra-zić                 3                 7      .*ić$
    : 331             331             247    15803.0        331   widzenie      455969  wi-dze-nie                 3                 8       .*e$        247     lecieć      440166     le-cieć                 2                 6      .*eć$
    : 148             148             109    16157.0        148    pojęcie     1017281   po-ję-cie                 3                 7       .*e$        109    kończyć     1001124    koń-czyć                 2                 7      .*yć$
    : 223             223             169    33804.0        223   leczenie      691191  le-cze-nie                 3                 8       .*e$        169   dostawać      657387  do-sta-wać                 3                 8      .*ać$
    : 293             293             223    37702.0        293    osiedle      540965   o-sie-dle                 3                 7       .*e$        223     budzić      503263     bu-dzić                 2                 6      .*ić$
    : 52               52              35    38343.0         52    centrum     2072348    cen-trum                 2                 7      .*um$         35   rozumieć     2034005  ro-zu-mieć                 3                 8      .*eć$
    : 291             291             224    41280.0        291    jezioro      542873   je-zio-ro                 3                 7      .*ro$        224   zarabiać      501593  za-ra-biać                 3                 8      .*ać$
    : 244             244             194    42657.0        244     boisko      637772     bo-isko                 2                 6      .*ko$        194   przestać      595115   prze-stać                 2                 8      .*ać$
    : 194             194             153    45107.0        194    uczucie      765907   u-czu-cie                 3                 7       .*e$        153   poruszać      720800  po-ru-szać                 3                 8      .*ać$
    : 316             316             253    51300.0        316     drewno      480126     drew-no                 2                 6      .*no$        253   odbierać      428826  od-bie-rać                 3                 8      .*ać$
    : 310             310             255    69139.0        310   lotnisko      495671  lot-ni-sko                 3                 8      .*ko$        255    opuścić      426532   o-pu-ścić                 3                 7      .*ić$
    : 34               34              19    80069.0         34    badanie     2635110   ba-da-nie                 3                 7       .*e$         19   stosować     2555041  sto-so-wać                 3                 8    .*ować$
    : 76               76              48    99499.0         76    zdrowie     1705478    zdro-wie                 2                 7       .*e$         48     myślić     1605979     my-ślić                 2                 6      .*ić$
    : 18               18              12   154749.0         18     źródło     3149575     źró-dło                 2                 6      .*ło$         12    napisać     2994826   na-pi-sać                 3                 7      .*ać$
    : 268             268             267   184906.0        268   marzenie      581158  ma-rze-nie                 3                 8       .*e$        267    osiągać      396252   o-sią-gać                 3                 7      .*ać$
    : 41               41              38   380972.0         41    zadanie     2320897   za-da-nie                 3                 7       .*e$         38   zaczynać     1939925  za-czy-nać                 3                 8      .*ać$
    : 192             192             287   390339.0        192     ryzyko      770517    ry-zy-ko                 3                 6      .*ko$        287     spadać      380178     spa-dać                 2                 6      .*ać$
    : 190             190             289   399407.0        190     muzeum      776358     mu-zeum                 2                 6      .*um$        289     rodzić      376951     ro-dzić                 2                 6      .*ić$
    : 158             158             300   548942.0        158     drzewo      909282     drze-wo                 2                 6      .*wo$        300     biegać      360340     bie-gać                 2                 6      .*ać$
    : 106             106             304   935349.0        106   wrażenie     1289242  wra-że-nie                 3                 8       .*e$        304   zgłaszać      353893   zgła-szać                 2                 8      .*ać$
    : 1                 1               1  1768092.0          1    miejsce    10632564    miej-sce                 2                 7       .*e$          1     musieć     8864472     mu-sieć                 2                 6      .*eć$
    : 25               25             326  2457586.0         25     zdanie     2787483     zda-nie                 2                 6       .*e$        326   wyjechać      329897  wy-je-chać                 3                 8      .*ać$
    : 2                 2               2  3094213.0          2    dziecko     8604939    dziec-ko                 2                 7      .*ko$          2     zrobić     5510726     zro-bić                 2                 6      .*ić$
    : 12               12             333  3415607.0         12    pytanie     3736580   py-ta-nie                 3                 7       .*e$        333     skupić      320973     sku-pić                 2                 6      .*ić$
    :
    :END:

** Proc 03: Export for =Wuggy=
*** DONE Export ~*.tsv~ 

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

if not DEMO_MODE:
    s0004_out_pairs_mas.to_csv( "./data_out/s0004_exp_01_pairs_mas_TODO.tsv", sep="\t", columns=[ "WORD_nouns", "SYLL_nouns", "SUFF_nouns", ], index=False, header=False )
    s0004_out_pairs_fem.to_csv( "./data_out/s0004_exp_02_pairs_fem_TODO.tsv", sep="\t", columns=[ "WORD_nouns", "SYLL_nouns", "SUFF_nouns", ], index=False, header=False )
    s0004_out_pairs_neu.to_csv( "./data_out/s0004_exp_03_pairs_neu_TODO.tsv", sep="\t", columns=[ "WORD_nouns", "SYLL_nouns", "SUFF_nouns", ], index=False, header=False )
    s0004_out_pairs_mas.to_csv( "./data_out/s0004_exp_04_pairs_mas_TODO.tsv", sep="\t", columns=[ "WORD_verbs", "SYLL_verbs", "SUFF_verbs", ], index=False, header=False )
    s0004_out_pairs_fem.to_csv( "./data_out/s0004_exp_05_pairs_fem_TODO.tsv", sep="\t", columns=[ "WORD_verbs", "SYLL_verbs", "SUFF_verbs", ], index=False, header=False )
    s0004_out_pairs_neu.to_csv( "./data_out/s0004_exp_06_pairs_neu_TODO.tsv", sep="\t", columns=[ "WORD_verbs", "SYLL_verbs", "SUFF_verbs", ], index=False, header=False )
    print("Exported *.tsv")
else:
    print("*** Not exporting any *.tsv files -- DEMO_MODE is ON!!! ***")
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[150]:
    # output
    : Exported *.tsv
    :
    :END:

*** DONE Concatenate ~*.tsv~ files

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

filenames = [
    "./data_out/s0004_exp_01_pairs_mas_TODO.tsv",
    "./data_out/s0004_exp_02_pairs_fem_TODO.tsv",
    "./data_out/s0004_exp_03_pairs_neu_TODO.tsv",
    "./data_out/s0004_exp_04_pairs_mas_TODO.tsv",
    "./data_out/s0004_exp_05_pairs_fem_TODO.tsv",
    "./data_out/s0004_exp_06_pairs_neu_TODO.tsv",
]
with open("./data_out/s0004_exp_00_pairs_all_TODO.tsv", 'w') as outfile:
    for fname in filenames:
         with open(fname) as infile:
             for line in infile:
                 outfile.write(line)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[156]:
    :END:

** Proc 51: Export for =Wuggy= with suffixes ~swapped~ around
*** DONE Export ~*.tsv~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

if not DEMO_MODE:
    s0004_out_pairs_mas.to_csv( "./data_out/s0004_exp_51_pairs_mas_TODO.tsv", sep="\t", columns=[ "WORD_nouns", "SYLL_nouns", "SUFF_verbs", ], index=False, header=False )
    s0004_out_pairs_fem.to_csv( "./data_out/s0004_exp_52_pairs_fem_TODO.tsv", sep="\t", columns=[ "WORD_nouns", "SYLL_nouns", "SUFF_verbs", ], index=False, header=False )
    s0004_out_pairs_neu.to_csv( "./data_out/s0004_exp_53_pairs_neu_TODO.tsv", sep="\t", columns=[ "WORD_nouns", "SYLL_nouns", "SUFF_verbs", ], index=False, header=False )
    s0004_out_pairs_mas.to_csv( "./data_out/s0004_exp_54_pairs_mas_TODO.tsv", sep="\t", columns=[ "WORD_verbs", "SYLL_verbs", "SUFF_nouns", ], index=False, header=False )
    s0004_out_pairs_fem.to_csv( "./data_out/s0004_exp_55_pairs_fem_TODO.tsv", sep="\t", columns=[ "WORD_verbs", "SYLL_verbs", "SUFF_nouns", ], index=False, header=False )
    s0004_out_pairs_neu.to_csv( "./data_out/s0004_exp_56_pairs_neu_TODO.tsv", sep="\t", columns=[ "WORD_verbs", "SYLL_verbs", "SUFF_nouns", ], index=False, header=False )
    print("Exported *.tsv")
else:
    print("*** Not exporting any *.tsv files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

   #+RESULTS:
   :RESULTS:
   # Out[23]:
   # output
   : Exported *.tsv
   :
   :END:

*** DONE Concatenate ~*.tsv~ files

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

filenames = [
    "./data_out/s0004_exp_51_pairs_mas_TODO.tsv",
    "./data_out/s0004_exp_52_pairs_fem_TODO.tsv",
    "./data_out/s0004_exp_53_pairs_neu_TODO.tsv",
    "./data_out/s0004_exp_54_pairs_mas_TODO.tsv",
    "./data_out/s0004_exp_55_pairs_fem_TODO.tsv",
    "./data_out/s0004_exp_56_pairs_neu_TODO.tsv",
]
with open("./data_out/s0004_exp_50_pairs_all_TODO.tsv", 'w') as outfile:
    for fname in filenames:
         with open(fname) as infile:
             for line in infile:
                 outfile.write(line)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[24]:
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0004.py

if not DEMO_MODE:
    df_to_xlsx( df_data=s0004_out_pairs_mas, df_name="s0004_out_pairs_mas", df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0004_out_pairs_fem, df_name="s0004_out_pairs_fem", df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0004_out_pairs_neu, df_name="s0004_out_pairs_neu", df_path="data_out", add_time=False, verbose=1, )
    print( "="*75 )
    print("Saved *.xlsx")
else:
    print("*** Not saving any *.xlsx files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[151]:
    # output
    : Saving DataFrame as: data_out/s0004_out_pairs_mas.xlsx
    : Saving DataFrame as: data_out/s0004_out_pairs_fem.xlsx
    : Saving DataFrame as: data_out/s0004_out_pairs_neu.xlsx
    : ===========================================================================
    : Saved *.xlsx
    :
    :END:

* DONE Stage 0005: Verify =Wuggy= output
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0004_out_pairs_mas = pd.read_excel( "./data_out/s0004_out_pairs_mas.xlsx", ignore_index=True, )
s0004_out_pairs_fem = pd.read_excel( "./data_out/s0004_out_pairs_fem.xlsx", ignore_index=True, )
s0004_out_pairs_neu = pd.read_excel( "./data_out/s0004_out_pairs_neu.xlsx", ignore_index=True, )

s0004_out_pairs_mas = s0004_out_pairs_mas.replace( np.nan, "", regex=True )
s0004_out_pairs_fem = s0004_out_pairs_fem.replace( np.nan, "", regex=True )
s0004_out_pairs_neu = s0004_out_pairs_neu.replace( np.nan, "", regex=True )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[12]:
    :END:

** Proc 01: Reintroduce source =nouns= and =verbs=
*** DONE Re-initialize (copy) the =pairs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_out_pairs_mas = s0004_out_pairs_mas.copy()
s0005_out_pairs_fem = s0004_out_pairs_fem.copy()
s0005_out_pairs_neu = s0004_out_pairs_neu.copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[13]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_out_pairs_mas,  s0005_out_pairs_fem,  s0005_out_pairs_neu,  ]
df_info = [ "s0005_out_pairs_mas","s0005_out_pairs_fem","s0005_out_pairs_neu", ]
df_head = 45
df_tail = 0

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[14]:
    # output
    : ===========================================================================
    : s0005_out_pairs_mas
    : ===========================================================================
    : idx count: 35
    : row count: 18  ['Unnamed: 0', 'row_nouns_idx0', 'col_verbs_idx0', 'YZ_dists', 'idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :     Unnamed: 0  row_nouns_idx0  col_verbs_idx0  YZ_dists  idx_nouns WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns  idx_verbs WORD_verbs  FREQ_verbs   SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 0          261             261             189        45        261    podmiot      600584    pod-miot                 2                 7       .*t$        189     wpisać      600539      wpi-sać                 2                 6      .*ać$
    : 1          302             302             218        91        302     sektor      514815     sek-tor                 2                 6       .*r$        218   ukończyć      514724   u-koń-czyć                 3                 8      .*yć$
    : 2          260             260             187       538        260    kawałek      601455   ka-wa-łek                 3                 7       .*k$        187   udzielać      600917   u-dzie-lać                 3                 8      .*ać$
    : 3          281             281             206       776        281     zachód      553205     za-chód                 2                 6       .*d$        206   spojrzeć      552429    spoj-rzeć                 2                 8      .*eć$
    : 4          250             250             178       899        250    rozmiar      623962    roz-miar                 2                 7       .*r$        178     pełnić      623063      peł-nić                 2                 6      .*ić$
    : 5          254             254             184       921        254     pogląd      610280     po-gląd                 2                 6       .*d$        184   opisywać      609359  o-pi-sy-wać                 4                 8    .*ywać$
    : 6          135             135              97      1087        135    student     1086221    stu-dent                 2                 7       .*t$         97   rozwijać     1085134   roz-wi-jać                 3                 8      .*ać$
    : 7          312             312             230      1337        312   czwartek      489188   czwar-tek                 2                 8       .*k$        230    mieścić      487851     mie-ścić                 2                 7      .*ić$
    : 8          259             259             188      1604        259   samorząd      602313  sa-mo-rząd                 3                 8       .*d$        188   otwierać      600709   o-twie-rać                 3                 8      .*ać$
    : 9          270             270             199      1685        270     zamiar      580356     za-miar                 2                 6       .*r$        199     ruszyć      578671      ru-szyć                 2                 6      .*yć$
    : 10         142             142             104      1773        142    oddział     1051807    od-dział                 2                 7       .*ł$        104    ustalić     1050034    u-sta-lić                 3                 7      .*ić$
    : 11         300             300             217      2014        300     wtorek      520403     wto-rek                 2                 6       .*k$        217     różnić      518389      róż-nić                 2                 6      .*ić$
    : 12         220             220             162      2189        220     piątek      694043     pią-tek                 2                 6       .*k$        162     leczyć      691854      le-czyć                 2                 6      .*yć$
    : 13         232             232             171      2211        232     spokój      657344     spo-kój                 2                 6       .*j$        171    ogłosić      655133    o-gło-sić                 3                 7      .*ić$
    : 14         304             304             220      2403        304     format      507084     for-mat                 2                 6       .*t$        220    wysyłać      504681    wy-sy-łać                 3                 7      .*ać$
    : 15         172             172             130      2817        172    gatunek      828416   ga-tu-nek                 3                 7       .*k$        130     życzyć      825599      ży-czyć                 2                 6      .*yć$
    : 16         282             282             209      2848        282     kamień      550594     ka-mień                 2                 6       .*ń$        209    spędzić      547746     spę-dzić                 2                 7      .*ić$
    : 17         125             125              92      2973        125     dostęp     1126052     do-stęp                 2                 6       .*p$         92   zapewnić     1123079   za-pew-nić                 3                 8      .*ić$
    : 18         236             236             174      3060        236    autobus      646733   au-to-bus                 3                 7       .*s$        174   utworzyć      643673   u-two-rzyć                 3                 8      .*yć$
    : 19         336             336             242      3088        336    magazyn      451186   ma-ga-zyn                 3                 7       .*n$        242     rzucić      448098      rzu-cić                 2                 6      .*ić$
    : 20         321             321             235      3092        321     symbol      477630     sym-bol                 2                 6       .*l$        235    przejąć      474538     prze-jąć                 2                 7      .*ąć$
    : 21          99              99              59      3141         99     kredyt     1398173     kre-dyt                 2                 6       .*t$         59     stawać     1395032      sta-wać                 2                 6      .*ać$
    : 22         185             185             139      3286        185     aparat      786385    a-pa-rat                 3                 6       .*t$        139    zamknąć      783099     za-mknąć                 2                 7     .*nąć$
    : 23         123             123              85      3469        123     powrót     1170227     po-wrót                 2                 6       .*t$         85    podawać     1166758    po-da-wać                 3                 7      .*ać$
    : 24         311             311             231      3587        311     wyścig      490833     wy-ścig                 2                 6       .*g$        231   podnosić      487246   pod-no-sić                 3                 8      .*ić$
    : 25         258             258             190      3790        258   instytut      603750  in-sty-tut                 3                 8       .*t$        190     zebrać      599960      ze-brać                 2                 6      .*ać$
    : 26         177             177             135      3818        177   standard      806051   stan-dard                 2                 8       .*d$        135     sądzić      802233      są-dzić                 2                 6      .*ić$
    : 27         274             274             201      4006        274     pakiet      572349     pa-kiet                 2                 6       .*t$        201    panować      568343    pa-no-wać                 3                 7    .*ować$
    : 28         228             228             166      4581        228     klimat      673604     kli-mat                 2                 6       .*t$        166    dzielić      669023     dzie-lić                 2                 7      .*ić$
    : 29         117             117              80      4668        117    szpital     1205473    szpi-tal                 2                 7       .*l$         80   wchodzić     1200805    wcho-dzić                 2                 8      .*ić$
    : 30         325             325             240      4674        325   dziennik      461403   dzien-nik                 2                 8       .*k$        240    wywołać      456729    wy-wo-łać                 3                 7      .*ać$
    : 31         215             215             155      4770        215    trening      708381    tre-ning                 2                 7       .*g$        155   spełniać      703611    speł-niać                 2                 8      .*ać$
    : 32         280             280             204      4863        280    weekend      560298    week-end                 2                 7       .*d$        204   wypełnić      555435   wy-peł-nić                 3                 8      .*ić$
    : 33         101             101              68      5424        101   grudzień     1330799   gru-dzień                 2                 8       .*ń$         68     starać     1325375      sta-rać                 2                 6      .*ać$
    : 34         251             251             181      5476        251    alkohol      619491   al-ko-hol                 3                 7       .*l$        181   zachęcać      614015   za-chę-cać                 3                 8      .*ać$
    : ===========================================================================
    : s0005_out_pairs_fem
    : ===========================================================================
    : idx count: 35
    : row count: 18  ['Unnamed: 0', 'row_nouns_idx0', 'col_verbs_idx0', 'YZ_dists', 'idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :     Unnamed: 0  row_nouns_idx0  col_verbs_idx0  YZ_dists  idx_nouns WORD_nouns  FREQ_nouns   SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns  idx_verbs WORD_verbs  FREQ_verbs  SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 0          313             313             229       142        313   przyroda      488502   przy-ro-da                 3                 8      .*da$        229   zostawić      488360  zo-sta-wić                 3                 8      .*ić$
    : 1          253             253             179       619        253     pogoda      617652     po-go-da                 3                 6      .*da$        179    wpływać      617033    wpły-wać                 2                 7    .*ywać$
    : 2          308             308             227       881        308     stawka      496841      staw-ka                 2                 6      .*ka$        227   pojechać      495960  po-je-chać                 3                 8      .*ać$
    : 3          154             154             116      1068        154    działka      952292     dział-ka                 2                 7      .*ka$        116   utrzymać      951224  u-trzy-mać                 3                 8      .*ać$
    : 4          221             221             161      1177        221   operacja      693812  o-pe-ra-cja                 4                 8       .*a$        161   spotykać      692635  spo-ty-kać                 3                 8      .*ać$
    : 5          219             219             160      1213        219     istota      694263     i-sto-ta                 3                 6      .*ta$        160    zgłosić      693050    zgło-sić                 2                 7      .*ić$
    : 6          296             296             212      1839        296    sekunda      535802    se-kun-da                 3                 7      .*da$        212   zdobywać      533963  zdo-by-wać                 3                 8    .*ywać$
    : 7          324             324             239      1906        324    porażka      461987    po-raż-ka                 3                 7      .*ka$        239    odebrać      460081   o-de-brać                 3                 7      .*ać$
    : 8          276             276             202      2274        276    poprawa      568711    po-pra-wa                 3                 7      .*wa$        202    urodzić      566437   u-ro-dzić                 3                 7      .*ić$
    : 9          315             315             232      2413        315     kamera      484712     ka-me-ra                 3                 6      .*ra$        232    śpiewać      482299    śpie-wać                 2                 7      .*ać$
    : 10         305             305             225      2660        305    ścieżka      503101     ścież-ka                 2                 7      .*ka$        225   usłyszeć      500441  u-sły-szeć                 3                 8      .*eć$
    : 11         322             322             234      2722        322   tematyka      477530  te-ma-ty-ka                 4                 8      .*ka$        234    uznawać      474808   u-zna-wać                 3                 7      .*ać$
    : 12         227             227             165      2852        227   placówka      675580   pla-ców-ka                 3                 8      .*ka$        165     wiązać      672728     wią-zać                 2                 6      .*ać$
    : 13         160             160             122      2879        160     opieka      906626     o-pie-ka                 3                 6      .*ka$        122    słuchać      903747    słu-chać                 2                 7      .*ać$
    : 14         297             297             214      3237        297    warstwa      531181     war-stwa                 2                 7      .*wa$        214   pozbawić      527944  po-zba-wić                 3                 8      .*ić$
    : 15         153             153             117      3650        153   promocja      952492   pro-mo-cja                 3                 8       .*a$        117   skończyć      948842   skoń-czyć                 2                 8      .*yć$
    : 16         252             252             180      4042        252     lekcja      618196      lek-cja                 2                 6       .*a$        180    włączyć      614154    włą-czyć                 2                 7      .*yć$
    : 17         201             201             143      4256        201     emocja      750595     e-mo-cja                 3                 6       .*a$        143    nauczyć      746339    na-uczyć                 2                 7      .*yć$
    : 18         306             306             226      4685        306   przygoda      500761   przy-go-da                 3                 8      .*da$        226    zgodzić      496076    zgo-dzić                 2                 7      .*ić$
    : 19         257             257             191      4841        257    kolejka      604533    ko-lej-ka                 3                 7      .*ka$        191   zaprosić      599692  za-pro-sić                 3                 8      .*ić$
    : 20         295             295             213      5351        295     wiosna      538730      wio-sna                 2                 6      .*na$        213    położyć      533379   po-ło-żyć                 3                 7      .*yć$
    : 21         217             217             157      5540        217    agencja      703140    a-gen-cja                 3                 7       .*a$        157    ustawić      697600   u-sta-wić                 3                 7      .*ić$
    : 22         231             231             170      6335        231   siedziba      663529   sie-dzi-ba                 3                 8      .*ba$        170     radzić      657194     ra-dzić                 2                 6      .*ić$
    : 23         141             141             100      6389        141     partia     1061773      par-tia                 2                 6       .*a$        100    zwrócić     1055384    zwró-cić                 2                 7      .*ić$
    : 24         183             183             137      6487        183    gwiazda      793178     gwiaz-da                 2                 7     .*zda$        137    wskazać      786691    wska-zać                 2                 7      .*ać$
    : 25         214             214             156      7417        214    galeria      709572    ga-le-ria                 3                 7       .*a$        156    pokonać      702155   po-ko-nać                 3                 7      .*ać$
    : 26          53              53              34      7590         53    kultura     2047137    kul-tu-ra                 3                 7      .*ra$         34    pojawić     2039547   po-ja-wić                 3                 7      .*ić$
    : 27         247             247             177      7876        247   fundacja      632703   fun-da-cja                 3                 8       .*a$        177     nazwać      624827     na-zwać                 2                 6      .*ać$
    : 28         174             174             134      8750        174     robota      814269     ro-bo-ta                 3                 6      .*ta$        134     oprzeć      805519     o-przeć                 2                 6      .*eć$
    : 29         155             155             119      9423        155     bramka      941832      bram-ka                 2                 6      .*ka$        119    nadawać      932409    nada-wać                 2                 7      .*ać$
    : 30         269             269             200      9481        269    religia      581129    re-li-gia                 3                 7       .*a$        200    powołać      571648   po-wo-łać                 3                 7      .*ać$
    : 31         130             130              95      9633        130     ściana     1108058      ścia-na                 2                 6      .*na$         95    pomagać     1098425   po-ma-gać                 3                 7      .*ać$
    : 32         116             116              81      9965        116    policja     1208431    po-li-cja                 3                 7       .*a$         81   zachować     1198466  za-cho-wać                 3                 8    .*ować$
    : 33         204             204             151     10011        204     branża      735805      bran-ża                 2                 6       .*a$        151   obejrzeć      725794  o-bej-rzeć                 3                 8      .*eć$
    : 34         264             264             197     10076        264   atrakcja      594702   a-trak-cja                 3                 8       .*a$        197     rosnąć      584626     ro-snąć                 2                 6     .*nąć$
    : ===========================================================================
    : s0005_out_pairs_neu
    : ===========================================================================
    : idx count: 35
    : row count: 18  ['Unnamed: 0', 'row_nouns_idx0', 'col_verbs_idx0', 'YZ_dists', 'idx_nouns', 'WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'idx_verbs', 'WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :     Unnamed: 0  row_nouns_idx0  col_verbs_idx0  YZ_dists  idx_nouns WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns  idx_verbs WORD_verbs  FREQ_verbs  SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 0          298             298             216      1197        298   południe      525246  po-łu-dnie                 3                 8       .*e$        216    wykazać      524049   wy-ka-zać                 3                 7      .*ać$
    : 1          186             186             141      2174        186   nazwisko      781186  na-zwi-sko                 3                 8      .*ko$        141   postawić      779012  po-sta-wić                 3                 8      .*ić$
    : 2          152             152             112      2537        152     medium      963970     me-dium                 2                 6      .*um$        112   zauważyć      961433  za-uwa-żyć                 3                 8      .*yć$
    : 3          262             262             192      2552        262   poczucie      599769  po-czu-cie                 3                 8       .*e$        192    chronić      597217    chro-nić                 2                 7      .*ić$
    : 4          184             184             138      3576        184   wsparcie      788614   wspar-cie                 2                 8       .*e$        138   wspierać      785038   wspie-rać                 2                 8      .*ać$
    : 5          317             317             233      3583        317   jedzenie      479058  je-dze-nie                 3                 8       .*e$        233    opierać      475475   o-pie-rać                 3                 7      .*ać$
    : 6          256             256             186      3602        256     wojsko      605803     woj-sko                 2                 6      .*ko$        186     pobrać      602201     po-brać                 2                 6      .*ać$
    : 7          171             171             131      9372        171    wnętrze      834459    wnę-trze                 2                 7       .*e$        131     opisać      825087    o-pi-sać                 3                 6      .*ać$
    : 8          161             161             123     10147        161     dzieło      904326     dzie-ło                 2                 6      .*ło$        123     czynić      894179     czy-nić                 2                 6      .*ić$
    : 9          255             255             193     11737        255     paliwo      608160    pa-li-wo                 3                 6      .*wo$        193     dziwić      596423     dzi-wić                 2                 6      .*ić$
    : 10         207             207             154     14138        207   zjawisko      721485  zja-wi-sko                 3                 8      .*ko$        154    pragnąć      707347    pra-gnąć                 2                 7     .*nąć$
    : 11         294             294             215     15127        294    wyjście      540531    wyj-ście                 2                 7       .*e$        215    wyrazić      525404   wy-ra-zić                 3                 7      .*ić$
    : 12         331             331             247     15803        331   widzenie      455969  wi-dze-nie                 3                 8       .*e$        247     lecieć      440166     le-cieć                 2                 6      .*eć$
    : 13         148             148             109     16157        148    pojęcie     1017281   po-ję-cie                 3                 7       .*e$        109    kończyć     1001124    koń-czyć                 2                 7      .*yć$
    : 14         223             223             169     33804        223   leczenie      691191  le-cze-nie                 3                 8       .*e$        169   dostawać      657387  do-sta-wać                 3                 8      .*ać$
    : 15         293             293             223     37702        293    osiedle      540965   o-sie-dle                 3                 7       .*e$        223     budzić      503263     bu-dzić                 2                 6      .*ić$
    : 16          52              52              35     38343         52    centrum     2072348    cen-trum                 2                 7      .*um$         35   rozumieć     2034005  ro-zu-mieć                 3                 8      .*eć$
    : 17         291             291             224     41280        291    jezioro      542873   je-zio-ro                 3                 7      .*ro$        224   zarabiać      501593  za-ra-biać                 3                 8      .*ać$
    : 18         244             244             194     42657        244     boisko      637772     bo-isko                 2                 6      .*ko$        194   przestać      595115   prze-stać                 2                 8      .*ać$
    : 19         194             194             153     45107        194    uczucie      765907   u-czu-cie                 3                 7       .*e$        153   poruszać      720800  po-ru-szać                 3                 8      .*ać$
    : 20         316             316             253     51300        316     drewno      480126     drew-no                 2                 6      .*no$        253   odbierać      428826  od-bie-rać                 3                 8      .*ać$
    : 21         310             310             255     69139        310   lotnisko      495671  lot-ni-sko                 3                 8      .*ko$        255    opuścić      426532   o-pu-ścić                 3                 7      .*ić$
    : 22          34              34              19     80069         34    badanie     2635110   ba-da-nie                 3                 7       .*e$         19   stosować     2555041  sto-so-wać                 3                 8    .*ować$
    : 23          76              76              48     99499         76    zdrowie     1705478    zdro-wie                 2                 7       .*e$         48     myślić     1605979     my-ślić                 2                 6      .*ić$
    : 24          18              18              12    154749         18     źródło     3149575     źró-dło                 2                 6      .*ło$         12    napisać     2994826   na-pi-sać                 3                 7      .*ać$
    : 25         268             268             267    184906        268   marzenie      581158  ma-rze-nie                 3                 8       .*e$        267    osiągać      396252   o-sią-gać                 3                 7      .*ać$
    : 26          41              41              38    380972         41    zadanie     2320897   za-da-nie                 3                 7       .*e$         38   zaczynać     1939925  za-czy-nać                 3                 8      .*ać$
    : 27         192             192             287    390339        192     ryzyko      770517    ry-zy-ko                 3                 6      .*ko$        287     spadać      380178     spa-dać                 2                 6      .*ać$
    : 28         190             190             289    399407        190     muzeum      776358     mu-zeum                 2                 6      .*um$        289     rodzić      376951     ro-dzić                 2                 6      .*ić$
    : 29         158             158             300    548942        158     drzewo      909282     drze-wo                 2                 6      .*wo$        300     biegać      360340     bie-gać                 2                 6      .*ać$
    : 30         106             106             304    935349        106   wrażenie     1289242  wra-że-nie                 3                 8       .*e$        304   zgłaszać      353893   zgła-szać                 2                 8      .*ać$
    : 31           1               1               1   1768092          1    miejsce    10632564    miej-sce                 2                 7       .*e$          1     musieć     8864472     mu-sieć                 2                 6      .*eć$
    : 32          25              25             326   2457586         25     zdanie     2787483     zda-nie                 2                 6       .*e$        326   wyjechać      329897  wy-je-chać                 3                 8      .*ać$
    : 33           2               2               2   3094213          2    dziecko     8604939    dziec-ko                 2                 7      .*ko$          2     zrobić     5510726     zro-bić                 2                 6      .*ić$
    : 34          12              12             333   3415607         12    pytanie     3736580   py-ta-nie                 3                 7       .*e$        333     skupić      320973     sku-pić                 2                 6      .*ić$
    :
    :END:

*** DONE Reintroduce =nouns= and =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_mas = s0005_out_pairs_mas[ [ "WORD_nouns", "FREQ_nouns", "SYLL_nouns", "SYLL_COUNT_nouns", "CHAR_COUNT_nouns", "SUFF_nouns", ] ].copy()
s0005_nouns_fem = s0005_out_pairs_fem[ [ "WORD_nouns", "FREQ_nouns", "SYLL_nouns", "SYLL_COUNT_nouns", "CHAR_COUNT_nouns", "SUFF_nouns", ] ].copy()
s0005_nouns_neu = s0005_out_pairs_neu[ [ "WORD_nouns", "FREQ_nouns", "SYLL_nouns", "SYLL_COUNT_nouns", "CHAR_COUNT_nouns", "SUFF_nouns", ] ].copy()
s0005_verbs_mas = s0005_out_pairs_mas[ [ "WORD_verbs", "FREQ_verbs", "SYLL_verbs", "SYLL_COUNT_verbs", "CHAR_COUNT_verbs", "SUFF_verbs", ] ].copy()
s0005_verbs_fem = s0005_out_pairs_fem[ [ "WORD_verbs", "FREQ_verbs", "SYLL_verbs", "SYLL_COUNT_verbs", "CHAR_COUNT_verbs", "SUFF_verbs", ] ].copy()
s0005_verbs_neu = s0005_out_pairs_neu[ [ "WORD_verbs", "FREQ_verbs", "SYLL_verbs", "SYLL_COUNT_verbs", "CHAR_COUNT_verbs", "SUFF_verbs", ] ].copy()

s0005_nouns_mas["M"] = True
s0005_nouns_mas["F"] = False
s0005_nouns_mas["N"] = False

s0005_nouns_fem["M"] = False
s0005_nouns_fem["F"] = True
s0005_nouns_fem["N"] = False

s0005_nouns_neu["M"] = False
s0005_nouns_neu["F"] = False
s0005_nouns_neu["N"] = True

s0005_nouns_all = pd.concat(
    [ s0005_nouns_mas,
      s0005_nouns_fem,
      s0005_nouns_neu,
      ],
    axis=0,
    ignore_index=True, )

s0005_verbs_all = pd.concat(
    [ s0005_verbs_mas,
      s0005_verbs_fem,
      s0005_verbs_neu,
      ],
    axis=0,
    ignore_index=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[15]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_nouns_all,  ]
df_info = [ "s0005_nouns_all", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[16]:
    # output
    : ===========================================================================
    : s0005_nouns_all
    : ===========================================================================
    : idx count: 105
    : row count: 9  ['WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'M', 'F', 'N']
    : ---------------------------------------------------------------------------
    :    WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns     M      F      N
    : 0     podmiot      600584    pod-miot                 2                 7       .*t$  True  False  False
    : 1      sektor      514815     sek-tor                 2                 6       .*r$  True  False  False
    : 2     kawałek      601455   ka-wa-łek                 3                 7       .*k$  True  False  False
    : 3      zachód      553205     za-chód                 2                 6       .*d$  True  False  False
    : 4     rozmiar      623962    roz-miar                 2                 7       .*r$  True  False  False
    : 5      pogląd      610280     po-gląd                 2                 6       .*d$  True  False  False
    : 6     student     1086221    stu-dent                 2                 7       .*t$  True  False  False
    : 7    czwartek      489188   czwar-tek                 2                 8       .*k$  True  False  False
    : 8    samorząd      602313  sa-mo-rząd                 3                 8       .*d$  True  False  False
    : 9      zamiar      580356     za-miar                 2                 6       .*r$  True  False  False
    : 10    oddział     1051807    od-dział                 2                 7       .*ł$  True  False  False
    : 11     wtorek      520403     wto-rek                 2                 6       .*k$  True  False  False
    : 12     piątek      694043     pią-tek                 2                 6       .*k$  True  False  False
    : 13     spokój      657344     spo-kój                 2                 6       .*j$  True  False  False
    : 14     format      507084     for-mat                 2                 6       .*t$  True  False  False
    : 15    gatunek      828416   ga-tu-nek                 3                 7       .*k$  True  False  False
    : 16     kamień      550594     ka-mień                 2                 6       .*ń$  True  False  False
    : 17     dostęp     1126052     do-stęp                 2                 6       .*p$  True  False  False
    : 18    autobus      646733   au-to-bus                 3                 7       .*s$  True  False  False
    : 19    magazyn      451186   ma-ga-zyn                 3                 7       .*n$  True  False  False
    : ---------------------------------------------------------------------------
    :     WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F     N
    : 85     osiedle      540965   o-sie-dle                 3                 7       .*e$  False  False  True
    : 86     centrum     2072348    cen-trum                 2                 7      .*um$  False  False  True
    : 87     jezioro      542873   je-zio-ro                 3                 7      .*ro$  False  False  True
    : 88      boisko      637772     bo-isko                 2                 6      .*ko$  False  False  True
    : 89     uczucie      765907   u-czu-cie                 3                 7       .*e$  False  False  True
    : 90      drewno      480126     drew-no                 2                 6      .*no$  False  False  True
    : 91    lotnisko      495671  lot-ni-sko                 3                 8      .*ko$  False  False  True
    : 92     badanie     2635110   ba-da-nie                 3                 7       .*e$  False  False  True
    : 93     zdrowie     1705478    zdro-wie                 2                 7       .*e$  False  False  True
    : 94      źródło     3149575     źró-dło                 2                 6      .*ło$  False  False  True
    : 95    marzenie      581158  ma-rze-nie                 3                 8       .*e$  False  False  True
    : 96     zadanie     2320897   za-da-nie                 3                 7       .*e$  False  False  True
    : 97      ryzyko      770517    ry-zy-ko                 3                 6      .*ko$  False  False  True
    : 98      muzeum      776358     mu-zeum                 2                 6      .*um$  False  False  True
    : 99      drzewo      909282     drze-wo                 2                 6      .*wo$  False  False  True
    : 100   wrażenie     1289242  wra-że-nie                 3                 8       .*e$  False  False  True
    : 101    miejsce    10632564    miej-sce                 2                 7       .*e$  False  False  True
    : 102     zdanie     2787483     zda-nie                 2                 6       .*e$  False  False  True
    : 103    dziecko     8604939    dziec-ko                 2                 7      .*ko$  False  False  True
    : 104    pytanie     3736580   py-ta-nie                 3                 7       .*e$  False  False  True
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_verbs_all,  ]
df_info = [ "s0005_verbs_all", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[17]:
    # output
    : ===========================================================================
    : s0005_verbs_all
    : ===========================================================================
    : idx count: 105
    : row count: 6  ['WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs']
    : ---------------------------------------------------------------------------
    :    WORD_verbs  FREQ_verbs   SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 0      wpisać      600539      wpi-sać                 2                 6      .*ać$
    : 1    ukończyć      514724   u-koń-czyć                 3                 8      .*yć$
    : 2    udzielać      600917   u-dzie-lać                 3                 8      .*ać$
    : 3    spojrzeć      552429    spoj-rzeć                 2                 8      .*eć$
    : 4      pełnić      623063      peł-nić                 2                 6      .*ić$
    : 5    opisywać      609359  o-pi-sy-wać                 4                 8    .*ywać$
    : 6    rozwijać     1085134   roz-wi-jać                 3                 8      .*ać$
    : 7     mieścić      487851     mie-ścić                 2                 7      .*ić$
    : 8    otwierać      600709   o-twie-rać                 3                 8      .*ać$
    : 9      ruszyć      578671      ru-szyć                 2                 6      .*yć$
    : 10    ustalić     1050034    u-sta-lić                 3                 7      .*ić$
    : 11     różnić      518389      róż-nić                 2                 6      .*ić$
    : 12     leczyć      691854      le-czyć                 2                 6      .*yć$
    : 13    ogłosić      655133    o-gło-sić                 3                 7      .*ić$
    : 14    wysyłać      504681    wy-sy-łać                 3                 7      .*ać$
    : 15     życzyć      825599      ży-czyć                 2                 6      .*yć$
    : 16    spędzić      547746     spę-dzić                 2                 7      .*ić$
    : 17   zapewnić     1123079   za-pew-nić                 3                 8      .*ić$
    : 18   utworzyć      643673   u-two-rzyć                 3                 8      .*yć$
    : 19     rzucić      448098      rzu-cić                 2                 6      .*ić$
    : ---------------------------------------------------------------------------
    :     WORD_verbs  FREQ_verbs  SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs
    : 85      budzić      503263     bu-dzić                 2                 6      .*ić$
    : 86    rozumieć     2034005  ro-zu-mieć                 3                 8      .*eć$
    : 87    zarabiać      501593  za-ra-biać                 3                 8      .*ać$
    : 88    przestać      595115   prze-stać                 2                 8      .*ać$
    : 89    poruszać      720800  po-ru-szać                 3                 8      .*ać$
    : 90    odbierać      428826  od-bie-rać                 3                 8      .*ać$
    : 91     opuścić      426532   o-pu-ścić                 3                 7      .*ić$
    : 92    stosować     2555041  sto-so-wać                 3                 8    .*ować$
    : 93      myślić     1605979     my-ślić                 2                 6      .*ić$
    : 94     napisać     2994826   na-pi-sać                 3                 7      .*ać$
    : 95     osiągać      396252   o-sią-gać                 3                 7      .*ać$
    : 96    zaczynać     1939925  za-czy-nać                 3                 8      .*ać$
    : 97      spadać      380178     spa-dać                 2                 6      .*ać$
    : 98      rodzić      376951     ro-dzić                 2                 6      .*ić$
    : 99      biegać      360340     bie-gać                 2                 6      .*ać$
    : 100   zgłaszać      353893   zgła-szać                 2                 8      .*ać$
    : 101     musieć     8864472     mu-sieć                 2                 6      .*eć$
    : 102   wyjechać      329897  wy-je-chać                 3                 8      .*ać$
    : 103     zrobić     5510726     zro-bić                 2                 6      .*ić$
    : 104     skupić      320973     sku-pić                 2                 6      .*ić$
    :
    :END:

** Proc 02: Merge =nouns= and =verbs= with =Wuggy= output
*** DONE Load =Wuggy= output and rename columns (convert to uppercase)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_exp_00_wuggy_all_DONE = pd.read_csv( "./data_out/s0005_exp_00_pairs_all_DONE.tsv", delimiter="\t", skiprows=0, encoding="utf-8", header=0, )

# Make column names uppercase
s0005_exp_00_wuggy_all_DONE.columns = [ x.upper() for x in s0005_exp_00_wuggy_all_DONE.columns ]

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[18]:
    :END:

*** DONE Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_exp_00_wuggy_all_DONE,  ]
df_info = [ "s0005_exp_00_wuggy_all_DONE", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[19]:
    # output
    : ===========================================================================
    : s0005_exp_00_wuggy_all_DONE
    : ===========================================================================
    : idx count: 3670
    : row count: 11  ['WORD', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION']
    : ---------------------------------------------------------------------------
    :        WORD    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 0   podmiot  podsiut          N   2.50        0.45     0         -3           2/3           -15                32             _pod[siu]t_
    : 1   podmiot  pojbiot          N   2.90        0.85     0         -3           2/3           -14                30             _poj[bio]t_
    : 2   podmiot  pojsiot          N   2.90        0.85     0         -3           2/3            -9                17             _p[oj]siot_
    : 3   podmiot  pojpiot          N   2.90        0.85     0         -3           2/3            -9                24             _p[oj]piot_
    : 4   podmiot  podbiut          N   2.00       -0.05     0         -3           2/3           -29                43             _pod[biu]t_
    : 5   podmiot  podwiut          N   2.00       -0.05     0         -3           2/3           -24                38             _pod[wiu]t_
    : 6   podmiot  poddiat          N   2.00       -0.05     0         -3           2/3            18                27             _po[dd]iat_
    : 7   podmiot  poddiut          N   2.75        0.70     0         -3           2/3            18                43             _po[dd]iut_
    : 8   podmiot  poddiet          N   1.95       -0.10     1         -2           2/3            19                55             _podd[iet]_
    : 9   podmiot  podpiut          N   2.00       -0.05     0         -3           2/3           -26                34             _pod[piu]t_
    : 10  podmiot  podgiat          N   2.00       -0.05     0         -3           2/3           -21                42             _pod[gia]t_
    : 11  podmiot  podtiet          N   1.95       -0.10     1         -2           2/3           -21                54             _pod[tie]t_
    : 12  podmiot  podtiat          N   2.30        0.25     0         -3           2/3           -17                36             _pod[tia]t_
    : 13  podmiot  podtiut          N   2.50        0.45     0         -3           2/3           -26                48             _pod[tiu]t_
    : 14  podmiot  podkiat          N   2.20        0.15     0         -3           2/3           -27                43             _pod[kia]t_
    : 15  podmiot  pojwiot          N   2.75        0.70     0         -3           2/3           -22                46             _poj[wio]t_
    : 16  podmiot  pojgiot          N   2.90        0.85     0         -3           2/3           -24                39             _poj[gio]t_
    : 17  podmiot  pojziot          N   2.85        0.80     0         -3           2/3           -20                34             _poj[zio]t_
    : 18  podmiot  pojfiot          N   2.90        0.85     0         -3           2/3           -27                43             _poj[fio]t_
    : 19  podmiot  pomwiot          N   2.60        0.55     1         -2           2/3            38                79             _p[om]wiot_
    : ---------------------------------------------------------------------------
    :         WORD   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 3650  skupić  spuwić          N   1.95        0.80     1        -14           2/3          -128               345              _[spu]wić_
    : 3651  skupić  spucić          N   1.85        0.70     3        -12           2/3          -128               331              _[spu]cić_
    : 3652  skupić  spukić          N   2.00        0.85     0        -15           2/3          -128               322              _[spu]kić_
    : 3653  skupić  kruwić          N   2.00        0.85     0        -15           2/3           -80               285              _kru[w]ić_
    : 3654  skupić  krukić          N   1.95        0.80     1        -14           2/3            99               262              _kru[ki]ć_
    : 3655  skupić  krucić          N   1.90        0.75     2        -13           2/3           109               271              _kru[c]ić_
    : 3656  skupić  czuwić          N   1.85        0.70     3        -12           2/3           -80               234              _czu[w]ić_
    : 3657  skupić  czukić          N   1.90        0.75     2        -13           2/3            99               211              _czu[ki]ć_
    : 3658  skupić  czucić          N   1.55        0.40     9         -6           2/3           109               220              _czu[c]ić_
    : 3659  skupić  gruwić          N   2.10        0.95     0        -15           2/3           -80               274              _gru[w]ić_
    : 3660  skupić  grucić          N   1.95        0.80     1        -14           2/3           109               260              _gru[c]ić_
    : 3661  skupić  grukić          N   2.05        0.90     0        -15           2/3            99               251              _gru[ki]ć_
    : 3662  skupić  pruwić          N   1.95        0.80     1        -14           2/3          -125               374              _[pru]wić_
    : 3663  skupić  prucić          N   1.80        0.65     4        -11           2/3          -125               360              _[pru]cić_
    : 3664  skupić  prukić          N   2.00        0.85     0        -15           2/3          -125               351              _[pru]kić_
    : 3665  skupić  kluwić          N   2.00        0.85     0        -15           2/3           -94               304              _[klu]wić_
    : 3666  skupić  klucić          N   1.85        0.70     3        -12           2/3           109               290              _klu[c]ić_
    : 3667  skupić  klukić          N   1.95        0.80     1        -14           2/3            99               281              _klu[ki]ć_
    : 3668  skupić  spulić          N   1.80        0.65     4        -11           2/3          -244               451              _spu[l]ić_
    : 3669  skupić  krulić          N   1.95        0.80     1        -14           2/3          -244               391              _kru[l]ić_
    :
    :END:

*** DONE Merge =nouns= and =verbs= with =Wuggy= output

    The code below will perform the merge and additionally it will
    list the =nouns= and =verbs= had been used as a source of pseudowords
    in =Wuggy=, but the software had not generated any pseudowords for
    them (assuming that everything else wen well).

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_all_wuggy = pd.merge(
    left        = s0005_nouns_all,
    right       = s0005_exp_00_wuggy_all_DONE,
    how         = "left",
    left_on     = "WORD_nouns",
    right_on    = "WORD",
    suffixes    = ("_left", "_right"),
    indicator   = "WUGGY_MERGE",
)
s0005_nouns_all_wuggy["WUGGY_MERGE"] = np.where( s0005_nouns_all_wuggy.WUGGY_MERGE == "both", True, False )
print( "="*75 )
print( s0005_nouns_all_wuggy[ ~ s0005_nouns_all_wuggy["WUGGY_MERGE"] ] )

s0005_verbs_all_wuggy = pd.merge(
    left        = s0005_verbs_all,
    right       = s0005_exp_00_wuggy_all_DONE,
    how         = "left",
    left_on     = "WORD_verbs",
    right_on    = "WORD",
    suffixes    = ("_left", "_right"),
    indicator   = "WUGGY_MERGE",
)
s0005_verbs_all_wuggy["WUGGY_MERGE"] = np.where( s0005_verbs_all_wuggy.WUGGY_MERGE == "both", True, False )
print( "="*75 )
print( s0005_verbs_all_wuggy[ ~ s0005_verbs_all_wuggy["WUGGY_MERGE"] ] )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[35]:
    # output
    : ===========================================================================
    :      WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F      N WORD     ...     LEXICALITY OLD20  OLD20_DIFF  NED1  NED1_DIFF  OVERLAP_RATIO MAXDEVIATION  SUMMED_DEVIATION  MAXDEVIATION_TRANSITION WUGGY_MERGE
    : 1178    gwiazda      793178    gwiaz-da                 2                 7     .*zda$  False   True  False  NaN     ...            NaN   NaN         NaN   NaN        NaN            NaN          NaN               NaN                      NaN       False
    : 1399   nazwisko      781186  na-zwi-sko                 3                 8      .*ko$  False  False   True  NaN     ...            NaN   NaN         NaN   NaN        NaN            NaN          NaN               NaN                      NaN       False
    : 1720     boisko      637772     bo-isko                 2                 6      .*ko$  False  False   True  NaN     ...            NaN   NaN         NaN   NaN        NaN            NaN          NaN               NaN                      NaN       False
    : 1901     muzeum      776358     mu-zeum                 2                 6      .*um$  False  False   True  NaN     ...            NaN   NaN         NaN   NaN        NaN            NaN          NaN               NaN                      NaN       False
    :
    : [4 rows x 21 columns]
    : ===========================================================================
    :      WORD_verbs  FREQ_verbs   SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs WORD MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION  WUGGY_MERGE
    : 100    opisywać      609359  o-pi-sy-wać                 4                 8    .*ywać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 181     ustalić     1050034    u-sta-lić                 3                 7      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 222     ogłosić      655133    o-gło-sić                 3                 7      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 299    utworzyć      643673   u-two-rzyć                 3                 8      .*yć$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 380     podawać     1166758    po-da-wać                 3                 7      .*ać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 492     wywołać      456729    wy-wo-łać                 3                 7      .*ać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 591     wpływać      617033     wpły-wać                 2                 7    .*ywać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 709     urodzić      566437    u-ro-dzić                 3                 7      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 750     uznawać      474808    u-zna-wać                 3                 7      .*ać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 791    pozbawić      527944   po-zba-wić                 3                 8      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 832     nauczyć      746339     na-uczyć                 2                 7      .*yć$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 853    zaprosić      599692   za-pro-sić                 3                 8      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 854     położyć      533379    po-ło-żyć                 3                 7      .*yć$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 855     ustawić      697600    u-sta-wić                 3                 7      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 916     pokonać      702155    po-ko-nać                 3                 7      .*ać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 917     pojawić     2039547    po-ja-wić                 3                 7      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 974     powołać      571648    po-wo-łać                 3                 7      .*ać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 975     pomagać     1098425    po-ma-gać                 3                 7      .*ać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 1036    wykazać      524049    wy-ka-zać                 3                 7      .*ać$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 1037   postawić      779012   po-sta-wić                 3                 8      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    : 1218    wyrazić      525404    wy-ra-zić                 3                 7      .*ić$  NaN   NaN        NaN    NaN         NaN   NaN        NaN           NaN           NaN               NaN                     NaN        False
    :
    :END:

*** DONE Drop the unmerged =nouns= and =verbs= (idle sources)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_all_wuggy_merged = s0005_nouns_all_wuggy[ s0005_nouns_all_wuggy["WUGGY_MERGE"] ].copy()
s0005_verbs_all_wuggy_merged = s0005_verbs_all_wuggy[ s0005_verbs_all_wuggy["WUGGY_MERGE"] ].copy()

tmp_nouns_check = np.where( s0005_nouns_all_wuggy_merged[ "WORD_nouns" ] == s0005_nouns_all_wuggy_merged[ "WORD" ] , True, False )
tmp_verbs_check = np.where( s0005_verbs_all_wuggy_merged[ "WORD_verbs" ] == s0005_verbs_all_wuggy_merged[ "WORD" ] , True, False )

if ( tmp_nouns_check.all() and tmp_verbs_check.all() ):
    s0005_nouns_all_wuggy_merged.drop( columns=[ "WORD", "WUGGY_MERGE", ], inplace=True, errors="ignore", )
    s0005_verbs_all_wuggy_merged.drop( columns=[ "WORD", "WUGGY_MERGE", ], inplace=True, errors="ignore", )
else:
    print( "="*75 )
    print( "Unable to remove \"WORD_nouns\", \"WORD_verbs\" and \"WORD\" columns..." )
    print( "-"*75 )
    print( "Are the columns \"WORD_nouns\" and \"WORD\" identical: " + str( tmp_nouns_check.all() ) )
    print( "Are the columns \"WORD_verbs\" and \"WORD\" identical: " + str( tmp_verbs_check.all() ) )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[36]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_nouns_all_wuggy_merged,  ]
df_info = [ "s0005_nouns_all_wuggy_merged", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[37]:
    # output
    : ===========================================================================
    : s0005_nouns_all_wuggy_merged
    : ===========================================================================
    : idx count: 2018
    : row count: 19  ['WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'M', 'F', 'N', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION']
    : ---------------------------------------------------------------------------
    :    WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns     M      F      N    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 0     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podsiut          N   2.50        0.45   0.0       -3.0           2/3         -15.0              32.0             _pod[siu]t_
    : 1     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojbiot          N   2.90        0.85   0.0       -3.0           2/3         -14.0              30.0             _poj[bio]t_
    : 2     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojsiot          N   2.90        0.85   0.0       -3.0           2/3          -9.0              17.0             _p[oj]siot_
    : 3     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojpiot          N   2.90        0.85   0.0       -3.0           2/3          -9.0              24.0             _p[oj]piot_
    : 4     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podbiut          N   2.00       -0.05   0.0       -3.0           2/3         -29.0              43.0             _pod[biu]t_
    : 5     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podwiut          N   2.00       -0.05   0.0       -3.0           2/3         -24.0              38.0             _pod[wiu]t_
    : 6     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiat          N   2.00       -0.05   0.0       -3.0           2/3          18.0              27.0             _po[dd]iat_
    : 7     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiut          N   2.75        0.70   0.0       -3.0           2/3          18.0              43.0             _po[dd]iut_
    : 8     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiet          N   1.95       -0.10   1.0       -2.0           2/3          19.0              55.0             _podd[iet]_
    : 9     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podpiut          N   2.00       -0.05   0.0       -3.0           2/3         -26.0              34.0             _pod[piu]t_
    : 10    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podgiat          N   2.00       -0.05   0.0       -3.0           2/3         -21.0              42.0             _pod[gia]t_
    : 11    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiet          N   1.95       -0.10   1.0       -2.0           2/3         -21.0              54.0             _pod[tie]t_
    : 12    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiat          N   2.30        0.25   0.0       -3.0           2/3         -17.0              36.0             _pod[tia]t_
    : 13    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiut          N   2.50        0.45   0.0       -3.0           2/3         -26.0              48.0             _pod[tiu]t_
    : 14    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podkiat          N   2.20        0.15   0.0       -3.0           2/3         -27.0              43.0             _pod[kia]t_
    : 15    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojwiot          N   2.75        0.70   0.0       -3.0           2/3         -22.0              46.0             _poj[wio]t_
    : 16    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojgiot          N   2.90        0.85   0.0       -3.0           2/3         -24.0              39.0             _poj[gio]t_
    : 17    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojziot          N   2.85        0.80   0.0       -3.0           2/3         -20.0              34.0             _poj[zio]t_
    : 18    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojfiot          N   2.90        0.85   0.0       -3.0           2/3         -27.0              43.0             _poj[fio]t_
    : 19    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pomwiot          N   2.60        0.55   1.0       -2.0           2/3          38.0              79.0             _p[om]wiot_
    : ---------------------------------------------------------------------------
    :      WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F     N    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 2002    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wucanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0            9666.0             [_w]ucanie_
    : 2003    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuranie          N   1.80        0.45   4.0       -7.0           2/3       -5815.0            8376.0             [_w]uranie_
    : 2004    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wudanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9187.0             [_w]udanie_
    : 2005    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wukanie          N   1.65        0.30   7.0       -4.0           2/3       -5815.0            7679.0             [_w]ukanie_
    : 2006    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuwanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9371.0             [_w]uwanie_
    : 2007    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuzanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           12789.0             [_w]uzanie_
    : 2008    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wulanie          N   1.60        0.25   8.0       -3.0           2/3       -5815.0           10434.0             [_w]ulanie_
    : 2009    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wusanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0            8693.0             [_w]usanie_
    : 2010    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wufanie          N   1.90        0.55   2.0       -9.0           2/3       -5815.0           15093.0             [_w]ufanie_
    : 2011    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wubanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0            9254.0             [_w]ubanie_
    : 2012    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuhanie          N   1.95        0.60   1.0      -10.0           2/3       -5952.0           15931.0             _wu[h]anie_
    : 2013    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wułanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0           12549.0             [_w]ułanie_
    : 2014    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wutawie          N   2.00        0.65   0.0      -11.0           2/3       -6840.0           18289.0             _wuta[w]ie_
    : 2015    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wunanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           10162.0             [_w]unanie_
    : 2016    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wupanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9814.0             [_w]upanie_
    : 2017    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuganie          N   1.90        0.55   2.0       -9.0           2/3       -5815.0            9863.0             [_w]uganie_
    : 2018    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wujanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0           11302.0             [_w]ujanie_
    : 2019    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wumanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            8944.0             [_w]umanie_
    : 2020    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wużanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           12323.0             [_w]użanie_
    : 2021    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wecanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0            9055.0             [_w]ecanie_
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_verbs_all_wuggy_merged,  ]
df_info = [ "s0005_verbs_all_wuggy_merged", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[38]:
    # output
    : ===========================================================================
    : s0005_verbs_all_wuggy_merged
    : ===========================================================================
    : idx count: 1652
    : row count: 16  ['WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION']
    : ---------------------------------------------------------------------------
    :    WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 0      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             107.0              _zgi[b]ać_
    : 1      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             135.0              _zgi[ma]ć_
    : 2      wpisać      600539    wpi-sać                 2                 6      .*ać$  flibać          N   2.40        0.85   0.0       -7.0           2/3         -37.0              78.0              _fli[b]ać_
    : 3      wpisać      600539    wpi-sać                 2                 6      .*ać$  flimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             106.0              _fli[ma]ć_
    : 4      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwibać          N   2.00        0.45   0.0       -7.0           2/3          60.0             141.0              [_kw]ibać_
    : 5      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwimać          N   1.95        0.40   1.0       -6.0           2/3          60.0             169.0              [_kw]imać_
    : 6      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślibać          N   2.15        0.60   0.0       -7.0           2/3          38.0             117.0              _[śli]bać_
    : 7      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             145.0              _śli[ma]ć_
    : 8      wpisać      600539    wpi-sać                 2                 6      .*ać$  znibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             112.0              _zni[b]ać_
    : 9      wpisać      600539    wpi-sać                 2                 6      .*ać$  znimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             140.0              _zni[ma]ć_
    : 10     wpisać      600539    wpi-sać                 2                 6      .*ać$  glibać          N   2.20        0.65   1.0       -6.0           2/3         -57.0             131.0              [_gl]ibać_
    : 11     wpisać      600539    wpi-sać                 2                 6      .*ać$  glimać          N   2.10        0.55   1.0       -6.0           2/3         -57.0             159.0              [_gl]imać_
    : 12     wpisać      600539    wpi-sać                 2                 6      .*ać$  psibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0             106.0              _psi[b]ać_
    : 13     wpisać      600539    wpi-sać                 2                 6      .*ać$  psimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             134.0              _psi[ma]ć_
    : 14     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0              99.0              _gni[b]ać_
    : 15     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             127.0              _gni[ma]ć_
    : 16     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlibać          N   1.95        0.40   1.0       -6.0           2/3         -50.0             156.0              [_zl]ibać_
    : 17     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             184.0              _zli[ma]ć_
    : 18     wpisać      600539    wpi-sać                 2                 6      .*ać$  fribać          N   2.55        1.00   0.0       -7.0           2/3         -64.0             146.0              _[fri]bać_
    : 19     wpisać      600539    wpi-sać                 2                 6      .*ać$  frimać          N   2.65        1.10   0.0       -7.0           2/3         -64.0             174.0              _[fri]mać_
    : ---------------------------------------------------------------------------
    :      WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 1653     skupić      320973    sku-pić                 2                 6      .*ić$  spuwić          N   1.95        0.80   1.0      -14.0           2/3        -128.0             345.0              _[spu]wić_
    : 1654     skupić      320973    sku-pić                 2                 6      .*ić$  spucić          N   1.85        0.70   3.0      -12.0           2/3        -128.0             331.0              _[spu]cić_
    : 1655     skupić      320973    sku-pić                 2                 6      .*ić$  spukić          N   2.00        0.85   0.0      -15.0           2/3        -128.0             322.0              _[spu]kić_
    : 1656     skupić      320973    sku-pić                 2                 6      .*ić$  kruwić          N   2.00        0.85   0.0      -15.0           2/3         -80.0             285.0              _kru[w]ić_
    : 1657     skupić      320973    sku-pić                 2                 6      .*ić$  krukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             262.0              _kru[ki]ć_
    : 1658     skupić      320973    sku-pić                 2                 6      .*ić$  krucić          N   1.90        0.75   2.0      -13.0           2/3         109.0             271.0              _kru[c]ić_
    : 1659     skupić      320973    sku-pić                 2                 6      .*ić$  czuwić          N   1.85        0.70   3.0      -12.0           2/3         -80.0             234.0              _czu[w]ić_
    : 1660     skupić      320973    sku-pić                 2                 6      .*ić$  czukić          N   1.90        0.75   2.0      -13.0           2/3          99.0             211.0              _czu[ki]ć_
    : 1661     skupić      320973    sku-pić                 2                 6      .*ić$  czucić          N   1.55        0.40   9.0       -6.0           2/3         109.0             220.0              _czu[c]ić_
    : 1662     skupić      320973    sku-pić                 2                 6      .*ić$  gruwić          N   2.10        0.95   0.0      -15.0           2/3         -80.0             274.0              _gru[w]ić_
    : 1663     skupić      320973    sku-pić                 2                 6      .*ić$  grucić          N   1.95        0.80   1.0      -14.0           2/3         109.0             260.0              _gru[c]ić_
    : 1664     skupić      320973    sku-pić                 2                 6      .*ić$  grukić          N   2.05        0.90   0.0      -15.0           2/3          99.0             251.0              _gru[ki]ć_
    : 1665     skupić      320973    sku-pić                 2                 6      .*ić$  pruwić          N   1.95        0.80   1.0      -14.0           2/3        -125.0             374.0              _[pru]wić_
    : 1666     skupić      320973    sku-pić                 2                 6      .*ić$  prucić          N   1.80        0.65   4.0      -11.0           2/3        -125.0             360.0              _[pru]cić_
    : 1667     skupić      320973    sku-pić                 2                 6      .*ić$  prukić          N   2.00        0.85   0.0      -15.0           2/3        -125.0             351.0              _[pru]kić_
    : 1668     skupić      320973    sku-pić                 2                 6      .*ić$  kluwić          N   2.00        0.85   0.0      -15.0           2/3         -94.0             304.0              _[klu]wić_
    : 1669     skupić      320973    sku-pić                 2                 6      .*ić$  klucić          N   1.85        0.70   3.0      -12.0           2/3         109.0             290.0              _klu[c]ić_
    : 1670     skupić      320973    sku-pić                 2                 6      .*ić$  klukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             281.0              _klu[ki]ć_
    : 1671     skupić      320973    sku-pić                 2                 6      .*ić$  spulić          N   1.80        0.65   4.0      -11.0           2/3        -244.0             451.0              _spu[l]ić_
    : 1672     skupić      320973    sku-pić                 2                 6      .*ić$  krulić          N   1.95        0.80   1.0      -14.0           2/3        -244.0             391.0              _kru[l]ić_
    :
    :END:

*** DONE Merge =nouns= and =verbs= with =sgjp=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_all_wuggy_merged_sgjp = pd.merge(
    left        = s0005_nouns_all_wuggy_merged,
    right       = sgjp[["WORD"]],
    how         = "left",
    left_on     = "MATCH",
    right_on    = "WORD",
    suffixes    = ("_left", "_right"),
    indicator   = "SGJP_MERGE"
)
s0005_nouns_all_wuggy_merged_sgjp["SGJP_MERGE"] = np.where( s0005_nouns_all_wuggy_merged_sgjp.SGJP_MERGE == "both", True, False )
print( "="*75 )
print( s0005_nouns_all_wuggy_merged_sgjp[   s0005_nouns_all_wuggy_merged_sgjp["SGJP_MERGE"] ] )

s0005_verbs_all_wuggy_merged_sgjp = pd.merge(
    left        = s0005_verbs_all_wuggy_merged,
    right       = sgjp[["WORD"]],
    how         = "left",
    left_on     = "MATCH",
    right_on    = "WORD",
    suffixes    = ("_left", "_right"),
    indicator   = "SGJP_MERGE"
)
s0005_verbs_all_wuggy_merged_sgjp["SGJP_MERGE"] = np.where( s0005_verbs_all_wuggy_merged_sgjp.SGJP_MERGE == "both", True, False )
print( "="*75 )
print( s0005_verbs_all_wuggy_merged_sgjp[   s0005_verbs_all_wuggy_merged_sgjp["SGJP_MERGE"] ] )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[39]:
    # output
    : ===========================================================================
    :      WORD_nouns  FREQ_nouns  SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F      N     MATCH    ...     OLD20  OLD20_DIFF  NED1  NED1_DIFF  OVERLAP_RATIO MAXDEVIATION  SUMMED_DEVIATION  MAXDEVIATION_TRANSITION      WORD SGJP_MERGE
    : 49      kawałek      601455   ka-wa-łek                 3                 7       .*k$   True  False  False   morałek    ...      1.95        0.15   1.0       -1.0            2/3      -1970.0            5503.0              _[mo]rałek_   morałek       True
    : 327      kamień      550594     ka-mień                 2                 6       .*ń$   True  False  False    wabień    ...      1.85        0.10   3.0        0.0            2/3       -369.0             675.0               _[wa]bień_    wabień       True
    : 335      kamień      550594     ka-mień                 2                 6       .*ń$   True  False  False    babień    ...      1.90        0.15   2.0       -1.0            2/3       -438.0             762.0               [_b]abień_    babień       True
    : 336      kamień      550594     ka-mień                 2                 6       .*ń$   True  False  False    babień    ...      1.90        0.15   2.0       -1.0            2/3       -438.0             762.0               [_b]abień_    babień       True
    : 337      kamień      550594     ka-mień                 2                 6       .*ń$   True  False  False    bawień    ...      1.90        0.15   2.0       -1.0            2/3       -438.0            1136.0               [_b]awień_    bawień       True
    : 730      pogoda      617652    po-go-da                 3                 6      .*da$  False   True  False    naboda    ...      2.00        0.50   0.0       -8.0            2/3      -9835.0           18763.0               [_n]aboda_    naboda       True
    : 1167     partia     1061773     par-tia                 2                 6       .*a$  False   True  False    warnia    ...      1.55        0.15   9.0       -1.0            2/3      -1092.0            2011.0               [_w]arnia_    warnia       True
    : 1245     robota      814269    ro-bo-ta                 3                 6      .*ta$  False   True  False    namota    ...      1.75        0.35   5.0       -5.0            2/3       1319.0            2468.0               [_n]amota_    namota       True
    : 1257     robota      814269    ro-bo-ta                 3                 6      .*ta$  False   True  False    nagota    ...      2.00        0.60   0.0      -10.0            2/3      -2921.0            5060.0               _na[g]ota_    nagota       True
    : 1268     bramka      941832     bram-ka                 2                 6      .*ka$  False   True  False    promka    ...      1.70        0.30   6.0       -4.0            2/3       -124.0             191.0               _pr[om]ka_    promka       True
    : 1299     ściana     1108058     ścia-na                 2                 6      .*na$  False   True  False    ćmiona    ...      1.95        0.50   1.0       -8.0            2/3       -327.0             642.0               _ćm[io]na_    ćmiona       True
    : 1310     ściana     1108058     ścia-na                 2                 6      .*na$  False   True  False    dziona    ...      1.75        0.30   5.0       -4.0            2/3       -327.0             533.0               _dz[io]na_    dziona       True
    : 1461   jedzenie      479058  je-dze-nie                 3                 8       .*e$  False  False   True  łyczenie    ...      1.70        0.15   6.0       -1.0            2/3        719.0            1921.0             _ły[cze]nie_  łyczenie       True
    : 1473   jedzenie      479058  je-dze-nie                 3                 8       .*e$  False  False   True  tuszenie    ...      1.70        0.15   6.0       -1.0            2/3       1929.0            4829.0             [_t]uszenie_  tuszenie       True
    : 1481     wojsko      605803     woj-sko                 2                 6      .*ko$  False  False   True    welsko    ...      2.00        0.40   0.0       -6.0            2/3         71.0             166.0               _w[el]sko_    welsko       True
    : 1482     wojsko      605803     woj-sko                 2                 6      .*ko$  False  False   True    welsko    ...      2.00        0.40   0.0       -6.0            2/3         71.0             166.0               _w[el]sko_    welsko       True
    : 1523     dzieło      904326     dzie-ło                 2                 6      .*ło$  False  False   True    zsiało    ...      1.70        0.10   6.0        0.0            2/3      -1633.0            2172.0               _zs[ia]ło_    zsiało       True
    : 1524     dzieło      904326     dzie-ło                 2                 6      .*ło$  False  False   True    zsiało    ...      1.70        0.10   6.0        0.0            2/3      -1633.0            2172.0               _zs[ia]ło_    zsiało       True
    : 1647   leczenie      691191  le-cze-nie                 3                 8       .*e$  False  False   True  tuszenie    ...      1.70        0.30   6.0       -4.0            2/3      -1657.0            3358.0             _t[u]szenie_  tuszenie       True
    : 1797    badanie     2635110   ba-da-nie                 3                 7       .*e$  False  False   True   mocanie    ...      1.85        0.80   3.0      -14.0            2/3      -1448.0            4389.0              _mo[ca]nie_   mocanie       True
    : 1798    badanie     2635110   ba-da-nie                 3                 7       .*e$  False  False   True   mocanie    ...      1.85        0.80   3.0      -14.0            2/3      -1448.0            4389.0              _mo[ca]nie_   mocanie       True
    : 1801    badanie     2635110   ba-da-nie                 3                 7       .*e$  False  False   True   mosanie    ...      1.80        0.75   4.0      -13.0            2/3       1360.0            4138.0              _mo[s]anie_   mosanie       True
    : 1802    badanie     2635110   ba-da-nie                 3                 7       .*e$  False  False   True   mosanie    ...      1.80        0.75   4.0      -13.0            2/3       1360.0            4138.0              _mo[s]anie_   mosanie       True
    : 1967     zdanie     2787483     zda-nie                 2                 6       .*e$  False  False   True    wdacie    ...      1.50        0.40  10.0       -6.0            2/3       -945.0            1330.0               _wda[c]ie_    wdacie       True
    : 1968     zdanie     2787483     zda-nie                 2                 6       .*e$  False  False   True    żgacie    ...      1.85        0.75   3.0      -13.0            2/3       -945.0            1478.0               _żga[c]ie_    żgacie       True
    : 1988    dziecko     8604939    dziec-ko                 2                 7      .*ko$  False  False   True   dziuńko    ...      2.15        0.45   1.0       -3.0            2/3       -102.0             146.0              _[dziu]ńko_   dziuńko       True
    :
    : [26 rows x 21 columns]
    : ===========================================================================
    :      WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION     WORD  SGJP_MERGE
    : 166      ruszyć      578671    ru-szyć                 2                 6      .*yć$   durzyć          N   1.80        0.35   4.0       -5.0           2/3        -312.0             582.0              [_d]urzyć_   durzyć        True
    : 195      różnić      518389    róż-nić                 2                 6      .*ić$   krócić          N   1.70        0.15   6.0       -1.0           2/3        -945.0            1331.0              _kró[c]ić_   krócić        True
    : 196      różnić      518389    róż-nić                 2                 6      .*ić$   krócić          N   1.70        0.15   6.0       -1.0           2/3        -945.0            1331.0              _kró[c]ić_   krócić        True
    : 306      rzucić      448098    rzu-cić                 2                 6      .*ić$   słupić          N   1.75        0.20   5.0       -2.0           2/3        -109.0             211.0              _słu[p]ić_   słupić        True
    : 360     zamknąć      783099   za-mknąć                 2                 7     .*nąć$  nabrnąć          N   2.20        0.55   1.0       -4.0           2/3        -279.0             461.0             _[na]brnąć_  nabrnąć        True
    : 362     zamknąć      783099   za-mknąć                 2                 7     .*nąć$  narznąć          N   1.85        0.20   3.0       -2.0           2/3        -279.0             458.0             _[na]rznąć_  narznąć        True
    : 440     panować      568343  pa-no-wać                 3                 7    .*ować$  wokować          N   1.50        0.15  10.0       -1.0           2/3       -5815.0           11150.0             [_w]okować_  wokować        True
    : 692     odebrać      460081  o-de-brać                 3                 7      .*ać$  ociskać          N   1.55       -0.10   9.0        4.0           2/3        2924.0            7926.0             _oc[i]skać_  ociskać        True
    : 1001     rosnąć      584626    ro-snąć                 2                 6     .*nąć$   bodnąć          N   1.95        0.35   1.0       -5.0           2/3         357.0             961.0              [_b]odnąć_   bodnąć        True
    :
    :END:

*** DONE Drop the merged =nouns= and =verbs= (spurious pseudowords)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_all_wuggy_merged_sgjp_merged = s0005_nouns_all_wuggy_merged_sgjp[ ~ s0005_nouns_all_wuggy_merged_sgjp["SGJP_MERGE"] ].copy()
s0005_verbs_all_wuggy_merged_sgjp_merged = s0005_verbs_all_wuggy_merged_sgjp[ ~ s0005_verbs_all_wuggy_merged_sgjp["SGJP_MERGE"] ].copy()

tmp_nouns_check = np.where( s0005_nouns_all_wuggy_merged_sgjp_merged[ "MATCH" ] == s0005_nouns_all_wuggy_merged_sgjp_merged[ "WORD" ] , True, False )
tmp_verbs_check = np.where( s0005_verbs_all_wuggy_merged_sgjp_merged[ "MATCH" ] == s0005_verbs_all_wuggy_merged_sgjp_merged[ "WORD" ] , True, False )

if ( ( tmp_nouns_check.sum() == 0 ) and ( tmp_verbs_check.sum() == 0 ) ):
    s0005_nouns_all_wuggy_merged_sgjp_merged.drop( columns=[ "WORD", "SGJP_MERGE", ], inplace=True, errors="ignore", )
    s0005_verbs_all_wuggy_merged_sgjp_merged.drop( columns=[ "WORD", "SGJP_MERGE", ], inplace=True, errors="ignore", )
else:
    print( "="*75 )
    print( "Unable to remove \"WORD_nouns\", \"WORD_verbs\" and \"WORD\" columns..." )
    print( "-"*75 )
    print( "Are the columns \"WORD_nouns\" and \"WORD\" identical: " + str( tmp_nouns_check.all() ) )
    print( "Are the columns \"WORD_verbs\" and \"WORD\" identical: " + str( tmp_verbs_check.all() ) )


    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[40]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_nouns_all_wuggy_merged_sgjp_merged,  ]
df_info = [ "s0005_nouns_all_wuggy_merged_sgjp_merged", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[41]:
    # output
    : ===========================================================================
    : s0005_nouns_all_wuggy_merged_sgjp_merged
    : ===========================================================================
    : idx count: 1997
    : row count: 19  ['WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'M', 'F', 'N', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION']
    : ---------------------------------------------------------------------------
    :    WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns     M      F      N    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 0     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podsiut          N   2.50        0.45   0.0       -3.0           2/3         -15.0              32.0             _pod[siu]t_
    : 1     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojbiot          N   2.90        0.85   0.0       -3.0           2/3         -14.0              30.0             _poj[bio]t_
    : 2     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojsiot          N   2.90        0.85   0.0       -3.0           2/3          -9.0              17.0             _p[oj]siot_
    : 3     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojpiot          N   2.90        0.85   0.0       -3.0           2/3          -9.0              24.0             _p[oj]piot_
    : 4     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podbiut          N   2.00       -0.05   0.0       -3.0           2/3         -29.0              43.0             _pod[biu]t_
    : 5     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podwiut          N   2.00       -0.05   0.0       -3.0           2/3         -24.0              38.0             _pod[wiu]t_
    : 6     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiat          N   2.00       -0.05   0.0       -3.0           2/3          18.0              27.0             _po[dd]iat_
    : 7     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiut          N   2.75        0.70   0.0       -3.0           2/3          18.0              43.0             _po[dd]iut_
    : 8     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiet          N   1.95       -0.10   1.0       -2.0           2/3          19.0              55.0             _podd[iet]_
    : 9     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podpiut          N   2.00       -0.05   0.0       -3.0           2/3         -26.0              34.0             _pod[piu]t_
    : 10    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podgiat          N   2.00       -0.05   0.0       -3.0           2/3         -21.0              42.0             _pod[gia]t_
    : 11    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiet          N   1.95       -0.10   1.0       -2.0           2/3         -21.0              54.0             _pod[tie]t_
    : 12    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiat          N   2.30        0.25   0.0       -3.0           2/3         -17.0              36.0             _pod[tia]t_
    : 13    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiut          N   2.50        0.45   0.0       -3.0           2/3         -26.0              48.0             _pod[tiu]t_
    : 14    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podkiat          N   2.20        0.15   0.0       -3.0           2/3         -27.0              43.0             _pod[kia]t_
    : 15    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojwiot          N   2.75        0.70   0.0       -3.0           2/3         -22.0              46.0             _poj[wio]t_
    : 16    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojgiot          N   2.90        0.85   0.0       -3.0           2/3         -24.0              39.0             _poj[gio]t_
    : 17    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojziot          N   2.85        0.80   0.0       -3.0           2/3         -20.0              34.0             _poj[zio]t_
    : 18    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojfiot          N   2.90        0.85   0.0       -3.0           2/3         -27.0              43.0             _poj[fio]t_
    : 19    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pomwiot          N   2.60        0.55   1.0       -2.0           2/3          38.0              79.0             _p[om]wiot_
    : ---------------------------------------------------------------------------
    :      WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F     N    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 2003    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wucanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0            9666.0             [_w]ucanie_
    : 2004    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuranie          N   1.80        0.45   4.0       -7.0           2/3       -5815.0            8376.0             [_w]uranie_
    : 2005    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wudanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9187.0             [_w]udanie_
    : 2006    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wukanie          N   1.65        0.30   7.0       -4.0           2/3       -5815.0            7679.0             [_w]ukanie_
    : 2007    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuwanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9371.0             [_w]uwanie_
    : 2008    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuzanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           12789.0             [_w]uzanie_
    : 2009    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wulanie          N   1.60        0.25   8.0       -3.0           2/3       -5815.0           10434.0             [_w]ulanie_
    : 2010    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wusanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0            8693.0             [_w]usanie_
    : 2011    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wufanie          N   1.90        0.55   2.0       -9.0           2/3       -5815.0           15093.0             [_w]ufanie_
    : 2012    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wubanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0            9254.0             [_w]ubanie_
    : 2013    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuhanie          N   1.95        0.60   1.0      -10.0           2/3       -5952.0           15931.0             _wu[h]anie_
    : 2014    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wułanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0           12549.0             [_w]ułanie_
    : 2015    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wutawie          N   2.00        0.65   0.0      -11.0           2/3       -6840.0           18289.0             _wuta[w]ie_
    : 2016    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wunanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           10162.0             [_w]unanie_
    : 2017    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wupanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9814.0             [_w]upanie_
    : 2018    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuganie          N   1.90        0.55   2.0       -9.0           2/3       -5815.0            9863.0             [_w]uganie_
    : 2019    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wujanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0           11302.0             [_w]ujanie_
    : 2020    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wumanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            8944.0             [_w]umanie_
    : 2021    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wużanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           12323.0             [_w]użanie_
    : 2022    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wecanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0            9055.0             [_w]ecanie_
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_verbs_all_wuggy_merged_sgjp_merged,  ]
df_info = [ "s0005_verbs_all_wuggy_merged_sgjp_merged", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[42]:
    # output
    : ===========================================================================
    : s0005_verbs_all_wuggy_merged_sgjp_merged
    : ===========================================================================
    : idx count: 1644
    : row count: 16  ['WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION']
    : ---------------------------------------------------------------------------
    :    WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 0      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             107.0              _zgi[b]ać_
    : 1      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             135.0              _zgi[ma]ć_
    : 2      wpisać      600539    wpi-sać                 2                 6      .*ać$  flibać          N   2.40        0.85   0.0       -7.0           2/3         -37.0              78.0              _fli[b]ać_
    : 3      wpisać      600539    wpi-sać                 2                 6      .*ać$  flimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             106.0              _fli[ma]ć_
    : 4      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwibać          N   2.00        0.45   0.0       -7.0           2/3          60.0             141.0              [_kw]ibać_
    : 5      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwimać          N   1.95        0.40   1.0       -6.0           2/3          60.0             169.0              [_kw]imać_
    : 6      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślibać          N   2.15        0.60   0.0       -7.0           2/3          38.0             117.0              _[śli]bać_
    : 7      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             145.0              _śli[ma]ć_
    : 8      wpisać      600539    wpi-sać                 2                 6      .*ać$  znibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             112.0              _zni[b]ać_
    : 9      wpisać      600539    wpi-sać                 2                 6      .*ać$  znimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             140.0              _zni[ma]ć_
    : 10     wpisać      600539    wpi-sać                 2                 6      .*ać$  glibać          N   2.20        0.65   1.0       -6.0           2/3         -57.0             131.0              [_gl]ibać_
    : 11     wpisać      600539    wpi-sać                 2                 6      .*ać$  glimać          N   2.10        0.55   1.0       -6.0           2/3         -57.0             159.0              [_gl]imać_
    : 12     wpisać      600539    wpi-sać                 2                 6      .*ać$  psibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0             106.0              _psi[b]ać_
    : 13     wpisać      600539    wpi-sać                 2                 6      .*ać$  psimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             134.0              _psi[ma]ć_
    : 14     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0              99.0              _gni[b]ać_
    : 15     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             127.0              _gni[ma]ć_
    : 16     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlibać          N   1.95        0.40   1.0       -6.0           2/3         -50.0             156.0              [_zl]ibać_
    : 17     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             184.0              _zli[ma]ć_
    : 18     wpisać      600539    wpi-sać                 2                 6      .*ać$  fribać          N   2.55        1.00   0.0       -7.0           2/3         -64.0             146.0              _[fri]bać_
    : 19     wpisać      600539    wpi-sać                 2                 6      .*ać$  frimać          N   2.65        1.10   0.0       -7.0           2/3         -64.0             174.0              _[fri]mać_
    : ---------------------------------------------------------------------------
    :      WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 1633     skupić      320973    sku-pić                 2                 6      .*ić$  spuwić          N   1.95        0.80   1.0      -14.0           2/3        -128.0             345.0              _[spu]wić_
    : 1634     skupić      320973    sku-pić                 2                 6      .*ić$  spucić          N   1.85        0.70   3.0      -12.0           2/3        -128.0             331.0              _[spu]cić_
    : 1635     skupić      320973    sku-pić                 2                 6      .*ić$  spukić          N   2.00        0.85   0.0      -15.0           2/3        -128.0             322.0              _[spu]kić_
    : 1636     skupić      320973    sku-pić                 2                 6      .*ić$  kruwić          N   2.00        0.85   0.0      -15.0           2/3         -80.0             285.0              _kru[w]ić_
    : 1637     skupić      320973    sku-pić                 2                 6      .*ić$  krukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             262.0              _kru[ki]ć_
    : 1638     skupić      320973    sku-pić                 2                 6      .*ić$  krucić          N   1.90        0.75   2.0      -13.0           2/3         109.0             271.0              _kru[c]ić_
    : 1639     skupić      320973    sku-pić                 2                 6      .*ić$  czuwić          N   1.85        0.70   3.0      -12.0           2/3         -80.0             234.0              _czu[w]ić_
    : 1640     skupić      320973    sku-pić                 2                 6      .*ić$  czukić          N   1.90        0.75   2.0      -13.0           2/3          99.0             211.0              _czu[ki]ć_
    : 1641     skupić      320973    sku-pić                 2                 6      .*ić$  czucić          N   1.55        0.40   9.0       -6.0           2/3         109.0             220.0              _czu[c]ić_
    : 1642     skupić      320973    sku-pić                 2                 6      .*ić$  gruwić          N   2.10        0.95   0.0      -15.0           2/3         -80.0             274.0              _gru[w]ić_
    : 1643     skupić      320973    sku-pić                 2                 6      .*ić$  grucić          N   1.95        0.80   1.0      -14.0           2/3         109.0             260.0              _gru[c]ić_
    : 1644     skupić      320973    sku-pić                 2                 6      .*ić$  grukić          N   2.05        0.90   0.0      -15.0           2/3          99.0             251.0              _gru[ki]ć_
    : 1645     skupić      320973    sku-pić                 2                 6      .*ić$  pruwić          N   1.95        0.80   1.0      -14.0           2/3        -125.0             374.0              _[pru]wić_
    : 1646     skupić      320973    sku-pić                 2                 6      .*ić$  prucić          N   1.80        0.65   4.0      -11.0           2/3        -125.0             360.0              _[pru]cić_
    : 1647     skupić      320973    sku-pić                 2                 6      .*ić$  prukić          N   2.00        0.85   0.0      -15.0           2/3        -125.0             351.0              _[pru]kić_
    : 1648     skupić      320973    sku-pić                 2                 6      .*ić$  kluwić          N   2.00        0.85   0.0      -15.0           2/3         -94.0             304.0              _[klu]wić_
    : 1649     skupić      320973    sku-pić                 2                 6      .*ić$  klucić          N   1.85        0.70   3.0      -12.0           2/3         109.0             290.0              _klu[c]ić_
    : 1650     skupić      320973    sku-pić                 2                 6      .*ić$  klukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             281.0              _klu[ki]ć_
    : 1651     skupić      320973    sku-pić                 2                 6      .*ić$  spulić          N   1.80        0.65   4.0      -11.0           2/3        -244.0             451.0              _spu[l]ić_
    : 1652     skupić      320973    sku-pić                 2                 6      .*ić$  krulić          N   1.95        0.80   1.0      -14.0           2/3        -244.0             391.0              _kru[l]ić_
    :
    :END:

** Proc 03: Testing the actual (non-idle) =Wuggy= input words frequency differences for =verbs= and =nouns=
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_all_wuggy_merged_sgjp_merged_prelim = s0005_nouns_all_wuggy_merged_sgjp_merged.copy()
s0005_verbs_all_wuggy_merged_sgjp_merged_prelim = s0005_verbs_all_wuggy_merged_sgjp_merged.copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[43]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_nouns_all_wuggy_merged_sgjp_merged_prelim,  ]
df_info = [ "s0005_nouns_all_wuggy_merged_sgjp_merged_prelim", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[44]:
    # output
    : ===========================================================================
    : s0005_nouns_all_wuggy_merged_sgjp_merged_prelim
    : ===========================================================================
    : idx count: 1997
    : row count: 19  ['WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'M', 'F', 'N', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION']
    : ---------------------------------------------------------------------------
    :    WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns     M      F      N    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 0     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podsiut          N   2.50        0.45   0.0       -3.0           2/3         -15.0              32.0             _pod[siu]t_
    : 1     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojbiot          N   2.90        0.85   0.0       -3.0           2/3         -14.0              30.0             _poj[bio]t_
    : 2     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojsiot          N   2.90        0.85   0.0       -3.0           2/3          -9.0              17.0             _p[oj]siot_
    : 3     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojpiot          N   2.90        0.85   0.0       -3.0           2/3          -9.0              24.0             _p[oj]piot_
    : 4     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podbiut          N   2.00       -0.05   0.0       -3.0           2/3         -29.0              43.0             _pod[biu]t_
    : 5     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podwiut          N   2.00       -0.05   0.0       -3.0           2/3         -24.0              38.0             _pod[wiu]t_
    : 6     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiat          N   2.00       -0.05   0.0       -3.0           2/3          18.0              27.0             _po[dd]iat_
    : 7     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiut          N   2.75        0.70   0.0       -3.0           2/3          18.0              43.0             _po[dd]iut_
    : 8     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiet          N   1.95       -0.10   1.0       -2.0           2/3          19.0              55.0             _podd[iet]_
    : 9     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podpiut          N   2.00       -0.05   0.0       -3.0           2/3         -26.0              34.0             _pod[piu]t_
    : 10    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podgiat          N   2.00       -0.05   0.0       -3.0           2/3         -21.0              42.0             _pod[gia]t_
    : 11    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiet          N   1.95       -0.10   1.0       -2.0           2/3         -21.0              54.0             _pod[tie]t_
    : 12    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiat          N   2.30        0.25   0.0       -3.0           2/3         -17.0              36.0             _pod[tia]t_
    : 13    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiut          N   2.50        0.45   0.0       -3.0           2/3         -26.0              48.0             _pod[tiu]t_
    : 14    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podkiat          N   2.20        0.15   0.0       -3.0           2/3         -27.0              43.0             _pod[kia]t_
    : 15    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojwiot          N   2.75        0.70   0.0       -3.0           2/3         -22.0              46.0             _poj[wio]t_
    : 16    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojgiot          N   2.90        0.85   0.0       -3.0           2/3         -24.0              39.0             _poj[gio]t_
    : 17    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojziot          N   2.85        0.80   0.0       -3.0           2/3         -20.0              34.0             _poj[zio]t_
    : 18    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojfiot          N   2.90        0.85   0.0       -3.0           2/3         -27.0              43.0             _poj[fio]t_
    : 19    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pomwiot          N   2.60        0.55   1.0       -2.0           2/3          38.0              79.0             _p[om]wiot_
    : ---------------------------------------------------------------------------
    :      WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F     N    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 2003    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wucanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0            9666.0             [_w]ucanie_
    : 2004    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuranie          N   1.80        0.45   4.0       -7.0           2/3       -5815.0            8376.0             [_w]uranie_
    : 2005    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wudanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9187.0             [_w]udanie_
    : 2006    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wukanie          N   1.65        0.30   7.0       -4.0           2/3       -5815.0            7679.0             [_w]ukanie_
    : 2007    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuwanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9371.0             [_w]uwanie_
    : 2008    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuzanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           12789.0             [_w]uzanie_
    : 2009    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wulanie          N   1.60        0.25   8.0       -3.0           2/3       -5815.0           10434.0             [_w]ulanie_
    : 2010    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wusanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0            8693.0             [_w]usanie_
    : 2011    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wufanie          N   1.90        0.55   2.0       -9.0           2/3       -5815.0           15093.0             [_w]ufanie_
    : 2012    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wubanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0            9254.0             [_w]ubanie_
    : 2013    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuhanie          N   1.95        0.60   1.0      -10.0           2/3       -5952.0           15931.0             _wu[h]anie_
    : 2014    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wułanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0           12549.0             [_w]ułanie_
    : 2015    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wutawie          N   2.00        0.65   0.0      -11.0           2/3       -6840.0           18289.0             _wuta[w]ie_
    : 2016    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wunanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           10162.0             [_w]unanie_
    : 2017    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wupanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            9814.0             [_w]upanie_
    : 2018    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuganie          N   1.90        0.55   2.0       -9.0           2/3       -5815.0            9863.0             [_w]uganie_
    : 2019    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wujanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0           11302.0             [_w]ujanie_
    : 2020    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wumanie          N   1.85        0.50   3.0       -8.0           2/3       -5815.0            8944.0             [_w]umanie_
    : 2021    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wużanie          N   2.00        0.65   0.0      -11.0           2/3       -5815.0           12323.0             [_w]użanie_
    : 2022    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wecanie          N   1.95        0.60   1.0      -10.0           2/3       -5815.0            9055.0             [_w]ecanie_
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_verbs_all_wuggy_merged_sgjp_merged_prelim,  ]
df_info = [ "s0005_verbs_all_wuggy_merged_sgjp_merged_prelim", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[45]:
    # output
    : ===========================================================================
    : s0005_verbs_all_wuggy_merged_sgjp_merged_prelim
    : ===========================================================================
    : idx count: 1644
    : row count: 16  ['WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION']
    : ---------------------------------------------------------------------------
    :    WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 0      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             107.0              _zgi[b]ać_
    : 1      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             135.0              _zgi[ma]ć_
    : 2      wpisać      600539    wpi-sać                 2                 6      .*ać$  flibać          N   2.40        0.85   0.0       -7.0           2/3         -37.0              78.0              _fli[b]ać_
    : 3      wpisać      600539    wpi-sać                 2                 6      .*ać$  flimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             106.0              _fli[ma]ć_
    : 4      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwibać          N   2.00        0.45   0.0       -7.0           2/3          60.0             141.0              [_kw]ibać_
    : 5      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwimać          N   1.95        0.40   1.0       -6.0           2/3          60.0             169.0              [_kw]imać_
    : 6      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślibać          N   2.15        0.60   0.0       -7.0           2/3          38.0             117.0              _[śli]bać_
    : 7      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             145.0              _śli[ma]ć_
    : 8      wpisać      600539    wpi-sać                 2                 6      .*ać$  znibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             112.0              _zni[b]ać_
    : 9      wpisać      600539    wpi-sać                 2                 6      .*ać$  znimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             140.0              _zni[ma]ć_
    : 10     wpisać      600539    wpi-sać                 2                 6      .*ać$  glibać          N   2.20        0.65   1.0       -6.0           2/3         -57.0             131.0              [_gl]ibać_
    : 11     wpisać      600539    wpi-sać                 2                 6      .*ać$  glimać          N   2.10        0.55   1.0       -6.0           2/3         -57.0             159.0              [_gl]imać_
    : 12     wpisać      600539    wpi-sać                 2                 6      .*ać$  psibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0             106.0              _psi[b]ać_
    : 13     wpisać      600539    wpi-sać                 2                 6      .*ać$  psimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             134.0              _psi[ma]ć_
    : 14     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0              99.0              _gni[b]ać_
    : 15     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             127.0              _gni[ma]ć_
    : 16     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlibać          N   1.95        0.40   1.0       -6.0           2/3         -50.0             156.0              [_zl]ibać_
    : 17     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             184.0              _zli[ma]ć_
    : 18     wpisać      600539    wpi-sać                 2                 6      .*ać$  fribać          N   2.55        1.00   0.0       -7.0           2/3         -64.0             146.0              _[fri]bać_
    : 19     wpisać      600539    wpi-sać                 2                 6      .*ać$  frimać          N   2.65        1.10   0.0       -7.0           2/3         -64.0             174.0              _[fri]mać_
    : ---------------------------------------------------------------------------
    :      WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION
    : 1633     skupić      320973    sku-pić                 2                 6      .*ić$  spuwić          N   1.95        0.80   1.0      -14.0           2/3        -128.0             345.0              _[spu]wić_
    : 1634     skupić      320973    sku-pić                 2                 6      .*ić$  spucić          N   1.85        0.70   3.0      -12.0           2/3        -128.0             331.0              _[spu]cić_
    : 1635     skupić      320973    sku-pić                 2                 6      .*ić$  spukić          N   2.00        0.85   0.0      -15.0           2/3        -128.0             322.0              _[spu]kić_
    : 1636     skupić      320973    sku-pić                 2                 6      .*ić$  kruwić          N   2.00        0.85   0.0      -15.0           2/3         -80.0             285.0              _kru[w]ić_
    : 1637     skupić      320973    sku-pić                 2                 6      .*ić$  krukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             262.0              _kru[ki]ć_
    : 1638     skupić      320973    sku-pić                 2                 6      .*ić$  krucić          N   1.90        0.75   2.0      -13.0           2/3         109.0             271.0              _kru[c]ić_
    : 1639     skupić      320973    sku-pić                 2                 6      .*ić$  czuwić          N   1.85        0.70   3.0      -12.0           2/3         -80.0             234.0              _czu[w]ić_
    : 1640     skupić      320973    sku-pić                 2                 6      .*ić$  czukić          N   1.90        0.75   2.0      -13.0           2/3          99.0             211.0              _czu[ki]ć_
    : 1641     skupić      320973    sku-pić                 2                 6      .*ić$  czucić          N   1.55        0.40   9.0       -6.0           2/3         109.0             220.0              _czu[c]ić_
    : 1642     skupić      320973    sku-pić                 2                 6      .*ić$  gruwić          N   2.10        0.95   0.0      -15.0           2/3         -80.0             274.0              _gru[w]ić_
    : 1643     skupić      320973    sku-pić                 2                 6      .*ić$  grucić          N   1.95        0.80   1.0      -14.0           2/3         109.0             260.0              _gru[c]ić_
    : 1644     skupić      320973    sku-pić                 2                 6      .*ić$  grukić          N   2.05        0.90   0.0      -15.0           2/3          99.0             251.0              _gru[ki]ć_
    : 1645     skupić      320973    sku-pić                 2                 6      .*ić$  pruwić          N   1.95        0.80   1.0      -14.0           2/3        -125.0             374.0              _[pru]wić_
    : 1646     skupić      320973    sku-pić                 2                 6      .*ić$  prucić          N   1.80        0.65   4.0      -11.0           2/3        -125.0             360.0              _[pru]cić_
    : 1647     skupić      320973    sku-pić                 2                 6      .*ić$  prukić          N   2.00        0.85   0.0      -15.0           2/3        -125.0             351.0              _[pru]kić_
    : 1648     skupić      320973    sku-pić                 2                 6      .*ić$  kluwić          N   2.00        0.85   0.0      -15.0           2/3         -94.0             304.0              _[klu]wić_
    : 1649     skupić      320973    sku-pić                 2                 6      .*ić$  klucić          N   1.85        0.70   3.0      -12.0           2/3         109.0             290.0              _klu[c]ić_
    : 1650     skupić      320973    sku-pić                 2                 6      .*ić$  klukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             281.0              _klu[ki]ć_
    : 1651     skupić      320973    sku-pić                 2                 6      .*ić$  spulić          N   1.80        0.65   4.0      -11.0           2/3        -244.0             451.0              _spu[l]ić_
    : 1652     skupić      320973    sku-pić                 2                 6      .*ić$  krulić          N   1.95        0.80   1.0      -14.0           2/3        -244.0             391.0              _kru[l]ić_
    :
    :END:


*** DONE Extract actual (non-idle) =Wuggy= input words

    This takes into account only the natural language words that were
    actual source of the pseudowords, i.e., considers only these real
    words that Wuggy was able to generate at least one pseudoword
    based on.

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

tmp_nouns_freq = s0005_nouns_all_wuggy_merged_sgjp_merged_prelim[[ "WORD_nouns", "FREQ_nouns", ]].copy()
tmp_verbs_freq = s0005_verbs_all_wuggy_merged_sgjp_merged_prelim[[ "WORD_verbs", "FREQ_verbs", ]].copy()

tmp_nouns_freq_count_0 = tmp_nouns_freq.shape[0]
tmp_verbs_freq_count_0 = tmp_verbs_freq.shape[0]

tmp_nouns_freq.drop_duplicates(subset=["WORD_nouns",], keep="first", inplace=True)
tmp_verbs_freq.drop_duplicates(subset=["WORD_verbs",], keep="first", inplace=True)

tmp_nouns_freq_count_1 = tmp_nouns_freq.shape[0]
tmp_verbs_freq_count_1 = tmp_verbs_freq.shape[0]

print( "="*75 )
print( "Starting from: " + str(tmp_nouns_freq_count_1) + " nouns " + str( tmp_nouns_freq_count_0) + " pseudowords were generated."  )

print( "="*75 )
print( "Starting from: " + str(tmp_verbs_freq_count_1) + " verbs " + str( tmp_verbs_freq_count_0) + " pseudowords were generated."  )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[46]:
    # output
    : ===========================================================================
    : Starting from: 101 nouns 1997 pseudowords were generated.
    : ===========================================================================
    : Starting from: 84 verbs 1644 pseudowords were generated.
    :
    :END:

*** DONE Statistical testing on =nouns= and =verbs= frequencies

    Two-sample Kolmogorov-Smirnov test for the null hypothesis that 2
    independent samples are drawn from the same continuous
    distribution.

    If the K-S statistic is small or the p-value is high, then we
    cannot reject the hypothesis that the distributions of the two
    samples are the same.

    For a different distribution, we can reject the null hypothesis
    since the pvalue is below 1%.

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

from scipy import stats

tmp_nouns_freq_rvs1 = np.squeeze( np.array( tmp_nouns_freq[["FREQ_nouns"]]) )
tmp_verbs_freq_rvs2 = np.squeeze( np.array( tmp_verbs_freq[["FREQ_verbs"]]) )

stats.ks_2samp( tmp_nouns_freq_rvs1, tmp_verbs_freq_rvs2 )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[47]:
    # text/plain
    : Ks_2sampResult(statistic=0.13130598774163132, pvalue=0.3830179237968816)
    :END:

*** DONE Plot histograms

    [[./hist_00_input_words_frequencies.png]]

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

file_name = "./hist_00_input_words_frequencies.png"

fig = plt.figure( figsize=( 20, 10, ) )
ax = fig.add_subplot(1, 1, 1)

count, bins, ignored = plt.hist( tmp_nouns_freq_rvs1, 100, density=False, align="mid", alpha=0.5, label="nouns_freq", )
count, bins, ignored = plt.hist( tmp_verbs_freq_rvs2, 100, density=False, align="mid", alpha=0.5, label="verbs_freq", )

plt.axis("tight")

plt.legend(loc='upper right')

fig.suptitle( "Actual (non-idle) Wuggy input words frequencies", fontsize=24 )

plt.show()

fig.savefig( file_name, )
Image( file_name, )
plt.close(fig)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[48]:
    # text/plain
    : <Figure size 1440x720 with 1 Axes>

    # image/png
    [[file:obipy-resources/feca46b1a96165f6c3ce535305dba2b7-01zEZm.png]]
    :END:

** Proc 04: Testing ~all~ syllable frequency differences for =verbs= and =nouns=
*** DONE Pseudowords hyphenation

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen = words_hyphen( s0005_nouns_all_wuggy_merged_sgjp_merged_prelim, field="MATCH", verbose=0, )
s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen = words_hyphen( s0005_verbs_all_wuggy_merged_sgjp_merged_prelim, field="MATCH", verbose=0, )

# Used as word frequency factor in syllabels frequency count
s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen["ONE"] = 1
s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen["ONE"] = 1

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[49]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen,  ]
df_info = [ "s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[50]:
    # output
    : ===========================================================================
    : s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen
    : ===========================================================================
    : idx count: 1997
    : row count: 23  ['WORD_nouns', 'FREQ_nouns', 'SYLL_nouns', 'SYLL_COUNT_nouns', 'CHAR_COUNT_nouns', 'SUFF_nouns', 'M', 'F', 'N', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'ONE']
    : ---------------------------------------------------------------------------
    :    WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns     M      F      N    MATCH ... NED1  NED1_DIFF  OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION      SYLL  SYLL_COUNT CHAR_COUNT ONE
    : 0     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podsiut ...  0.0       -3.0            2/3         -15.0              32.0             _pod[siu]t_  pod-siut           2          7   1
    : 1     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojbiot ...  0.0       -3.0            2/3         -14.0              30.0             _poj[bio]t_  poj-biot           2          7   1
    : 2     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojsiot ...  0.0       -3.0            2/3          -9.0              17.0             _p[oj]siot_  poj-siot           2          7   1
    : 3     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojpiot ...  0.0       -3.0            2/3          -9.0              24.0             _p[oj]piot_  poj-piot           2          7   1
    : 4     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podbiut ...  0.0       -3.0            2/3         -29.0              43.0             _pod[biu]t_  pod-biut           2          7   1
    : 5     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podwiut ...  0.0       -3.0            2/3         -24.0              38.0             _pod[wiu]t_  pod-wiut           2          7   1
    : 6     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiat ...  0.0       -3.0            2/3          18.0              27.0             _po[dd]iat_  pod-diat           2          7   1
    : 7     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiut ...  0.0       -3.0            2/3          18.0              43.0             _po[dd]iut_  pod-diut           2          7   1
    : 8     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiet ...  1.0       -2.0            2/3          19.0              55.0             _podd[iet]_  pod-diet           2          7   1
    : 9     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podpiut ...  0.0       -3.0            2/3         -26.0              34.0             _pod[piu]t_  pod-piut           2          7   1
    : 10    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podgiat ...  0.0       -3.0            2/3         -21.0              42.0             _pod[gia]t_  pod-giat           2          7   1
    : 11    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiet ...  1.0       -2.0            2/3         -21.0              54.0             _pod[tie]t_  pod-tiet           2          7   1
    : 12    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiat ...  0.0       -3.0            2/3         -17.0              36.0             _pod[tia]t_  pod-tiat           2          7   1
    : 13    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiut ...  0.0       -3.0            2/3         -26.0              48.0             _pod[tiu]t_  pod-tiut           2          7   1
    : 14    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podkiat ...  0.0       -3.0            2/3         -27.0              43.0             _pod[kia]t_  pod-kiat           2          7   1
    : 15    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojwiot ...  0.0       -3.0            2/3         -22.0              46.0             _poj[wio]t_  poj-wiot           2          7   1
    : 16    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojgiot ...  0.0       -3.0            2/3         -24.0              39.0             _poj[gio]t_  poj-giot           2          7   1
    : 17    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojziot ...  0.0       -3.0            2/3         -20.0              34.0             _poj[zio]t_  poj-ziot           2          7   1
    : 18    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojfiot ...  0.0       -3.0            2/3         -27.0              43.0             _poj[fio]t_  poj-fiot           2          7   1
    : 19    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pomwiot ...  1.0       -2.0            2/3          38.0              79.0             _p[om]wiot_  po-mwiot           2          7   1
    :
    : [20 rows x 23 columns]
    : ---------------------------------------------------------------------------
    :      WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F     N    MATCH ... NED1  NED1_DIFF  OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION       SYLL  SYLL_COUNT CHAR_COUNT ONE
    : 2003    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wucanie ...  1.0      -10.0            2/3       -5815.0            9666.0             [_w]ucanie_  wu-ca-nie           3          7   1
    : 2004    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuranie ...  4.0       -7.0            2/3       -5815.0            8376.0             [_w]uranie_  wu-ra-nie           3          7   1
    : 2005    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wudanie ...  3.0       -8.0            2/3       -5815.0            9187.0             [_w]udanie_  wu-da-nie           3          7   1
    : 2006    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wukanie ...  7.0       -4.0            2/3       -5815.0            7679.0             [_w]ukanie_  wu-ka-nie           3          7   1
    : 2007    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuwanie ...  3.0       -8.0            2/3       -5815.0            9371.0             [_w]uwanie_  wu-wa-nie           3          7   1
    : 2008    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuzanie ...  0.0      -11.0            2/3       -5815.0           12789.0             [_w]uzanie_  wu-za-nie           3          7   1
    : 2009    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wulanie ...  8.0       -3.0            2/3       -5815.0           10434.0             [_w]ulanie_  wu-la-nie           3          7   1
    : 2010    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wusanie ...  0.0      -11.0            2/3       -5815.0            8693.0             [_w]usanie_  wu-sa-nie           3          7   1
    : 2011    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wufanie ...  2.0       -9.0            2/3       -5815.0           15093.0             [_w]ufanie_  wu-fa-nie           3          7   1
    : 2012    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wubanie ...  0.0      -11.0            2/3       -5815.0            9254.0             [_w]ubanie_  wu-ba-nie           3          7   1
    : 2013    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuhanie ...  1.0      -10.0            2/3       -5952.0           15931.0             _wu[h]anie_  wu-ha-nie           3          7   1
    : 2014    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wułanie ...  3.0       -8.0            2/3       -5815.0           12549.0             [_w]ułanie_  wu-ła-nie           3          7   1
    : 2015    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wutawie ...  0.0      -11.0            2/3       -6840.0           18289.0             _wuta[w]ie_  wu-ta-wie           3          7   1
    : 2016    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wunanie ...  0.0      -11.0            2/3       -5815.0           10162.0             [_w]unanie_  wu-na-nie           3          7   1
    : 2017    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wupanie ...  3.0       -8.0            2/3       -5815.0            9814.0             [_w]upanie_  wu-pa-nie           3          7   1
    : 2018    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuganie ...  2.0       -9.0            2/3       -5815.0            9863.0             [_w]uganie_  wu-ga-nie           3          7   1
    : 2019    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wujanie ...  1.0      -10.0            2/3       -5815.0           11302.0             [_w]ujanie_  wu-ja-nie           3          7   1
    : 2020    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wumanie ...  3.0       -8.0            2/3       -5815.0            8944.0             [_w]umanie_  wu-ma-nie           3          7   1
    : 2021    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wużanie ...  0.0      -11.0            2/3       -5815.0           12323.0             [_w]użanie_  wu-ża-nie           3          7   1
    : 2022    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wecanie ...  1.0      -10.0            2/3       -5815.0            9055.0             [_w]ecanie_  we-ca-nie           3          7   1
    :
    : [20 rows x 23 columns]
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen,  ]
df_info = [ "s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[51]:
    # output
    : ===========================================================================
    : s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen
    : ===========================================================================
    : idx count: 1644
    : row count: 20  ['WORD_verbs', 'FREQ_verbs', 'SYLL_verbs', 'SYLL_COUNT_verbs', 'CHAR_COUNT_verbs', 'SUFF_verbs', 'MATCH', 'LEXICALITY', 'OLD20', 'OLD20_DIFF', 'NED1', 'NED1_DIFF', 'OVERLAP_RATIO', 'MAXDEVIATION', 'SUMMED_DEVIATION', 'MAXDEVIATION_TRANSITION', 'SYLL', 'SYLL_COUNT', 'CHAR_COUNT', 'ONE']
    : ---------------------------------------------------------------------------
    :    WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION     SYLL  SYLL_COUNT  CHAR_COUNT  ONE
    : 0      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             107.0              _zgi[b]ać_  zgi-bać           2           6    1
    : 1      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             135.0              _zgi[ma]ć_  zgi-mać           2           6    1
    : 2      wpisać      600539    wpi-sać                 2                 6      .*ać$  flibać          N   2.40        0.85   0.0       -7.0           2/3         -37.0              78.0              _fli[b]ać_  fli-bać           2           6    1
    : 3      wpisać      600539    wpi-sać                 2                 6      .*ać$  flimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             106.0              _fli[ma]ć_  fli-mać           2           6    1
    : 4      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwibać          N   2.00        0.45   0.0       -7.0           2/3          60.0             141.0              [_kw]ibać_  kwi-bać           2           6    1
    : 5      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwimać          N   1.95        0.40   1.0       -6.0           2/3          60.0             169.0              [_kw]imać_  kwi-mać           2           6    1
    : 6      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślibać          N   2.15        0.60   0.0       -7.0           2/3          38.0             117.0              _[śli]bać_  śli-bać           2           6    1
    : 7      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             145.0              _śli[ma]ć_  śli-mać           2           6    1
    : 8      wpisać      600539    wpi-sać                 2                 6      .*ać$  znibać          N   1.90        0.35   2.0       -5.0           2/3         -37.0             112.0              _zni[b]ać_  zni-bać           2           6    1
    : 9      wpisać      600539    wpi-sać                 2                 6      .*ać$  znimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             140.0              _zni[ma]ć_  zni-mać           2           6    1
    : 10     wpisać      600539    wpi-sać                 2                 6      .*ać$  glibać          N   2.20        0.65   1.0       -6.0           2/3         -57.0             131.0              [_gl]ibać_  gli-bać           2           6    1
    : 11     wpisać      600539    wpi-sać                 2                 6      .*ać$  glimać          N   2.10        0.55   1.0       -6.0           2/3         -57.0             159.0              [_gl]imać_  gli-mać           2           6    1
    : 12     wpisać      600539    wpi-sać                 2                 6      .*ać$  psibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0             106.0              _psi[b]ać_  psi-bać           2           6    1
    : 13     wpisać      600539    wpi-sać                 2                 6      .*ać$  psimać          N   1.90        0.35   2.0       -5.0           2/3          52.0             134.0              _psi[ma]ć_  psi-mać           2           6    1
    : 14     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnibać          N   1.95        0.40   1.0       -6.0           2/3         -37.0              99.0              _gni[b]ać_  gni-bać           2           6    1
    : 15     wpisać      600539    wpi-sać                 2                 6      .*ać$  gnimać          N   2.00        0.45   0.0       -7.0           2/3          52.0             127.0              _gni[ma]ć_  gni-mać           2           6    1
    : 16     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlibać          N   1.95        0.40   1.0       -6.0           2/3         -50.0             156.0              [_zl]ibać_  zli-bać           2           6    1
    : 17     wpisać      600539    wpi-sać                 2                 6      .*ać$  zlimać          N   1.95        0.40   1.0       -6.0           2/3          52.0             184.0              _zli[ma]ć_  zli-mać           2           6    1
    : 18     wpisać      600539    wpi-sać                 2                 6      .*ać$  fribać          N   2.55        1.00   0.0       -7.0           2/3         -64.0             146.0              _[fri]bać_  fri-bać           2           6    1
    : 19     wpisać      600539    wpi-sać                 2                 6      .*ać$  frimać          N   2.65        1.10   0.0       -7.0           2/3         -64.0             174.0              _[fri]mać_  fri-mać           2           6    1
    : ---------------------------------------------------------------------------
    :      WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION     SYLL  SYLL_COUNT  CHAR_COUNT  ONE
    : 1633     skupić      320973    sku-pić                 2                 6      .*ić$  spuwić          N   1.95        0.80   1.0      -14.0           2/3        -128.0             345.0              _[spu]wić_  spu-wić           2           6    1
    : 1634     skupić      320973    sku-pić                 2                 6      .*ić$  spucić          N   1.85        0.70   3.0      -12.0           2/3        -128.0             331.0              _[spu]cić_  spu-cić           2           6    1
    : 1635     skupić      320973    sku-pić                 2                 6      .*ić$  spukić          N   2.00        0.85   0.0      -15.0           2/3        -128.0             322.0              _[spu]kić_  spu-kić           2           6    1
    : 1636     skupić      320973    sku-pić                 2                 6      .*ić$  kruwić          N   2.00        0.85   0.0      -15.0           2/3         -80.0             285.0              _kru[w]ić_  kru-wić           2           6    1
    : 1637     skupić      320973    sku-pić                 2                 6      .*ić$  krukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             262.0              _kru[ki]ć_  kru-kić           2           6    1
    : 1638     skupić      320973    sku-pić                 2                 6      .*ić$  krucić          N   1.90        0.75   2.0      -13.0           2/3         109.0             271.0              _kru[c]ić_  kru-cić           2           6    1
    : 1639     skupić      320973    sku-pić                 2                 6      .*ić$  czuwić          N   1.85        0.70   3.0      -12.0           2/3         -80.0             234.0              _czu[w]ić_  czu-wić           2           6    1
    : 1640     skupić      320973    sku-pić                 2                 6      .*ić$  czukić          N   1.90        0.75   2.0      -13.0           2/3          99.0             211.0              _czu[ki]ć_  czu-kić           2           6    1
    : 1641     skupić      320973    sku-pić                 2                 6      .*ić$  czucić          N   1.55        0.40   9.0       -6.0           2/3         109.0             220.0              _czu[c]ić_  czu-cić           2           6    1
    : 1642     skupić      320973    sku-pić                 2                 6      .*ić$  gruwić          N   2.10        0.95   0.0      -15.0           2/3         -80.0             274.0              _gru[w]ić_  gru-wić           2           6    1
    : 1643     skupić      320973    sku-pić                 2                 6      .*ić$  grucić          N   1.95        0.80   1.0      -14.0           2/3         109.0             260.0              _gru[c]ić_  gru-cić           2           6    1
    : 1644     skupić      320973    sku-pić                 2                 6      .*ić$  grukić          N   2.05        0.90   0.0      -15.0           2/3          99.0             251.0              _gru[ki]ć_  gru-kić           2           6    1
    : 1645     skupić      320973    sku-pić                 2                 6      .*ić$  pruwić          N   1.95        0.80   1.0      -14.0           2/3        -125.0             374.0              _[pru]wić_  pru-wić           2           6    1
    : 1646     skupić      320973    sku-pić                 2                 6      .*ić$  prucić          N   1.80        0.65   4.0      -11.0           2/3        -125.0             360.0              _[pru]cić_  pru-cić           2           6    1
    : 1647     skupić      320973    sku-pić                 2                 6      .*ić$  prukić          N   2.00        0.85   0.0      -15.0           2/3        -125.0             351.0              _[pru]kić_  pru-kić           2           6    1
    : 1648     skupić      320973    sku-pić                 2                 6      .*ić$  kluwić          N   2.00        0.85   0.0      -15.0           2/3         -94.0             304.0              _[klu]wić_  klu-wić           2           6    1
    : 1649     skupić      320973    sku-pić                 2                 6      .*ić$  klucić          N   1.85        0.70   3.0      -12.0           2/3         109.0             290.0              _klu[c]ić_  klu-cić           2           6    1
    : 1650     skupić      320973    sku-pić                 2                 6      .*ić$  klukić          N   1.95        0.80   1.0      -14.0           2/3          99.0             281.0              _klu[ki]ć_  klu-kić           2           6    1
    : 1651     skupić      320973    sku-pić                 2                 6      .*ić$  spulić          N   1.80        0.65   4.0      -11.0           2/3        -244.0             451.0              _spu[l]ić_  spu-lić           2           6    1
    : 1652     skupić      320973    sku-pić                 2                 6      .*ić$  krulić          N   1.95        0.80   1.0      -14.0           2/3        -244.0             391.0              _kru[l]ić_  kru-lić           2           6    1
    :
    :END:

*** DONE Produce syllables corpora

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

tmp_nouns_sylls_all = words_to_sylls_corp( s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen, df_sylls_corp=None, syll_col="SYLL", freq_col="ONE", limit=None, exclude_last_syll=False, verbose=0, )
tmp_verbs_sylls_all = words_to_sylls_corp( s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen, df_sylls_corp=None, syll_col="SYLL", freq_col="ONE", limit=None, exclude_last_syll=False, verbose=0, )

tmp_nouns_sylls_all.sort_values( by=["COUNT"], ascending=False, axis=0, inplace=True, )
tmp_verbs_sylls_all.sort_values( by=["COUNT"], ascending=False, axis=0, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[52]:
    :END:

*** DONE Checkup on syllable frequencies for =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  tmp_nouns_sylls_all,  ]
df_info = [ "tmp_nouns_sylls_all", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[53]:
    # output
    : ===========================================================================
    : tmp_nouns_sylls_all
    : ===========================================================================
    : idx count: 1357
    : row count: 2  ['SYLL', 'COUNT']
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 50     ka    233
    : 998   nie    185
    : 373    ko    135
    : 21     po    119
    : 56     na    111
    : 554    da     88
    : 353     a     77
    : 47     ro     72
    : 48     ra     71
    : 55     ta     69
    : 991   kie     63
    : 267    wa     55
    : 371    wo     46
    : 181     o     44
    : 391    wy     43
    : 553  tkwi     38
    : 808     u     38
    : 58     mo     34
    : 713   sło     33
    : 53     ma     32
    : ---------------------------------------------------------------------------
    :        SYLL  COUNT
    : 589   zwial      1
    : 590   zwioł      1
    : 591   zwieł      1
    : 592   briam      1
    : 593   brial      1
    : 594   brieł      1
    : 595   zmiam      1
    : 596   zmial      1
    : 597   zmioł      1
    : 598   driam      1
    : 599   drial      1
    : 602   dziem      1
    : 603   dziel      1
    : 605     kac      1
    : 606     kat      1
    : 607     kaw      1
    : 609     kas      1
    : 618     fta      1
    : 621     kaz      1
    : 1356  zwiej      1
    :
    :END:

*** DONE Checkup on syllable frequencies for =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  tmp_verbs_sylls_all,  ]
df_info = [ "tmp_verbs_sylls_all", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[54]:
    # output
    : ===========================================================================
    : tmp_verbs_sylls_all
    : ===========================================================================
    : idx count: 990
    : row count: 2  ['SYLL', 'COUNT']
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 134     o    114
    : 99     na    100
    : 12      u     99
    : 346   wać     93
    : 72    nić     70
    : 64    kić     68
    : 201  skić     60
    : 299    po     57
    : 175    wy     57
    : 37    cać     57
    : 36    kać     54
    : 2     mać     53
    : 86    cić     51
    : 84    pić     47
    : 439   nać     44
    : 33    sać     43
    : 83    wić     40
    : 35    jać     40
    : 14   czyć     39
    : 220    za     36
    : ---------------------------------------------------------------------------
    :          SYLL  COUNT
    : 556      czyń      1
    : 537       wpu      1
    : 546     łczyć      1
    : 538      zgut      1
    : 124      glić      1
    : 540      szać      1
    : 542      drut      1
    : 543      skuj      1
    : 544      spiń      1
    : 545      spań      1
    : 547      czań      1
    : 555      czeń      1
    : 548      klań      1
    : 549      kliń      1
    : 550      krań      1
    : 551      skum      1
    : 552      skul      1
    : 553  spodczyć      1
    : 554      spoj      1
    : 495      rwie      1
    :
    :END:

*** DONE Statistical testing on frequencies

    Two-sample Kolmogorov-Smirnov test for the null hypothesis that 2
    independent samples are drawn from the same continuous
    distribution.

    If the K-S statistic is small or the p-value is high, then we
    cannot reject the hypothesis that the distributions of the two
    samples are the same.

    For a different distribution, we can reject the null hypothesis
    since the pvalue is below 1%.

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

from scipy import stats

tmp_nouns_sylls_all_rvs1 = np.squeeze( np.array( tmp_nouns_sylls_all[["COUNT"]]) )
tmp_verbs_sylls_all_rvs2 = np.squeeze( np.array( tmp_verbs_sylls_all[["COUNT"]]) )

stats.ks_2samp(tmp_nouns_sylls_all_rvs1, tmp_verbs_sylls_all_rvs2)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[55]:
    # text/plain
    : Ks_2sampResult(statistic=0.05293465234511663, pvalue=0.07821866523888928)
    :END:

*** DONE Plot histograms

    [[./hist_01_sylls_00_all.png]]

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

file_name = "./hist_01_sylls_00_all.png"

fig = plt.figure( figsize=( 30, 10, ) )
ax = fig.add_subplot(1, 1, 1)

count, bins, ignored = plt.hist( tmp_nouns_sylls_all_rvs1, 100, density=False, align="mid", alpha=0.5, label="nouns_sylls_all", )
count, bins, ignored = plt.hist( tmp_verbs_sylls_all_rvs2, 100, density=False, align="mid", alpha=0.5, label="verbs_sylls_all", )

plt.axis("tight")

plt.legend(loc='upper right')

fig.suptitle( "All syllable frequencies", fontsize=24 )

plt.show()

fig.savefig( file_name, )
Image( file_name, )
plt.close(fig)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[56]:
    # text/plain
    : <Figure size 2160x720 with 1 Axes>

    # image/png
    [[file:obipy-resources/feca46b1a96165f6c3ce535305dba2b7-06WMMw.png]]
    :END:

** Proc 05: Testing ~all but last~ syllable frequency differences for =verbs= and =nouns=
*** DONE Produce syllables corpora

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

tmp_nouns_sylls_nolast = words_to_sylls_corp( s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen, df_sylls_corp=None, syll_col="SYLL", freq_col="ONE", limit=None, exclude_last_syll=True, verbose=0, )
tmp_verbs_sylls_nolast = words_to_sylls_corp( s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen, df_sylls_corp=None, syll_col="SYLL", freq_col="ONE", limit=None, exclude_last_syll=True, verbose=0, )

tmp_nouns_sylls_nolast.sort_values( by=["COUNT"], ascending=False, axis=0, inplace=True, )
tmp_verbs_sylls_nolast.sort_values( by=["COUNT"], ascending=False, axis=0, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[57]:
    :END:

*** DONE Checkup on syllable frequencies for =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  tmp_nouns_sylls_nolast,  ]
df_info = [ "tmp_nouns_sylls_nolast", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[58]:
    # output
    : ===========================================================================
    : tmp_nouns_sylls_nolast
    : ===========================================================================
    : idx count: 934
    : row count: 2  ['SYLL', 'COUNT']
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 2      po    119
    : 125     a     77
    : 30     na     63
    : 22     ro     52
    : 127    ko     50
    : 62      o     44
    : 143    wy     43
    : 24     ka     39
    : 228  tkwi     38
    : 456     u     38
    : 32     mo     34
    : 107    wa     33
    : 108    do     32
    : 27     ma     31
    : 23     ra     30
    : 31     pa     29
    : 110    to     28
    : 29     ta     28
    : 97     sy     25
    : 55     za     24
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 429   bar      1
    : 428   rar      1
    : 409  adio      1
    : 410    iu      1
    : 411  adia      1
    : 412   kiu      1
    : 413   kia      1
    : 414   wio      1
    : 415   wiu      1
    : 416   wia      1
    : 417   zio      1
    : 418   ziu      1
    : 419   zia      1
    : 420   sio      1
    : 421   siu      1
    : 422   sia      1
    : 424   fia      1
    : 426   mar      1
    : 427   kar      1
    : 933    ha      1
    :
    :END:

*** DONE Checkup on syllable frequencies for =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  tmp_verbs_sylls_nolast,  ]
df_info = [ "tmp_verbs_sylls_nolast", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[59]:
    # output
    : ===========================================================================
    : tmp_verbs_sylls_nolast
    : ===========================================================================
    : idx count: 777
    : row count: 2  ['SYLL', 'COUNT']
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 88      o    114
    : 67     na    100
    : 10      u     99
    : 123    wy     57
    : 213    po     57
    : 160    za     36
    : 57     ci     25
    : 73     ko     24
    : 192  szte     22
    : 118    ce     20
    : 706    on     20
    : 354    my     19
    : 240    wo     18
    : 199   cza     18
    : 311    ba     18
    : 533    do     17
    : 539    bo     17
    : 58     ro     17
    : 77    kie     16
    : 22   ścia     16
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 427  kreń      1
    : 426  kruń      1
    : 425  czuń      1
    : 424  czyń      1
    : 422  spoj      1
    : 407   wal      1
    : 421  skul      1
    : 420  skum      1
    : 419  krań      1
    : 418  kliń      1
    : 417  klań      1
    : 416  czań      1
    : 415  spań      1
    : 414  spiń      1
    : 413  skuj      1
    : 412  drut      1
    : 410  zgut      1
    : 409   wpu      1
    : 408   rzu      1
    : 388  wcie      1
    :
    :END:

*** DONE Statistical testing on frequencies

    Two-sample Kolmogorov-Smirnov test for the null hypothesis that 2
    independent samples are drawn from the same continuous
    distribution.

    If the K-S statistic is small or the p-value is high, then we
    cannot reject the hypothesis that the distributions of the two
    samples are the same.

    For a different distribution, we can reject the null hypothesis
    since the pvalue is below 1%.

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

from scipy import stats

tmp_nouns_sylls_nolast_rvs1 = np.squeeze( np.array( tmp_nouns_sylls_nolast[["COUNT"]]) )
tmp_verbs_sylls_nolast_rvs2 = np.squeeze( np.array( tmp_verbs_sylls_nolast[["COUNT"]]) )

stats.ks_2samp(tmp_nouns_sylls_nolast_rvs1, tmp_verbs_sylls_nolast_rvs2)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[60]:
    # text/plain
    : Ks_2sampResult(statistic=0.03544903116637599, pvalue=0.6532776318532905)
    :END:

*** DONE Plot histograms

    [[./hist_01_sylls_01_all_but_last.png]]

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

file_name = "./hist_01_sylls_01_all_but_last.png"

fig = plt.figure( figsize=( 30, 10, ) )
ax = fig.add_subplot(1, 1, 1)

count, bins, ignored = plt.hist( tmp_nouns_sylls_nolast_rvs1, 100, density=False, align="mid", alpha=0.5, label="nouns_sylls_nolast", )
count, bins, ignored = plt.hist( tmp_verbs_sylls_nolast_rvs2, 100, density=False, align="mid", alpha=0.5, label="verbs_sylls_nolast", )

plt.axis("tight")

plt.legend(loc='upper right')

fig.suptitle( "All but last syllable frequencies", fontsize=24 )

plt.show()

fig.savefig( file_name, )
Image( file_name, )
plt.close(fig)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[61]:
    # text/plain
    : <Figure size 2160x720 with 1 Axes>

    # image/png
    [[file:obipy-resources/feca46b1a96165f6c3ce535305dba2b7-XLUeTR.png]]
    :END:

** Proc 06: Testing ~first~ syllable frequency differences for =verbs= and =nouns=
*** DONE Produce syllables corpora

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen["SYLL_ALL"] = s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen["SYLL"]
s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen["SYLL_ALL"] = s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen["SYLL"]

s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen["SYLL_FIRST"] = s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen.apply( lambda x: x.SYLL.split("-",1)[0], axis=1, )
s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen["SYLL_FIRST"] = s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen.apply( lambda x: x.SYLL.split("-",1)[0], axis=1, )

tmp_nouns_sylls_first = words_to_sylls_corp( s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen, df_sylls_corp=None, syll_col="SYLL_FIRST", freq_col="ONE", limit=None, exclude_last_syll=False, verbose=0, )
tmp_verbs_sylls_first = words_to_sylls_corp( s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen, df_sylls_corp=None, syll_col="SYLL_FIRST", freq_col="ONE", limit=None, exclude_last_syll=False, verbose=0, )

tmp_nouns_sylls_first.sort_values( by=["COUNT"], ascending=False, axis=0, inplace=True, )
tmp_verbs_sylls_first.sort_values( by=["COUNT"], ascending=False, axis=0, inplace=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[62]:
    :END:

*** DONE Checkup on syllable frequencies for =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  tmp_nouns_sylls_first,  ]
df_info = [ "tmp_nouns_sylls_first", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[63]:
    # output
    : ===========================================================================
    : tmp_nouns_sylls_first
    : ===========================================================================
    : idx count: 637
    : row count: 2  ['SYLL', 'COUNT']
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 2      po    116
    : 118     a     77
    : 24     na     58
    : 56      o     44
    : 137    wy     39
    : 308     u     38
    : 211  tkwi     38
    : 22     ro     35
    : 103    do     28
    : 101    wa     27
    : 121    ko     25
    : 99     ma     24
    : 26     ta     22
    : 15     se     21
    : 23     mo     21
    : 100    ka     20
    : 255    sy     20
    : 346   fir     20
    : 47     za     20
    : 145    pa     20
    : ---------------------------------------------------------------------------
    :       SYLL  COUNT
    : 293    cer      1
    : 292    cyr      1
    : 291    zaj      1
    : 290    zań      1
    : 289    zar      1
    : 288    zur      1
    : 287    zor      1
    : 286    zir      1
    : 285    zyr      1
    : 284    bar      1
    : 283    rar      1
    : 282    kar      1
    : 281    mar      1
    : 280   adia      1
    : 279   adio      1
    : 277   słob      1
    : 275   słop      1
    : 272  zmiem      1
    : 271  ćwiej      1
    : 636  zwiej      1
    :
    :END:

*** DONE Checkup on syllable frequencies for =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

df_list = [  tmp_verbs_sylls_first,  ]
df_info = [ "tmp_verbs_sylls_first", ]
df_head = 20
df_tail = 20

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[64]:
    # output
    : ===========================================================================
    : tmp_verbs_sylls_first
    : ===========================================================================
    : idx count: 557
    : row count: 2  ['SYLL', 'COUNT']
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 63      o    114
    : 10      u     99
    : 46     na     97
    : 151    po     57
    : 98     wy     56
    : 122    za     36
    : 50     ko     22
    : 138  szte     22
    : 516    on     20
    : 216    ba     18
    : 168    wo     17
    : 145   cza     16
    : 418    do     16
    : 152    le     15
    : 44     ro     15
    : 143   kra     14
    : 222   cha     14
    : 146   gra     13
    : 144   kla     12
    : 52    kie     12
    : ---------------------------------------------------------------------------
    :      SYLL  COUNT
    : 279   wej      1
    : 277   min      1
    : 276   mil      1
    : 275   wał      1
    : 29    pel      1
    : 271   wam      1
    : 270  wcie      1
    : 268  wzie      1
    : 257  mnie      1
    : 267  cnie      1
    : 266  wsie      1
    : 265  wnie      1
    : 264  ssie      1
    : 263  knie      1
    : 262  śmie      1
    : 261  ksie      1
    : 260  gwie      1
    : 259  rwie      1
    : 258  pnie      1
    : 316   glo      1
    :
    :END:

*** DONE Statistical testing on frequencies

    Two-sample Kolmogorov-Smirnov test for the null hypothesis that 2
    independent samples are drawn from the same continuous
    distribution.

    If the K-S statistic is small or the p-value is high, then we
    cannot reject the hypothesis that the distributions of the two
    samples are the same.

    For a different distribution, we can reject the null hypothesis
    since the pvalue is below 1%.

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

from scipy import stats

tmp_nouns_sylls_first_rvs1 = np.squeeze( np.array( tmp_nouns_sylls_first[["COUNT"]]) )
tmp_verbs_sylls_first_rvs2 = np.squeeze( np.array( tmp_verbs_sylls_first[["COUNT"]]) )

stats.ks_2samp(tmp_nouns_sylls_first_rvs1, tmp_verbs_sylls_first_rvs2)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[65]:
    # text/plain
    : Ks_2sampResult(statistic=0.0331586853772029, pvalue=0.8946245835439234)
    :END:

*** DONE Plot histograms

    [[./hist_01_sylls_02_first.png]]

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

file_name = "./hist_01_sylls_02_first.png"

fig = plt.figure( figsize=( 30, 10, ) )
ax = fig.add_subplot(1, 1, 1)

count, bins, ignored = plt.hist( tmp_nouns_sylls_first_rvs1, 100, density=False, align="mid", alpha=0.5, label="nouns_sylls_first", )
count, bins, ignored = plt.hist( tmp_verbs_sylls_first_rvs2, 100, density=False, align="mid", alpha=0.5, label="verbs_sylls_first", )

plt.axis("tight")

plt.legend(loc='upper right')

fig.suptitle( "First syllable frequencies", fontsize=24 )

plt.show()

fig.savefig( file_name, )
Image( file_name, )
plt.close(fig)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[66]:
    # text/plain
    : <Figure size 2160x720 with 1 Axes>

    # image/png
    [[file:obipy-resources/feca46b1a96165f6c3ce535305dba2b7-yp3jfW.png]]
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0005.py

DEMO_MODE = False

if not DEMO_MODE:
    df_to_xlsx( df_data=s0005_nouns_all_wuggy_merged_sgjp_merged_prelim        , df_name="s0005_nouns_all_wuggy_merged_sgjp_merged_prelim"        , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0005_verbs_all_wuggy_merged_sgjp_merged_prelim        , df_name="s0005_verbs_all_wuggy_merged_sgjp_merged_prelim"        , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen , df_name="s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen" , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen , df_name="s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen" , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=tmp_nouns_sylls_all                                    , df_name="tmp_nouns_sylls_all"                                    , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=tmp_verbs_sylls_all                                    , df_name="tmp_verbs_sylls_all"                                    , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=tmp_nouns_sylls_nolast                                 , df_name="tmp_nouns_sylls_nolast"                                 , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=tmp_verbs_sylls_nolast                                 , df_name="tmp_verbs_sylls_nolast"                                 , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=tmp_nouns_sylls_first                                  , df_name="tmp_nouns_sylls_first"                                  , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=tmp_verbs_sylls_first                                  , df_name="tmp_verbs_sylls_first"                                  , df_path="data_out", add_time=False, verbose=1, )
    print( "="*75 )
    print("Saved *.xlsx")
else:
    print("*** Not saving any *.xlsx files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[67]:
    # output
    : Saving DataFrame as: data_out/s0005_nouns_all_wuggy_merged_sgjp_merged_prelim.xlsx
    : Saving DataFrame as: data_out/s0005_verbs_all_wuggy_merged_sgjp_merged_prelim.xlsx
    : Saving DataFrame as: data_out/s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen.xlsx
    : Saving DataFrame as: data_out/s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen.xlsx
    : Saving DataFrame as: data_out/tmp_nouns_sylls_all.xlsx
    : Saving DataFrame as: data_out/tmp_verbs_sylls_all.xlsx
    : Saving DataFrame as: data_out/tmp_nouns_sylls_nolast.xlsx
    : Saving DataFrame as: data_out/tmp_verbs_sylls_nolast.xlsx
    : Saving DataFrame as: data_out/tmp_nouns_sylls_first.xlsx
    : Saving DataFrame as: data_out/tmp_verbs_sylls_first.xlsx
    : ===========================================================================
    : Saved *.xlsx
    :
    :END:

* DEPR Stage 0006: Levenshtein
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

DEMO_MODE = False

s0055_nouns_hyphen = pd.read_excel( "./data_out/s0055_nouns_hyphen.xlsx", ignore_index=True, )
s0055_verbs_hyphen = pd.read_excel( "./data_out/s0055_verbs_hyphen.xlsx", ignore_index=True, )

s0055_nouns_hyphen = s0055_nouns_hyphen.replace( np.nan, "", regex=True )
s0055_verbs_hyphen = s0055_verbs_hyphen.replace( np.nan, "", regex=True )

    #+END_SRC

** Proc 01: Prepare =Levenshtein=
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

s0006_nouns = s0055_nouns_hyphen
s0006_verbs = s0055_verbs_hyphen

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[58]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

df_list = [  s0006_nouns,  ]
df_info = [ "s0006_nouns", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[59]:
    # output
    : ===========================================================================
    : s0006_nouns
    : ===========================================================================
    : idx count: 1997
    : row count: 25  ["WORD_nouns", "FREQ_nouns", "SYLL_nouns", "SYLL_COUNT_nouns", "CHAR_COUNT_nouns", "SUFF_nouns", "M", "F", "N", "MATCH", "LEXICALITY", "OLD20", "OLD20_DIFF", "NED1", "NED1_DIFF", "OVERLAP_RATIO", "MAXDEVIATION", "SUMMED_DEVIATION", "MAXDEVIATION_TRANSITION", "SYLL", "SYLL_COUNT", "CHAR_COUNT", "ONE", "SYLL_ALL", "SYLL_FIRST"]
    : ---------------------------------------------------------------------------
    :    WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns     M      F      N    MATCH    ...     OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION  MAXDEVIATION_TRANSITION      SYLL SYLL_COUNT  CHAR_COUNT  ONE  SYLL_ALL SYLL_FIRST
    : 0     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podsiut    ...               2/3           -15                32              _pod[siu]t_  pod-siut          2           7    1  pod-siut        pod
    : 1     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojbiot    ...               2/3           -14                30              _poj[bio]t_  poj-biot          2           7    1  poj-biot        poj
    : 2     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojsiot    ...               2/3            -9                17              _p[oj]siot_  poj-siot          2           7    1  poj-siot        poj
    : 3     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  pojpiot    ...               2/3            -9                24              _p[oj]piot_  poj-piot          2           7    1  poj-piot        poj
    : 4     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podbiut    ...               2/3           -29                43              _pod[biu]t_  pod-biut          2           7    1  pod-biut        pod
    : 5     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podwiut    ...               2/3           -24                38              _pod[wiu]t_  pod-wiut          2           7    1  pod-wiut        pod
    : 6     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiat    ...               2/3            18                27              _po[dd]iat_  pod-diat          2           7    1  pod-diat        pod
    : 7     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiut    ...               2/3            18                43              _po[dd]iut_  pod-diut          2           7    1  pod-diut        pod
    : 8     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  poddiet    ...               2/3            19                55              _podd[iet]_  pod-diet          2           7    1  pod-diet        pod
    : 9     podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podpiut    ...               2/3           -26                34              _pod[piu]t_  pod-piut          2           7    1  pod-piut        pod
    : 10    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podgiat    ...               2/3           -21                42              _pod[gia]t_  pod-giat          2           7    1  pod-giat        pod
    : 11    podmiot      600584   pod-miot                 2                 7       .*t$  True  False  False  podtiet    ...               2/3           -21                54              _pod[tie]t_  pod-tiet          2           7    1  pod-tiet        pod
    :
    : [12 rows x 25 columns]
    : ---------------------------------------------------------------------------
    :      WORD_nouns  FREQ_nouns SYLL_nouns  SYLL_COUNT_nouns  CHAR_COUNT_nouns SUFF_nouns      M      F     N    MATCH    ...     OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION  MAXDEVIATION_TRANSITION       SYLL SYLL_COUNT  CHAR_COUNT  ONE   SYLL_ALL SYLL_FIRST
    : 2011    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wufanie    ...               2/3         -5815             15093              [_w]ufanie_  wu-fa-nie          3           7    1  wu-fa-nie         wu
    : 2012    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wubanie    ...               2/3         -5815              9254              [_w]ubanie_  wu-ba-nie          3           7    1  wu-ba-nie         wu
    : 2013    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuhanie    ...               2/3         -5952             15931              _wu[h]anie_  wu-ha-nie          3           7    1  wu-ha-nie         wu
    : 2014    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wułanie    ...               2/3         -5815             12549              [_w]ułanie_  wu-ła-nie          3           7    1  wu-ła-nie         wu
    : 2015    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wutawie    ...               2/3         -6840             18289              _wuta[w]ie_  wu-ta-wie          3           7    1  wu-ta-wie         wu
    : 2016    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wunanie    ...               2/3         -5815             10162              [_w]unanie_  wu-na-nie          3           7    1  wu-na-nie         wu
    : 2017    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wupanie    ...               2/3         -5815              9814              [_w]upanie_  wu-pa-nie          3           7    1  wu-pa-nie         wu
    : 2018    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wuganie    ...               2/3         -5815              9863              [_w]uganie_  wu-ga-nie          3           7    1  wu-ga-nie         wu
    : 2019    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wujanie    ...               2/3         -5815             11302              [_w]ujanie_  wu-ja-nie          3           7    1  wu-ja-nie         wu
    : 2020    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wumanie    ...               2/3         -5815              8944              [_w]umanie_  wu-ma-nie          3           7    1  wu-ma-nie         wu
    : 2021    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wużanie    ...               2/3         -5815             12323              [_w]użanie_  wu-ża-nie          3           7    1  wu-ża-nie         wu
    : 2022    pytanie     3736580  py-ta-nie                 3                 7       .*e$  False  False  True  wecanie    ...               2/3         -5815              9055              [_w]ecanie_  we-ca-nie          3           7    1  we-ca-nie         we
    :
    : [12 rows x 25 columns]
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

df_list = [  s0006_verbs,  ]
df_info = [ "s0006_verbs", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[60]:
    # output
    : ===========================================================================
    : s0006_verbs
    : ===========================================================================
    : idx count: 1644
    : row count: 22  ["WORD_verbs", "FREQ_verbs", "SYLL_verbs", "SYLL_COUNT_verbs", "CHAR_COUNT_verbs", "SUFF_verbs", "MATCH", "LEXICALITY", "OLD20", "OLD20_DIFF", "NED1", "NED1_DIFF", "OVERLAP_RATIO", "MAXDEVIATION", "SUMMED_DEVIATION", "MAXDEVIATION_TRANSITION", "SYLL", "SYLL_COUNT", "CHAR_COUNT", "ONE", "SYLL_ALL", "SYLL_FIRST"]
    : ---------------------------------------------------------------------------
    :    WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF     ...      OVERLAP_RATIO  MAXDEVIATION SUMMED_DEVIATION  MAXDEVIATION_TRANSITION     SYLL SYLL_COUNT CHAR_COUNT  ONE  SYLL_ALL  SYLL_FIRST
    : 0      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgibać          N   1.90        0.35     ...                2/3           -37              107               _zgi[b]ać_  zgi-bać          2          6    1   zgi-bać         zgi
    : 1      wpisać      600539    wpi-sać                 2                 6      .*ać$  zgimać          N   1.95        0.40     ...                2/3            52              135               _zgi[ma]ć_  zgi-mać          2          6    1   zgi-mać         zgi
    : 2      wpisać      600539    wpi-sać                 2                 6      .*ać$  flibać          N   2.40        0.85     ...                2/3           -37               78               _fli[b]ać_  fli-bać          2          6    1   fli-bać         fli
    : 3      wpisać      600539    wpi-sać                 2                 6      .*ać$  flimać          N   2.00        0.45     ...                2/3            52              106               _fli[ma]ć_  fli-mać          2          6    1   fli-mać         fli
    : 4      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwibać          N   2.00        0.45     ...                2/3            60              141               [_kw]ibać_  kwi-bać          2          6    1   kwi-bać         kwi
    : 5      wpisać      600539    wpi-sać                 2                 6      .*ać$  kwimać          N   1.95        0.40     ...                2/3            60              169               [_kw]imać_  kwi-mać          2          6    1   kwi-mać         kwi
    : 6      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślibać          N   2.15        0.60     ...                2/3            38              117               _[śli]bać_  śli-bać          2          6    1   śli-bać         śli
    : 7      wpisać      600539    wpi-sać                 2                 6      .*ać$  ślimać          N   1.95        0.40     ...                2/3            52              145               _śli[ma]ć_  śli-mać          2          6    1   śli-mać         śli
    : 8      wpisać      600539    wpi-sać                 2                 6      .*ać$  znibać          N   1.90        0.35     ...                2/3           -37              112               _zni[b]ać_  zni-bać          2          6    1   zni-bać         zni
    : 9      wpisać      600539    wpi-sać                 2                 6      .*ać$  znimać          N   1.90        0.35     ...                2/3            52              140               _zni[ma]ć_  zni-mać          2          6    1   zni-mać         zni
    : 10     wpisać      600539    wpi-sać                 2                 6      .*ać$  glibać          N   2.20        0.65     ...                2/3           -57              131               [_gl]ibać_  gli-bać          2          6    1   gli-bać         gli
    : 11     wpisać      600539    wpi-sać                 2                 6      .*ać$  glimać          N   2.10        0.55     ...                2/3           -57              159               [_gl]imać_  gli-mać          2          6    1   gli-mać         gli
    :
    : [12 rows x 22 columns]
    : ---------------------------------------------------------------------------
    :      WORD_verbs  FREQ_verbs SYLL_verbs  SYLL_COUNT_verbs  CHAR_COUNT_verbs SUFF_verbs   MATCH LEXICALITY  OLD20  OLD20_DIFF     ...      OVERLAP_RATIO  MAXDEVIATION SUMMED_DEVIATION  MAXDEVIATION_TRANSITION     SYLL SYLL_COUNT CHAR_COUNT  ONE  SYLL_ALL  SYLL_FIRST
    : 1641     skupić      320973    sku-pić                 2                 6      .*ić$  czucić          N   1.55        0.40     ...                2/3           109              220               _czu[c]ić_  czu-cić          2          6    1   czu-cić         czu
    : 1642     skupić      320973    sku-pić                 2                 6      .*ić$  gruwić          N   2.10        0.95     ...                2/3           -80              274               _gru[w]ić_  gru-wić          2          6    1   gru-wić         gru
    : 1643     skupić      320973    sku-pić                 2                 6      .*ić$  grucić          N   1.95        0.80     ...                2/3           109              260               _gru[c]ić_  gru-cić          2          6    1   gru-cić         gru
    : 1644     skupić      320973    sku-pić                 2                 6      .*ić$  grukić          N   2.05        0.90     ...                2/3            99              251               _gru[ki]ć_  gru-kić          2          6    1   gru-kić         gru
    : 1645     skupić      320973    sku-pić                 2                 6      .*ić$  pruwić          N   1.95        0.80     ...                2/3          -125              374               _[pru]wić_  pru-wić          2          6    1   pru-wić         pru
    : 1646     skupić      320973    sku-pić                 2                 6      .*ić$  prucić          N   1.80        0.65     ...                2/3          -125              360               _[pru]cić_  pru-cić          2          6    1   pru-cić         pru
    : 1647     skupić      320973    sku-pić                 2                 6      .*ić$  prukić          N   2.00        0.85     ...                2/3          -125              351               _[pru]kić_  pru-kić          2          6    1   pru-kić         pru
    : 1648     skupić      320973    sku-pić                 2                 6      .*ić$  kluwić          N   2.00        0.85     ...                2/3           -94              304               _[klu]wić_  klu-wić          2          6    1   klu-wić         klu
    : 1649     skupić      320973    sku-pić                 2                 6      .*ić$  klucić          N   1.85        0.70     ...                2/3           109              290               _klu[c]ić_  klu-cić          2          6    1   klu-cić         klu
    : 1650     skupić      320973    sku-pić                 2                 6      .*ić$  klukić          N   1.95        0.80     ...                2/3            99              281               _klu[ki]ć_  klu-kić          2          6    1   klu-kić         klu
    : 1651     skupić      320973    sku-pić                 2                 6      .*ić$  spulić          N   1.80        0.65     ...                2/3          -244              451               _spu[l]ić_  spu-lić          2          6    1   spu-lić         spu
    : 1652     skupić      320973    sku-pić                 2                 6      .*ić$  krulić          N   1.95        0.80     ...                2/3          -244              391               _kru[l]ić_  kru-lić          2          6    1   kru-lić         kru
    :
    : [12 rows x 22 columns]
    :
    :END:

*** DONE Define =Levenshtein= function for ~DataFrames~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

def levenshtein( df_words, df_corps, corps_num=20, words_new="OLD_20", words_col="WORD", corps_col="WORD", verbose=0, ):
    df_words.drop( columns=[ "index", ], inplace=True, errors="ignore", )
    df_words.reset_index( level=None, drop=False, inplace=True, )
    df_words.insert( loc=len(df_words.columns), column=words_new, value=None, allow_duplicates=False, )
    ll = df_corps.shape[0]
    for ii, item in enumerate( df_words[words_col] ):
        # print( "Comparing: " + item + " with:..." )
        dist_vect = np.empty(( ll ))
        dist_vect[:] = np.nan
        for jj, corp in enumerate( df_corps[corps_col] ):
            # print("    ... " + corp)
            dist_vect[jj] = levdist(item, corp)

        dist_vect[ dist_vect == 0 ] = np.inf
        dist_vect = np.sort( dist_vect )
        dist_vect[ dist_vect == np.inf ] = np.nan
        dist_vect = dist_vect[ 0:corps_num+1 ]
        df_words.iloc[ii,-1] = np.nanmean( dist_vect )

    return df_words

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[61]:
    :END:

*** DOIN Time it on 10 words

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

# df_words  = s0006_verbs[1:101]
df_words  = s0006_nouns[1:11].copy()
df_corps  = sgjp.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num )
words_col = "MATCH"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
tmp_levenshtein = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=tmp_levenshtein, df_name="tmp_levenshtein", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( (t1-t0)/60 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( tmp_levenshtein )

     #+END_SRC

*** DONE Execute =Levenshtein= function for =nouns=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

df_words  = s0006_nouns.copy()
df_corps  = sgjp.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num )
words_col = "MATCH"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
s0006_nouns_levenshtein20 = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=s0006_nouns_levenshtein20, df_name="s0006_nouns_levenshtein20", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( (t1-t0)/60 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( s0006_nouns_levenshtein20 )

     #+END_SRC

*** DONE Execute =Levenshtein= function for =verbs=

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0006.py

df_words  = s0006_verbs.copy()
df_corps  = sgjp.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num )
words_col = "MATCH"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
s0006_verbs_levenshtein20 = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=s0006_verbs_levenshtein20, df_name="s0006_verbs_levenshtein20", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( (t1-t0)/60 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( s0006_verbs_levenshtein20 )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[198]:
    # output
    : ===========================================================================
    : 7.125602904955546
    : ===========================================================================
    :     index    MATCH   OLD_20
    : 0       1  pojbiot  2.85714
    : 1       2  pojsiot   2.7619
    : 2       3  pojpiot  2.80952
    : 3       4  podbiut        2
    : 4       5  podwiut        2
    : 5       6  poddiat        2
    : 6       7  poddiut  2.52381
    : 7       8  poddiet  1.95238
    : 8       9  podpiut        2
    : 9      10  podgiat        2
    : 10     11  podtiet  1.95238
    : 11     12  podtiat        2
    : 12     13  podtiut        2
    : 13     14  podkiat        2
    : 14     15  pojwiot  2.47619
    : 15     16  pojgiot  2.85714
    : 16     17  pojziot  2.71429
    : 17     18  pojfiot  2.85714
    : 18     19  pomwiot  2.09524
    : 19     20   sudtor        2
    : 20     21   suztor  1.95238
    : 21     22   sidtor        2
    : 22     23   siztor  1.95238
    : 23     24   suńtor  2.09524
    : 24     25   sułtor        2
    : 25     26   siłtor        2
    : 26     27   sekkur  2.04762
    : 27     28   suttor        2
    : 28     29   sujtor        2
    : 29     30   seńtyr  2.28571
    : ..    ...      ...      ...
    : 69     71   tabwód  2.71429
    : 70     72   tadwód  2.66667
    : 71     73   cagród   1.7619
    : 72     74   capłód  2.57143
    : 73     75   caśród  2.19048
    : 74     76   caspód  2.80952
    : 75     77   cabwód  2.80952
    : 76     78   cagłód        2
    : 77     79   cadwód  2.66667
    : 78     80  rozcior        2
    : 79     81  romziar  2.33333
    : 80     82  rommior  2.85714
    : 81     83  roznior        2
    : 82     84  rozsior        2
    : 83     85  romsiar  2.14286
    : 84     86  rommiur  2.90476
    : 85     87  romgiar  2.66667
    : 86     88  romtiar  2.71429
    : 87     89  romfiar  2.66667
    : 88     90  rodbiar  2.61905
    : 89     91  rodsiar  2.04762
    : 90     92  roddiar  2.80952
    : 91     93  rodmior   2.7619
    : 92     94  rodmiur  2.90476
    : 93     95  rodgiar   2.7619
    : 94     96  rodtiar  2.80952
    : 95     97  rodkiar  2.80952
    : 96     98  rozbior   1.7619
    : 97     99  rozbiur  1.95238
    : 98    100   pogrid        2
    :
    : [99 rows x 3 columns]
    : ===========================================================================
    :     index    MATCH   OLD_20
    : 0       1  pojbiot  2.85714
    : 1       2  pojsiot   2.7619
    : 2       3  pojpiot  2.80952
    : 3       4  podbiut        2
    : 4       5  podwiut        2
    : 5       6  poddiat        2
    : 6       7  poddiut  2.52381
    : 7       8  poddiet  1.95238
    : 8       9  podpiut        2
    : 9      10  podgiat        2
    : 10     11  podtiet  1.95238
    : 11     12  podtiat        2
    : 12     13  podtiut        2
    : 13     14  podkiat        2
    : 14     15  pojwiot  2.47619
    : 15     16  pojgiot  2.85714
    : 16     17  pojziot  2.71429
    : 17     18  pojfiot  2.85714
    : 18     19  pomwiot  2.09524
    : 19     20   sudtor        2
    : 20     21   suztor  1.95238
    : 21     22   sidtor        2
    : 22     23   siztor  1.95238
    : 23     24   suńtor  2.09524
    : 24     25   sułtor        2
    : 25     26   siłtor        2
    : 26     27   sekkur  2.04762
    : 27     28   suttor        2
    : 28     29   sujtor        2
    : 29     30   seńtyr  2.28571
    : ..    ...      ...      ...
    : 69     71   tabwód  2.71429
    : 70     72   tadwód  2.66667
    : 71     73   cagród   1.7619
    : 72     74   capłód  2.57143
    : 73     75   caśród  2.19048
    : 74     76   caspód  2.80952
    : 75     77   cabwód  2.80952
    : 76     78   cagłód        2
    : 77     79   cadwód  2.66667
    : 78     80  rozcior        2
    : 79     81  romziar  2.33333
    : 80     82  rommior  2.85714
    : 81     83  roznior        2
    : 82     84  rozsior        2
    : 83     85  romsiar  2.14286
    : 84     86  rommiur  2.90476
    : 85     87  romgiar  2.66667
    : 86     88  romtiar  2.71429
    : 87     89  romfiar  2.66667
    : 88     90  rodbiar  2.61905
    : 89     91  rodsiar  2.04762
    : 90     92  roddiar  2.80952
    : 91     93  rodmior   2.7619
    : 92     94  rodmiur  2.90476
    : 93     95  rodgiar   2.7619
    : 94     96  rodtiar  2.80952
    : 95     97  rodkiar  2.80952
    : 96     98  rozbior   1.7619
    : 97     99  rozbiur  1.95238
    : 98    100   pogrid        2
    :
    : [99 rows x 3 columns]
    :
    :END:

* DONE Stage 0055: Produce paired =nouns= and =verbs= with common stem
** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

s0055_nouns_hyphen = pd.read_excel( "./data_out/s0005_nouns_all_wuggy_merged_sgjp_merged_prelim_hyphen.xlsx", ignore_index=True, )
s0055_verbs_hyphen = pd.read_excel( "./data_out/s0005_verbs_all_wuggy_merged_sgjp_merged_prelim_hyphen.xlsx", ignore_index=True, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[363]:
    :END:

** Proc 01: Process
*** DONE Select necessary columns

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

# cols_init = [ "WORD_verbs", "FREQ_verbs", "SYLL_verbs", "SYLL_COUNT_verbs", "CHAR_COUNT_verbs", "SUFF_verbs", "MATCH", "LEXICALITY", "OLD20", "OLD20_DIFF", "NED1", "NED1_DIFF", "OVERLAP_RATIO", "MAXDEVIATION", "SUMMED_DEVIATION", "MAXDEVIATION_TRANSITION", "SYLL", "SYLL_COUNT", "CHAR_COUNT", "ONE", "SYLL_ALL", "SYLL_FIRST", "SYLL_PENUL", "SYLL_ULTIM"]
# cols_drop = []
cols_keep = [ "MATCH", "SYLL", ]

s0055_nouns_hyphen = s0055_nouns_hyphen[ cols_keep ]
s0055_verbs_hyphen = s0055_verbs_hyphen[ cols_keep ]

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[364]:
    :END:

*** DONE Count syllables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

s0055_nouns_hyphen["SYLL_COUNT"] = s0055_nouns_hyphen.apply( lambda x: x.SYLL.count("-")+1, axis=1, )
s0055_verbs_hyphen["SYLL_COUNT"] = s0055_verbs_hyphen.apply( lambda x: x.SYLL.count("-")+1, axis=1, )
    
    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[365]:
    :END:

*** DONE Drop the matches that consist of less that two syllables

    Remove words that consist of just one syllable.

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

tmp_nouns_syll_lt_2 = s0055_nouns_hyphen["SYLL_COUNT"] < 2
tmp_verbs_syll_lt_2 = s0055_verbs_hyphen["SYLL_COUNT"] < 2

print(  "tmp_nouns_syll_lt_2: " + str( sum( tmp_nouns_syll_lt_2 ) ) )
print(  "tmp_verbs_syll_lt_2: " + str( sum( tmp_verbs_syll_lt_2 ) ) )

s0055_nouns_hyphen = s0055_nouns_hyphen[ ~tmp_nouns_syll_lt_2 ].copy()
s0055_verbs_hyphen = s0055_verbs_hyphen[ ~tmp_verbs_syll_lt_2 ].copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[366]:
    # output
    : tmp_nouns_syll_lt_2: 10
    : tmp_verbs_syll_lt_2: 5
    :
    :END:

*** DEMO DEMO for the syllable extraction

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

w = "do-re-mi-fa-so-la"
print( w + " | " + w.split("-",-1)[0] + " | " + w.rsplit("-",1)[0] + " | " + w.split("-",-1)[-2] + " | " + w.split("-",-1)[-1] )
w = "fa-so-la"
print( w + " | " + w.split("-",-1)[0] + " | " + w.rsplit("-",1)[0] + " | " + w.split("-",-1)[-2] + " | " + w.split("-",-1)[-1] )
w = "so-la"
print( w + " | " + w.split("-",-1)[0] + " | " + w.rsplit("-",1)[0] + " | " + w.split("-",-1)[-2] + " | " + w.split("-",-1)[-1] )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[367]:
    # output
    : do-re-mi-fa-so-la | do | do-re-mi-fa-so | so | la
    : fa-so-la | fa | fa-so | so | la
    : so-la | so | so | so | la
    :
    :END:

*** DONE Produce syllables information

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

s0055_nouns_hyphen["SYLL_FIRST"] = s0055_nouns_hyphen.apply( lambda x: x.SYLL.split("-",-1)[0],  axis=1, )
s0055_verbs_hyphen["SYLL_FIRST"] = s0055_verbs_hyphen.apply( lambda x: x.SYLL.split("-",-1)[0],  axis=1, )
s0055_nouns_hyphen["SYLL_START"] = s0055_nouns_hyphen.apply( lambda x: x.SYLL.rsplit("-",1)[0],  axis=1, )
s0055_verbs_hyphen["SYLL_START"] = s0055_verbs_hyphen.apply( lambda x: x.SYLL.rsplit("-",1)[0],  axis=1, )
s0055_nouns_hyphen["SYLL_PENUL"] = s0055_nouns_hyphen.apply( lambda x: x.SYLL.split("-",-1)[-2], axis=1, )
s0055_verbs_hyphen["SYLL_PENUL"] = s0055_verbs_hyphen.apply( lambda x: x.SYLL.split("-",-1)[-2], axis=1, )
s0055_nouns_hyphen["SYLL_ULTIM"] = s0055_nouns_hyphen.apply( lambda x: x.SYLL.split("-",-1)[-1], axis=1, )
s0055_verbs_hyphen["SYLL_ULTIM"] = s0055_verbs_hyphen.apply( lambda x: x.SYLL.split("-",-1)[-1], axis=1, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[368]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_nouns_hyphen,  ]
df_info = [ "s0055_nouns_hyphen", ]
df_head = 5
df_tail = 5

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[12]:
    # output
    : ===========================================================================
    : s0055_nouns_hyphen
    : ===========================================================================
    : idx count: 1987
    : row count: 7  ['MATCH', 'SYLL', 'SYLL_COUNT', 'SYLL_FIRST', 'SYLL_START', 'SYLL_PENUL', 'SYLL_ULTIM']
    : ---------------------------------------------------------------------------
    :      MATCH      SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM
    : 0  podsiut  pod-siut           2        pod        pod        pod       siut
    : 1  pojbiot  poj-biot           2        poj        poj        poj       biot
    : 2  pojsiot  poj-siot           2        poj        poj        poj       siot
    : 3  pojpiot  poj-piot           2        poj        poj        poj       piot
    : 4  podbiut  pod-biut           2        pod        pod        pod       biut
    : ---------------------------------------------------------------------------
    :         MATCH       SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM
    : 2018  wuganie  wu-ga-nie           3         wu      wu-ga         ga        nie
    : 2019  wujanie  wu-ja-nie           3         wu      wu-ja         ja        nie
    : 2020  wumanie  wu-ma-nie           3         wu      wu-ma         ma        nie
    : 2021  wużanie  wu-ża-nie           3         wu      wu-ża         ża        nie
    : 2022  wecanie  we-ca-nie           3         we      we-ca         ca        nie
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_verbs_hyphen,  ]
df_info = [ "s0055_verbs_hyphen", ]
df_head = 5
df_tail = 5

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[13]:
    # output
    : ===========================================================================
    : s0055_verbs_hyphen
    : ===========================================================================
    : idx count: 1639
    : row count: 7  ['MATCH', 'SYLL', 'SYLL_COUNT', 'SYLL_FIRST', 'SYLL_START', 'SYLL_PENUL', 'SYLL_ULTIM']
    : ---------------------------------------------------------------------------
    :     MATCH     SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM
    : 0  zgibać  zgi-bać           2        zgi        zgi        zgi        bać
    : 1  zgimać  zgi-mać           2        zgi        zgi        zgi        mać
    : 2  flibać  fli-bać           2        fli        fli        fli        bać
    : 3  flimać  fli-mać           2        fli        fli        fli        mać
    : 4  kwibać  kwi-bać           2        kwi        kwi        kwi        bać
    : ---------------------------------------------------------------------------
    :        MATCH     SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM
    : 1648  kluwić  klu-wić           2        klu        klu        klu        wić
    : 1649  klucić  klu-cić           2        klu        klu        klu        cić
    : 1650  klukić  klu-kić           2        klu        klu        klu        kić
    : 1651  spulić  spu-lić           2        spu        spu        spu        lić
    : 1652  krulić  kru-lić           2        kru        kru        kru        lić
    :
    :END:

*** DONE Construct last syllable substitution table (dataframe)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

# Extract the penultimate and ultimate syllables
syll_subst_base_nouns = s0055_nouns_hyphen[[ "SYLL_PENUL", "SYLL_ULTIM", ]].copy()
syll_subst_base_verbs = s0055_verbs_hyphen[[ "SYLL_PENUL", "SYLL_ULTIM", ]].copy()

# Drop duplicates
syll_subst_base_nouns.drop_duplicates(subset=[ "SYLL_PENUL", "SYLL_ULTIM", ], keep="first", inplace=True )
syll_subst_base_verbs.drop_duplicates(subset=[ "SYLL_PENUL", "SYLL_ULTIM", ], keep="first", inplace=True )

# Merge
syll_subst_base_final = pd.DataFrame()
syll_subst_base_final = pd.merge(
    left        = syll_subst_base_nouns,
    right       = syll_subst_base_verbs,
    how         = "inner",
    left_on     = "SYLL_PENUL",
    right_on    = "SYLL_PENUL",
    suffixes    = ( "_nouns", "_verbs", ),
)

# Find ultimate syllables of matching (equal) length WARNING: Later on
# when making cartesian product of SYLL_ULTIM for nouns and verbs the
# length may not match
syll_subst_base_final_len_mask = syll_subst_base_final[ "SYLL_ULTIM_nouns" ].str.len() == syll_subst_base_final[ "SYLL_ULTIM_verbs" ].str.len()
syll_subst_base_final = syll_subst_base_final[ syll_subst_base_final_len_mask ]


# Drop duplicates
syll_subst_base_final.drop_duplicates( subset=[ "SYLL_PENUL", "SYLL_ULTIM_nouns", "SYLL_ULTIM_verbs", ], keep="first", inplace=True)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[17]:
    :END:

*** DONE Temporary Checkup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  syll_subst_base_final,  ]
df_info = [ "syll_subst_base_final", ]
df_head = 10
df_tail = 10

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[18]:
    # output
    : ===========================================================================
    : syll_subst_base_final
    : ===========================================================================
    : idx count: 1213
    : row count: 3  ['SYLL_PENUL', 'SYLL_ULTIM_nouns', 'SYLL_ULTIM_verbs']
    : ---------------------------------------------------------------------------
    :    SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 14        sud              tor              nyć
    : 15        sud              tor              nić
    : 16        sut              tor              nić
    : 17        sut              tor              kić
    : 18         se             znor             chyć
    : 19         se             znor             pieć
    : 20         se             znor             kieć
    : 27         ka              łek              wić
    : 35         ka             biań             piać
    : 36         ka             biań             ziać
    : ---------------------------------------------------------------------------
    :      SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 2410        głó              sło              cić
    : 2411        zgó              sło              cić
    : 2412        zbó              sło              cić
    : 2413        gół              sło              cić
    : 2414        mnó              sło              cić
    : 2415        rój              sło              cić
    : 2416        złó              sło              cić
    : 2417         ła              nie              być
    : 2430        rza              cie              wić
    : 2431        rza              cie              wać
    :
    :END:

*** DONE Extract words for the last syllabe substitution

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

tmp_mask_nouns_sylls = s0055_nouns_hyphen[ "SYLL_PENUL" ].isin( syll_subst_base_final[ "SYLL_PENUL" ] )
tmp_mask_verbs_sylls = s0055_verbs_hyphen[ "SYLL_PENUL" ].isin( syll_subst_base_final[ "SYLL_PENUL" ] )

print( "="*75 )
print( "tmp_mask_nouns_sylls: " + str( sum( tmp_mask_nouns_sylls ) ) + " / " + str( len( tmp_mask_nouns_sylls ) ) )
print( "="*75 )
print( "tmp_mask_verbs_sylls: " + str( sum( tmp_mask_verbs_sylls ) ) + " / " + str( len( tmp_mask_verbs_sylls ) ) )

s0055_nouns_hyphen_sel = s0055_nouns_hyphen[ tmp_mask_nouns_sylls ].copy()
s0055_verbs_hyphen_sel = s0055_verbs_hyphen[ tmp_mask_verbs_sylls ].copy()

print( "="*75 )
print( s0055_nouns_hyphen_sel[ s0055_nouns_hyphen_sel["SYLL_COUNT"] == 4  ] )
print( "="*75 )
print( s0055_verbs_hyphen_sel[ s0055_verbs_hyphen_sel["SYLL_COUNT"] == 4  ] )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[19]:
    # output
    : ===========================================================================
    : tmp_mask_nouns_sylls: 518 / 1987
    : ===========================================================================
    : tmp_mask_verbs_sylls: 405 / 1639
    : ===========================================================================
    :         MATCH         SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM
    : 784  omukagla  o-mu-ka-gla           4          o    o-mu-ka         ka        gla
    : 786  omukazja  o-mu-ka-zja           4          o    o-mu-ka         ka        zja
    : 787  omukadża  o-mu-ka-dża           4          o    o-mu-ka         ka        dża
    : 788  omukasha  o-mu-ka-sha           4          o    o-mu-ka         ka        sha
    : 789  omukakra  o-mu-ka-kra           4          o    o-mu-ka         ka        kra
    : 792  omukapra  o-mu-ka-pra           4          o    o-mu-ka         ka        pra
    : 793  omukakła  o-mu-ka-kła           4          o    o-mu-ka         ka        kła
    : 795  omukafta  o-mu-ka-fta           4          o    o-mu-ka         ka        fta
    : 798  omukasma  o-mu-ka-sma           4          o    o-mu-ka         ka        sma
    : 921  sypacyka  sy-pa-cy-ka           4         sy   sy-pa-cy         cy         ka
    : 922  syparyka  sy-pa-ry-ka           4         sy   sy-pa-ry         ry         ka
    : 924  symaceka  sy-ma-ce-ka           4         sy   sy-ma-ce         ce         ka
    : 926  sylacyka  sy-la-cy-ka           4         sy   sy-la-cy         cy         ka
    : 927  sylaryka  sy-la-ry-ka           4         sy   sy-la-ry         ry         ka
    : 929  syracyka  sy-ra-cy-ka           4         sy   sy-ra-cy         cy         ka
    : 930  syraryka  sy-ra-ry-ka           4         sy   sy-ra-ry         ry         ka
    : 932  sywacyka  sy-wa-cy-ka           4         sy   sy-wa-cy         cy         ka
    : 933  sywaryka  sy-wa-ry-ka           4         sy   sy-wa-ry         ry         ka
    : 935  sepaceka  se-pa-ce-ka           4         se   se-pa-ce         ce         ka
    : 937  selaceka  se-la-ce-ka           4         se   se-la-ce         ce         ka
    : 939  seraceka  se-ra-ce-ka           4         se   se-ra-ce         ce         ka
    : ===========================================================================
    :          MATCH         SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM
    : 613   udrkujać  u-dr-ku-jać           4          u    u-dr-ku         ku        jać
    : 614   udrkucać  u-dr-ku-cać           4          u    u-dr-ku         ku        cać
    : 617   ushbujać  u-sh-bu-jać           4          u    u-sh-bu         bu        jać
    : 618   ushbucać  u-sh-bu-cać           4          u    u-sh-bu         bu        cać
    : 1037  zaęłabyć  za-ę-ła-być           4         za    za-ę-ła         ła        być
    :
    :END:

*** DONE Drop unnecessary columns

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

print( "="*75 )
print( s0055_nouns_hyphen_sel.shape )
print( s0055_verbs_hyphen_sel.shape )

s0055_nouns_hyphen_sel.drop( labels=[ "SYLL_ULTIM" ], axis=1, inplace=True, errors="ignore", )
s0055_verbs_hyphen_sel.drop( labels=[ "SYLL_ULTIM" ], axis=1, inplace=True, errors="ignore", )

print( "="*75 )
print( s0055_nouns_hyphen_sel.shape )
print( s0055_verbs_hyphen_sel.shape )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[20]:
    # output
    : ===========================================================================
    : (518, 7)
    : (405, 7)
    : ===========================================================================
    : (518, 6)
    : (405, 6)
    :
    :END:

*** DONE Drop duplicates

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

tmp_mask_nouns_dupes = s0055_nouns_hyphen_sel.duplicated( subset=[ "SYLL_START", "SYLL_PENUL", ], keep="first", )
tmp_mask_verbs_dupes = s0055_verbs_hyphen_sel.duplicated( subset=[ "SYLL_START", "SYLL_PENUL", ], keep="first", )

print( "="*75 )
print( "~tmp_mask_nouns_dupes: " + str( sum( ~tmp_mask_nouns_dupes ) ) + " / " + str( len( tmp_mask_nouns_dupes ) ) )
print( "="*75 )
print( "~tmp_mask_verbs_dupes: " + str( sum( ~tmp_mask_verbs_dupes ) ) + " / " + str( len( tmp_mask_verbs_dupes ) ) )

# TODO CHECKUP WTF is going on here if the output variable has the same name as input
# DONE mask MUST be negated otherwise only duplicates are left and the first
#      duplicate is removed in each code execution !!! (LOGIC 101)
s0055_nouns_hyphen_sel_uniq = s0055_nouns_hyphen_sel[ ~tmp_mask_nouns_dupes ].copy()
s0055_verbs_hyphen_sel_uniq = s0055_verbs_hyphen_sel[ ~tmp_mask_verbs_dupes ].copy()

tmp_mask_nouns_dupes = s0055_nouns_hyphen_sel_uniq.duplicated( subset=[ "SYLL_START", "SYLL_PENUL", ], keep="first", )
tmp_mask_verbs_dupes = s0055_verbs_hyphen_sel_uniq.duplicated( subset=[ "SYLL_START", "SYLL_PENUL", ], keep="first", )

print( "="*75 )
print( "~tmp_mask_nouns_dupes: " + str( sum( ~tmp_mask_nouns_dupes ) ) + " / " + str( len( tmp_mask_nouns_dupes ) ) )
print( "="*75 )
print( "~tmp_mask_verbs_dupes: " + str( sum( ~tmp_mask_verbs_dupes ) ) + " / " + str( len( tmp_mask_verbs_dupes ) ) )

print( "="*75 )
print( s0055_nouns_hyphen_sel_uniq[ s0055_nouns_hyphen_sel_uniq[ "SYLL_COUNT" ] == 4  ] )
print( "="*75 )
print( s0055_verbs_hyphen_sel_uniq[ s0055_verbs_hyphen_sel_uniq[ "SYLL_COUNT" ] == 4  ] )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[21]:
    # output
    : ===========================================================================
    : ~tmp_mask_nouns_dupes: 272 / 518
    : ===========================================================================
    : ~tmp_mask_verbs_dupes: 182 / 405
    : ===========================================================================
    : ~tmp_mask_nouns_dupes: 272 / 272
    : ===========================================================================
    : ~tmp_mask_verbs_dupes: 182 / 182
    : ===========================================================================
    :         MATCH         SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL
    : 784  omukagla  o-mu-ka-gla           4          o    o-mu-ka         ka
    : 921  sypacyka  sy-pa-cy-ka           4         sy   sy-pa-cy         cy
    : 922  syparyka  sy-pa-ry-ka           4         sy   sy-pa-ry         ry
    : 924  symaceka  sy-ma-ce-ka           4         sy   sy-ma-ce         ce
    : 926  sylacyka  sy-la-cy-ka           4         sy   sy-la-cy         cy
    : 927  sylaryka  sy-la-ry-ka           4         sy   sy-la-ry         ry
    : 929  syracyka  sy-ra-cy-ka           4         sy   sy-ra-cy         cy
    : 930  syraryka  sy-ra-ry-ka           4         sy   sy-ra-ry         ry
    : 932  sywacyka  sy-wa-cy-ka           4         sy   sy-wa-cy         cy
    : 933  sywaryka  sy-wa-ry-ka           4         sy   sy-wa-ry         ry
    : 935  sepaceka  se-pa-ce-ka           4         se   se-pa-ce         ce
    : 937  selaceka  se-la-ce-ka           4         se   se-la-ce         ce
    : 939  seraceka  se-ra-ce-ka           4         se   se-ra-ce         ce
    : ===========================================================================
    :          MATCH         SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL
    : 613   udrkujać  u-dr-ku-jać           4          u    u-dr-ku         ku
    : 617   ushbujać  u-sh-bu-jać           4          u    u-sh-bu         bu
    : 1037  zaęłabyć  za-ę-ła-być           4         za    za-ę-ła         ła
    :
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_nouns_hyphen_sel_uniq,  ]
df_info = [ "s0055_nouns_hyphen_sel_uniq", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[22]:
    # output
    : ===========================================================================
    : s0055_nouns_hyphen_sel_uniq
    : ===========================================================================
    : idx count: 272
    : row count: 6  ['MATCH', 'SYLL', 'SYLL_COUNT', 'SYLL_FIRST', 'SYLL_START', 'SYLL_PENUL']
    : ---------------------------------------------------------------------------
    :       MATCH       SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL
    : 20   sudtor    sud-tor           2        sud        sud        sud
    : 28   suttor    sut-tor           2        sut        sut        sut
    : 33   seznor    se-znor           2         se         se         se
    : 41  rokałek  ro-ka-łek           3         ro      ro-ka         ka
    : 42  rolałek  ro-la-łek           3         ro      ro-la         la
    : 45  robałek  ro-ba-łek           3         ro      ro-ba         ba
    : 46  rotałek  ro-ta-łek           3         ro      ro-ta         ta
    : 47  ronałek  ro-na-łek           3         ro      ro-na         na
    : 50  mokałek  mo-ka-łek           3         mo      mo-ka         ka
    : 51  molałek  mo-la-łek           3         mo      mo-la         la
    : 54  mobałek  mo-ba-łek           3         mo      mo-ba         ba
    : 55  motałek  mo-ta-łek           3         mo      mo-ta         ta
    : 56  monałek  mo-na-łek           3         mo      mo-na         na
    : 58  nacałęk  na-ca-łęk           3         na      na-ca         ca
    : 60   napłód    na-płód           2         na         na         na
    : ---------------------------------------------------------------------------
    :          MATCH        SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL
    : 1938  ktozenie  kto-ze-nie           3        kto     kto-ze         ze
    : 1939  złozenie  zło-ze-nie           3        zło     zło-ze         ze
    : 1940  wkozenie  wko-ze-nie           3        wko     wko-ze         ze
    : 1942  ćwozenie  ćwo-ze-nie           3        ćwo     ćwo-ze         ze
    : 1973    zjacie     zja-cie           2        zja        zja        zja
    : 1977    rzacie     rza-cie           2        rza        rza        rza
    : 2003   wucanie   wu-ca-nie           3         wu      wu-ca         ca
    : 2005   wudanie   wu-da-nie           3         wu      wu-da         da
    : 2006   wukanie   wu-ka-nie           3         wu      wu-ka         ka
    : 2009   wulanie   wu-la-nie           3         wu      wu-la         la
    : 2012   wubanie   wu-ba-nie           3         wu      wu-ba         ba
    : 2014   wułanie   wu-ła-nie           3         wu      wu-ła         ła
    : 2015   wutawie   wu-ta-wie           3         wu      wu-ta         ta
    : 2016   wunanie   wu-na-nie           3         wu      wu-na         na
    : 2022   wecanie   we-ca-nie           3         we      we-ca         ca
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_verbs_hyphen_sel_uniq,  ]
df_info = [ "s0055_verbs_hyphen_sel_uniq", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[23]:
    # output
    : ===========================================================================
    : s0055_verbs_hyphen_sel_uniq
    : ===========================================================================
    : idx count: 182
    : row count: 6  ['MATCH', 'SYLL', 'SYLL_COUNT', 'SYLL_FIRST', 'SYLL_START', 'SYLL_PENUL']
    : ---------------------------------------------------------------------------
    :         MATCH        SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL
    : 4      kwibać     kwi-bać           2        kwi        kwi        kwi
    : 6      ślibać     śli-bać           2        śli        śli        śli
    : 8      znibać     zni-bać           2        zni        zni        zni
    : 23   ucirczyć  u-cir-czyć           3          u      u-cir        cir
    : 28   ucilczyć  u-cil-czyć           3          u      u-cil        cil
    : 80     peńkić     peń-kić           2        peń        peń        peń
    : 81     pedkić     ped-kić           2        ped        ped        ped
    : 82     pelkić     pel-kić           2        pel        pel        pel
    : 84     pezkić     pez-kić           2        pez        pez        pez
    : 85     pemkić     pem-kić           2        pem        pem        pem
    : 86     pejkić     pej-kić           2        pej        pej        pej
    : 93     pumnić     pum-nić           2        pum        pum        pum
    : 102  rodsilać  rod-si-lać           3        rod     rod-si         si
    : 104  rodbilać  rod-bi-lać           3        rod     rod-bi         bi
    : 105  rodnilać  rod-ni-lać           3        rod     rod-ni         ni
    : ---------------------------------------------------------------------------
    :          MATCH        SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL
    : 1410  szamować  sza-mo-wać           3        sza     sza-mo         mo
    : 1411  szabować  sza-bo-wać           3        sza     sza-bo         bo
    : 1412  spabować  spa-bo-wać           3        spa     spa-bo         bo
    : 1433   kowisać   ko-wi-sać           3         ko      ko-wi         wi
    : 1434   kolisać   ko-li-sać           3         ko      ko-li         li
    : 1436   kobisać   ko-bi-sać           3         ko      ko-bi         bi
    : 1437   konisać   ko-ni-sać           3         ko      ko-ni         ni
    : 1438   kopipać   ko-pi-pać           3         ko      ko-pi         pi
    : 1445   rowisać   ro-wi-sać           3         ro      ro-wi         wi
    : 1446   rolisać   ro-li-sać           3         ro      ro-li         li
    : 1448   robisać   ro-bi-sać           3         ro      ro-bi         bi
    : 1449   ronisać   ro-ni-sać           3         ro      ro-ni         ni
    : 1450   ropipać   ro-pi-pać           3         ro      ro-pi         pi
    : 1573    wubieć     wu-bieć           2         wu         wu         wu
    : 1590    bubieć     bu-bieć           2         bu         bu         bu
    :
    :END:

*** DEMO DEMO for the Cartesian Product

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df1 = pd.DataFrame({ "key":["a1","a1","a2","a2"], "col1":["n1","n2","n3","n4"] })
df2 = pd.DataFrame({ "key":["a1","a1","a2","a2"], "col2":["v1","v2","v3","v4"] })

df3 = pd.DataFrame()

df3 = pd.merge(
    left        = df1,
    right       = df2,
    how         = "inner",
    left_on     = "key",
    right_on    = "key",
    suffixes    = ("_left", "_right"),
)

print(df1)
print("-"*45)
print(df2)
print("-"*45)
print(df3)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[24]:
    # output
    :   key col1
    : 0  a1   n1
    : 1  a1   n2
    : 2  a2   n3
    : 3  a2   n4
    : ---------------------------------------------
    :   key col2
    : 0  a1   v1
    : 1  a1   v2
    : 2  a2   v3
    : 3  a2   v4
    : ---------------------------------------------
    :   key col1 col2
    : 0  a1   n1   v1
    : 1  a1   n1   v2
    : 2  a1   n2   v1
    : 3  a1   n2   v2
    : 4  a2   n3   v3
    : 5  a2   n3   v4
    : 6  a2   n4   v3
    : 7  a2   n4   v4
    :
    :END:

*** DONE Merge

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

s0055_nouns_hyphen_sel_uniq_merged = pd.DataFrame()
s0055_verbs_hyphen_sel_uniq_merged = pd.DataFrame()

s0055_nouns_hyphen_sel_uniq_merged = pd.merge(
    left        = s0055_nouns_hyphen_sel_uniq,
    right       = syll_subst_base_final,
    how         = "inner",
    left_on     = "SYLL_PENUL",
    right_on    = "SYLL_PENUL",
    suffixes    = ("_left", "_right"),
)

s0055_verbs_hyphen_sel_uniq_merged = pd.merge(
    left        = s0055_verbs_hyphen_sel_uniq,
    right       = syll_subst_base_final,
    how         = "inner",
    left_on     = "SYLL_PENUL",
    right_on    = "SYLL_PENUL",
    suffixes    = ("_left", "_right"),
)

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[25]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_nouns_hyphen_sel_uniq_merged,  ]
df_info = [ "s0055_nouns_hyphen_sel_uniq_merged", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[26]:
    # output
    : ===========================================================================
    : s0055_nouns_hyphen_sel_uniq_merged
    : ===========================================================================
    : idx count: 5104
    : row count: 8  ['MATCH', 'SYLL', 'SYLL_COUNT', 'SYLL_FIRST', 'SYLL_START', 'SYLL_PENUL', 'SYLL_ULTIM_nouns', 'SYLL_ULTIM_verbs']
    : ---------------------------------------------------------------------------
    :      MATCH      SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 0   sudtor   sud-tor           2        sud        sud        sud              tor              nyć
    : 1   sudtor   sud-tor           2        sud        sud        sud              tor              nić
    : 2   suttor   sut-tor           2        sut        sut        sut              tor              nić
    : 3   suttor   sut-tor           2        sut        sut        sut              tor              kić
    : 4   seznor   se-znor           2         se         se         se             znor             chyć
    : 5   seznor   se-znor           2         se         se         se             znor             pieć
    : 6   seznor   se-znor           2         se         se         se             znor             kieć
    : 7   rosera  ro-se-ra           3         ro      ro-se         se             znor             chyć
    : 8   rosera  ro-se-ra           3         ro      ro-se         se             znor             pieć
    : 9   rosera  ro-se-ra           3         ro      ro-se         se             znor             kieć
    : 10  mosera  mo-se-ra           3         mo      mo-se         se             znor             chyć
    : 11  mosera  mo-se-ra           3         mo      mo-se         se             znor             pieć
    : 12  mosera  mo-se-ra           3         mo      mo-se         se             znor             kieć
    : 13  wasewo  wa-se-wo           3         wa      wa-se         se             znor             chyć
    : 14  wasewo  wa-se-wo           3         wa      wa-se         se             znor             pieć
    : ---------------------------------------------------------------------------
    :         MATCH       SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 5089  zgropie   zgro-pie           2       zgro       zgro       zgro              pie              cić
    : 5090  wspopie   wspo-pie           2       wspo       wspo       wspo              pie              mić
    : 5091   smósło    smó-sło           2        smó        smó        smó              sło              cić
    : 5092   zwósło    zwó-sło           2        zwó        zwó        zwó              sło              cić
    : 5093   głósło    głó-sło           2        głó        głó        głó              sło              cić
    : 5094   zgósło    zgó-sło           2        zgó        zgó        zgó              sło              cić
    : 5095   zbósło    zbó-sło           2        zbó        zbó        zbó              sło              cić
    : 5096   gółsło    gół-sło           2        gół        gół        gół              sło              cić
    : 5097   mnósło    mnó-sło           2        mnó        mnó        mnó              sło              cić
    : 5098   rójsło    rój-sło           2        rój        rój        rój              sło              cić
    : 5099   złósło    złó-sło           2        złó        złó        złó              sło              cić
    : 5100  rołanie  ro-ła-nie           3         ro      ro-ła         ła              nie              być
    : 5101  wułanie  wu-ła-nie           3         wu      wu-ła         ła              nie              być
    : 5102   rzacie    rza-cie           2        rza        rza        rza              cie              wić
    : 5103   rzacie    rza-cie           2        rza        rza        rza              cie              wać
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_verbs_hyphen_sel_uniq_merged,  ]
df_info = [ "s0055_verbs_hyphen_sel_uniq_merged", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[27]:
    # output
    : ===========================================================================
    : s0055_verbs_hyphen_sel_uniq_merged
    : ===========================================================================
    : idx count: 2438
    : row count: 8  ['MATCH', 'SYLL', 'SYLL_COUNT', 'SYLL_FIRST', 'SYLL_START', 'SYLL_PENUL', 'SYLL_ULTIM_nouns', 'SYLL_ULTIM_verbs']
    : ---------------------------------------------------------------------------
    :        MATCH        SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 0     kwibać     kwi-bać           2        kwi        kwi        kwi              nie              bać
    : 1     kwibać     kwi-bać           2        kwi        kwi        kwi              nie              mać
    : 2     kwibać     kwi-bać           2        kwi        kwi        kwi              nie              nić
    : 3     ślibać     śli-bać           2        śli        śli        śli              nie              bać
    : 4     ślibać     śli-bać           2        śli        śli        śli              nie              mać
    : 5     znibać     zni-bać           2        zni        zni        zni              sko              bać
    : 6     znibać     zni-bać           2        zni        zni        zni              sko              mać
    : 7     znibać     zni-bać           2        zni        zni        zni              sko              nić
    : 8   ucirczyć  u-cir-czyć           3          u      u-cir        cir             stwa             czyć
    : 9   ucilczyć  u-cil-czyć           3          u      u-cil        cil             trum             czyć
    : 10    peńkić     peń-kić           2        peń        peń        peń              tek              kić
    : 11    pedkić     ped-kić           2        ped        ped        ped              tek              kić
    : 12    pelkić     pel-kić           2        pel        pel        pel              tek              kić
    : 13    pezkić     pez-kić           2        pez        pez        pez              tek              kić
    : 14    pemkić     pem-kić           2        pem        pem        pem              tek              kić
    : ---------------------------------------------------------------------------
    :         MATCH       SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 2423  owydzić  o-wy-dzić           3          o       o-wy         wy             dłyg             dzić
    : 2424  owydzić  o-wy-dzić           3          o       o-wy         wy             dłeg             dzić
    : 2425  owydzić  o-wy-dzić           3          o       o-wy         wy             ckag             dzić
    : 2426  owydzić  o-wy-dzić           3          o       o-wy         wy             ckog             dzić
    : 2427  owydzić  o-wy-dzić           3          o       o-wy         wy             ckąg             dzić
    : 2428  owydzić  o-wy-dzić           3          o       o-wy         wy             ckug             dzić
    : 2429  owydzić  o-wy-dzić           3          o       o-wy         wy             brag             dzić
    : 2430  owydzić  o-wy-dzić           3          o       o-wy         wy             rtia             dzić
    : 2431  owydzić  o-wy-dzić           3          o       o-wy         wy             dium             dzić
    : 2432  kolisać  ko-li-sać           3         ko      ko-li         li              pia              sać
    : 2433  kolisać  ko-li-sać           3         ko      ko-li         li              bia              sać
    : 2434  kolisać  ko-li-sać           3         ko      ko-li         li              nie              sać
    : 2435  rolisać  ro-li-sać           3         ro      ro-li         li              pia              sać
    : 2436  rolisać  ro-li-sać           3         ro      ro-li         li              bia              sać
    : 2437  rolisać  ro-li-sać           3         ro      ro-li         li              nie              sać
    :
    :END:

*** DONE Checkup plain =n= syllabes

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

print( "="*75 )
print( s0055_nouns_hyphen_sel_uniq_merged.shape )
print( "="*75 )
print( s0055_verbs_hyphen_sel_uniq_merged.shape )

print( "="*75 )
print( s0055_nouns_hyphen_sel_uniq_merged[ s0055_nouns_hyphen_sel_uniq_merged["SYLL_COUNT"] == 3  ] )
print( "="*75 )
print( s0055_verbs_hyphen_sel_uniq_merged[ s0055_verbs_hyphen_sel_uniq_merged["SYLL_COUNT"] == 3  ] )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[28]:
    # output
    : ===========================================================================
    : (5104, 8)
    : ===========================================================================
    : (2438, 8)
    : ===========================================================================
    :          MATCH        SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 7       rosera    ro-se-ra           3         ro      ro-se         se             znor             chyć
    : 8       rosera    ro-se-ra           3         ro      ro-se         se             znor             pieć
    : 9       rosera    ro-se-ra           3         ro      ro-se         se             znor             kieć
    : 10      mosera    mo-se-ra           3         mo      mo-se         se             znor             chyć
    : 11      mosera    mo-se-ra           3         mo      mo-se         se             znor             pieć
    : 12      mosera    mo-se-ra           3         mo      mo-se         se             znor             kieć
    : 13      wasewo    wa-se-wo           3         wa      wa-se         se             znor             chyć
    : 14      wasewo    wa-se-wo           3         wa      wa-se         se             znor             pieć
    : 15      wasewo    wa-se-wo           3         wa      wa-se         se             znor             kieć
    : 16     rokałek   ro-ka-łek           3         ro      ro-ka         ka              łek              wić
    : 17     rokałek   ro-ka-łek           3         ro      ro-ka         ka             biań             piać
    : 18     rokałek   ro-ka-łek           3         ro      ro-ka         ka             biań             ziać
    : 19     rokałek   ro-ka-łek           3         ro      ro-ka         ka             biań             fiać
    : 20     rokałek   ro-ka-łek           3         ro      ro-ka         ka             biań             giać
    : 21     rokałek   ro-ka-łek           3         ro      ro-ka         ka             biań             siać
    : 22     rokałek   ro-ka-łek           3         ro      ro-ka         ka             biań             tiać
    : 23     rokałek   ro-ka-łek           3         ro      ro-ka         ka             diań             piać
    : 24     rokałek   ro-ka-łek           3         ro      ro-ka         ka             diań             ziać
    : 25     rokałek   ro-ka-łek           3         ro      ro-ka         ka             diań             fiać
    : 26     rokałek   ro-ka-łek           3         ro      ro-ka         ka             diań             giać
    : 27     rokałek   ro-ka-łek           3         ro      ro-ka         ka             diań             siać
    : 28     rokałek   ro-ka-łek           3         ro      ro-ka         ka             diań             tiać
    : 29     rokałek   ro-ka-łek           3         ro      ro-ka         ka             siań             piać
    : 30     rokałek   ro-ka-łek           3         ro      ro-ka         ka             siań             ziać
    : 31     rokałek   ro-ka-łek           3         ro      ro-ka         ka             siań             fiać
    : 32     rokałek   ro-ka-łek           3         ro      ro-ka         ka             siań             giać
    : 33     rokałek   ro-ka-łek           3         ro      ro-ka         ka             siań             siać
    : 34     rokałek   ro-ka-łek           3         ro      ro-ka         ka             siań             tiać
    : 35     rokałek   ro-ka-łek           3         ro      ro-ka         ka              gla              wić
    : 36     rokałek   ro-ka-łek           3         ro      ro-ka         ka              zja              wić
    : ...        ...         ...         ...        ...        ...        ...              ...              ...
    : 5019  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              dia              sać
    : 5020  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              pia              jać
    : 5021  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              pia              sać
    : 5022  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              bia              jać
    : 5023  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              bia              sać
    : 5024  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              sia              jać
    : 5025  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              sia              sać
    : 5026  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              gia              jać
    : 5027  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              gia              sać
    : 5028  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              nie              jać
    : 5029  niźwinie  niź-wi-nie           3        niź     niź-wi         wi              nie              sać
    : 5041  nikwinie  ni-kwi-nie           3         ni     ni-kwi        kwi              nie              bać
    : 5042  nikwinie  ni-kwi-nie           3         ni     ni-kwi        kwi              nie              mać
    : 5043  nikwinie  ni-kwi-nie           3         ni     ni-kwi        kwi              nie              nić
    : 5044  nisminie  ni-smi-nie           3         ni     ni-smi        smi              nie              nić
    : 5045  nisfinie  nis-fi-nie           3        nis     nis-fi         fi              nie              jać
    : 5046  nibfinie  nib-fi-nie           3        nib     nib-fi         fi              nie              jać
    : 5047  nidwinie  ni-dwi-nie           3         ni     ni-dwi        dwi              nie              rać
    : 5048  nidwinie  ni-dwi-nie           3         ni     ni-dwi        dwi              nie              tać
    : 5049  nidwinie  ni-dwi-nie           3         ni     ni-dwi        dwi              nie              lać
    : 5050  nidwinie  ni-dwi-nie           3         ni     ni-dwi        dwi              nie              mać
    : 5051  nitsinie  nit-si-nie           3        nit     nit-si         si              nie              lać
    : 5052  nitsinie  nit-si-nie           3        nit     nit-si         si              nie              jać
    : 5053  niżbinie  niż-bi-nie           3        niż     niż-bi         bi              nie              lać
    : 5054  niżbinie  niż-bi-nie           3        niż     niż-bi         bi              nie              sać
    : 5061  tuznisko  tu-zni-sko           3         tu     tu-zni        zni              sko              bać
    : 5062  tuznisko  tu-zni-sko           3         tu     tu-zni        zni              sko              mać
    : 5063  tuznisko  tu-zni-sko           3         tu     tu-zni        zni              sko              nić
    : 5100   rołanie   ro-ła-nie           3         ro      ro-ła         ła              nie              być
    : 5101   wułanie   wu-ła-nie           3         wu      wu-ła         ła              nie              być
    :
    : [3739 rows x 8 columns]
    : ===========================================================================
    :          MATCH        SYLL  SYLL_COUNT SYLL_FIRST SYLL_START SYLL_PENUL SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 8     ucirczyć  u-cir-czyć           3          u      u-cir        cir             stwa             czyć
    : 9     ucilczyć  u-cil-czyć           3          u      u-cil        cil             trum             czyć
    : 18    zapumkić  za-pum-kić           3         za     za-pum        pum              tek              nić
    : 19    zapumkić  za-pum-kić           3         za     za-pum        pum              tek              kić
    : 20    wypumkić  wy-pum-kić           3         wy     wy-pum        pum              tek              nić
    : 21    wypumkić  wy-pum-kić           3         wy     wy-pum        pum              tek              kić
    : 22    rodsilać  rod-si-lać           3        rod     rod-si         si              nie              lać
    : 23    rodsilać  rod-si-lać           3        rod     rod-si         si              nie              jać
    : 24    kodsijać  kod-si-jać           3        kod     kod-si         si              nie              lać
    : 25    kodsijać  kod-si-jać           3        kod     kod-si         si              nie              jać
    : 26    rodbilać  rod-bi-lać           3        rod     rod-bi         bi              nie              lać
    : 27    rodbilać  rod-bi-lać           3        rod     rod-bi         bi              nie              sać
    : 28     kobisać   ko-bi-sać           3         ko      ko-bi         bi              nie              lać
    : 29     kobisać   ko-bi-sać           3         ko      ko-bi         bi              nie              sać
    : 30     robisać   ro-bi-sać           3         ro      ro-bi         bi              nie              lać
    : 31     robisać   ro-bi-sać           3         ro      ro-bi         bi              nie              sać
    : 32    rodnilać  rod-ni-lać           3        rod     rod-ni         ni              nie              lać
    : 33    rodnilać  rod-ni-lać           3        rod     rod-ni         ni              nie              sać
    : 34    rodnilać  rod-ni-lać           3        rod     rod-ni         ni              sko              lać
    : 35    rodnilać  rod-ni-lać           3        rod     rod-ni         ni              sko              sać
    : 36     konisać   ko-ni-sać           3         ko      ko-ni         ni              nie              lać
    : 37     konisać   ko-ni-sać           3         ko      ko-ni         ni              nie              sać
    : 38     konisać   ko-ni-sać           3         ko      ko-ni         ni              sko              lać
    : 39     konisać   ko-ni-sać           3         ko      ko-ni         ni              sko              sać
    : 40     ronisać   ro-ni-sać           3         ro      ro-ni         ni              nie              lać
    : 41     ronisać   ro-ni-sać           3         ro      ro-ni         ni              nie              sać
    : 42     ronisać   ro-ni-sać           3         ro      ro-ni         ni              sko              lać
    : 43     ronisać   ro-ni-sać           3         ro      ro-ni         ni              sko              sać
    : 44    rodpilać  rod-pi-lać           3        rod     rod-pi         pi              dia              lać
    : 45    rodpilać  rod-pi-lać           3        rod     rod-pi         pi              dia              pać
    : ...        ...         ...         ...        ...        ...        ...              ...              ...
    : 2408  nacapiać  na-ca-piać           3         na      na-ca         ca             dwód             tiać
    : 2409  nacapiać  na-ca-piać           3         na      na-ca         ca             dwód             diać
    : 2410   owydzić   o-wy-dzić           3          o       o-wy         wy             dłag             dzić
    : 2411   owydzić   o-wy-dzić           3          o       o-wy         wy             gnęg             dzić
    : 2412   owydzić   o-wy-dzić           3          o       o-wy         wy             wkag             dzić
    : 2413   owydzić   o-wy-dzić           3          o       o-wy         wy             trag             dzić
    : 2414   owydzić   o-wy-dzić           3          o       o-wy         wy             kłag             dzić
    : 2415   owydzić   o-wy-dzić           3          o       o-wy         wy             dkag             dzić
    : 2416   owydzić   o-wy-dzić           3          o       o-wy         wy             słag             dzić
    : 2417   owydzić   o-wy-dzić           3          o       o-wy         wy             snęg             dzić
    : 2418   owydzić   o-wy-dzić           3          o       o-wy         wy             snąg             dzić
    : 2419   owydzić   o-wy-dzić           3          o       o-wy         wy             bkag             dzić
    : 2420   owydzić   o-wy-dzić           3          o       o-wy         wy             śnyg             dzić
    : 2421   owydzić   o-wy-dzić           3          o       o-wy         wy             śneg             dzić
    : 2422   owydzić   o-wy-dzić           3          o       o-wy         wy             dłog             dzić
    : 2423   owydzić   o-wy-dzić           3          o       o-wy         wy             dłyg             dzić
    : 2424   owydzić   o-wy-dzić           3          o       o-wy         wy             dłeg             dzić
    : 2425   owydzić   o-wy-dzić           3          o       o-wy         wy             ckag             dzić
    : 2426   owydzić   o-wy-dzić           3          o       o-wy         wy             ckog             dzić
    : 2427   owydzić   o-wy-dzić           3          o       o-wy         wy             ckąg             dzić
    : 2428   owydzić   o-wy-dzić           3          o       o-wy         wy             ckug             dzić
    : 2429   owydzić   o-wy-dzić           3          o       o-wy         wy             brag             dzić
    : 2430   owydzić   o-wy-dzić           3          o       o-wy         wy             rtia             dzić
    : 2431   owydzić   o-wy-dzić           3          o       o-wy         wy             dium             dzić
    : 2432   kolisać   ko-li-sać           3         ko      ko-li         li              pia              sać
    : 2433   kolisać   ko-li-sać           3         ko      ko-li         li              bia              sać
    : 2434   kolisać   ko-li-sać           3         ko      ko-li         li              nie              sać
    : 2435   rolisać   ro-li-sać           3         ro      ro-li         li              pia              sać
    : 2436   rolisać   ro-li-sać           3         ro      ro-li         li              bia              sać
    : 2437   rolisać   ro-li-sać           3         ro      ro-li         li              nie              sać
    :
    : [1564 rows x 8 columns]
    :
    :END:

*** DONE Merge =nouns= and =verbs= for basic cleanup

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

s0055_words = pd.concat([
    s0055_nouns_hyphen_sel_uniq_merged,
    s0055_verbs_hyphen_sel_uniq_merged,
], axis=0, ignore_index=False, )

s0055_words.drop(labels=[ "MATCH", "SYLL_COUNT", "SYLL_FIRST", "SYLL_PENUL" ], axis=1, inplace=True)

print( s0055_words.shape )
s0055_words.drop_duplicates( subset=[ "SYLL_START",  "SYLL_ULTIM_verbs", "SYLL_ULTIM_nouns", ], keep="first", inplace=True)
print( s0055_words.shape )

print( s0055_words )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[29]:
    # output
    : (7542, 4)
    : (6632, 4)
    :             SYLL SYLL_START SYLL_ULTIM_nouns SYLL_ULTIM_verbs
    : 0        sud-tor        sud              tor              nyć
    : 1        sud-tor        sud              tor              nić
    : 2        sut-tor        sut              tor              nić
    : 3        sut-tor        sut              tor              kić
    : 4        se-znor         se             znor             chyć
    : 5        se-znor         se             znor             pieć
    : 6        se-znor         se             znor             kieć
    : 7       ro-se-ra      ro-se             znor             chyć
    : 8       ro-se-ra      ro-se             znor             pieć
    : 9       ro-se-ra      ro-se             znor             kieć
    : 10      mo-se-ra      mo-se             znor             chyć
    : 11      mo-se-ra      mo-se             znor             pieć
    : 12      mo-se-ra      mo-se             znor             kieć
    : 13      wa-se-wo      wa-se             znor             chyć
    : 14      wa-se-wo      wa-se             znor             pieć
    : 15      wa-se-wo      wa-se             znor             kieć
    : 16     ro-ka-łek      ro-ka              łek              wić
    : 17     ro-ka-łek      ro-ka             biań             piać
    : 18     ro-ka-łek      ro-ka             biań             ziać
    : 19     ro-ka-łek      ro-ka             biań             fiać
    : 20     ro-ka-łek      ro-ka             biań             giać
    : 21     ro-ka-łek      ro-ka             biań             siać
    : 22     ro-ka-łek      ro-ka             biań             tiać
    : 23     ro-ka-łek      ro-ka             diań             piać
    : 24     ro-ka-łek      ro-ka             diań             ziać
    : 25     ro-ka-łek      ro-ka             diań             fiać
    : 26     ro-ka-łek      ro-ka             diań             giać
    : 27     ro-ka-łek      ro-ka             diań             siać
    : 28     ro-ka-łek      ro-ka             diań             tiać
    : 29     ro-ka-łek      ro-ka             siań             piać
    : ...          ...        ...              ...              ...
    : 2359  ko-ży-mieć      ko-ży             stie             mieć
    : 2360  ko-ży-mieć      ko-ży             chie             mieć
    : 2410   o-wy-dzić       o-wy             dłag             dzić
    : 2411   o-wy-dzić       o-wy             gnęg             dzić
    : 2412   o-wy-dzić       o-wy             wkag             dzić
    : 2413   o-wy-dzić       o-wy             trag             dzić
    : 2414   o-wy-dzić       o-wy             kłag             dzić
    : 2415   o-wy-dzić       o-wy             dkag             dzić
    : 2416   o-wy-dzić       o-wy             słag             dzić
    : 2417   o-wy-dzić       o-wy             snęg             dzić
    : 2418   o-wy-dzić       o-wy             snąg             dzić
    : 2419   o-wy-dzić       o-wy             bkag             dzić
    : 2420   o-wy-dzić       o-wy             śnyg             dzić
    : 2421   o-wy-dzić       o-wy             śneg             dzić
    : 2422   o-wy-dzić       o-wy             dłog             dzić
    : 2423   o-wy-dzić       o-wy             dłyg             dzić
    : 2424   o-wy-dzić       o-wy             dłeg             dzić
    : 2425   o-wy-dzić       o-wy             ckag             dzić
    : 2426   o-wy-dzić       o-wy             ckog             dzić
    : 2427   o-wy-dzić       o-wy             ckąg             dzić
    : 2428   o-wy-dzić       o-wy             ckug             dzić
    : 2429   o-wy-dzić       o-wy             brag             dzić
    : 2430   o-wy-dzić       o-wy             rtia             dzić
    : 2431   o-wy-dzić       o-wy             dium             dzić
    : 2432   ko-li-sać      ko-li              pia              sać
    : 2433   ko-li-sać      ko-li              bia              sać
    : 2434   ko-li-sać      ko-li              nie              sać
    : 2435   ro-li-sać      ro-li              pia              sać
    : 2436   ro-li-sać      ro-li              bia              sać
    : 2437   ro-li-sać      ro-li              nie              sać
    :
    : [6632 rows x 4 columns]
    :
    :END:

*** DONE Split =nouns= and =verbs=

    Spltting because duplicates were produced by the cartesian product
    and there is no 1-1 correpondence between the possible
    pseudo-nouns and pseudo-verbs.

    On the other hand we have a situation in whych
    - for every pseudo-noun there is at least one pseudo-verb (n1-v1+)
    - for every pseudo-verb there is at least one pseudo-noun (v1-n1+)

    It might be convenient to filter the pseudo-nouns and pseudo-verbs
    separately. CAUTION this may invalidate the assumptions of n1-v1+
    and v1-n1+

    | A  | N  | V  |
    |----+----+----|
    | a1 | n1 | v1 |
    | a1 | n1 | v2 |
    | a1 | n1 | v3 |
    | a1 | n2 | v3 |
    | a1 | n3 | v3 |
    | a1 | n4 | v3 |
    | a2 | n4 | v4 |
    | a2 | n4 | v5 |
    | a2 | n4 | v6 |
    | a2 | n5 | v6 |
    | a2 | n6 | v6 |

    | A  | N  |
    |----+----|
    | a1 | n1 |
    | a1 | n1 |
    | a1 | n1 |
    | a1 | n2 |
    | a1 | n3 |
    | a1 | n4 |
    | a2 | n4 |
    | a2 | n4 |
    | a2 | n4 |
    | a2 | n5 |
    | a2 | n6 |

    | A  | V  |
    |----+----|
    | a1 | v1 |
    | a1 | v2 |
    | a1 | v3 |
    | a1 | v3 |
    | a1 | v3 |
    | a1 | v3 |
    | a2 | v4 |
    | a2 | v5 |
    | a2 | v6 |
    | a2 | v6 |
    | a2 | v6 |

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

s0055_words_nouns = s0055_words[[ "SYLL_START", "SYLL_ULTIM_nouns", ]].copy()
s0055_words_verbs = s0055_words[[ "SYLL_START", "SYLL_ULTIM_verbs", ]].copy()

s0055_words_nouns.drop_duplicates( subset=[ "SYLL_START", "SYLL_ULTIM_nouns", ], keep="first", inplace=True, )
s0055_words_verbs.drop_duplicates( subset=[ "SYLL_START", "SYLL_ULTIM_verbs", ], keep="first", inplace=True, )

s0055_words_nouns[ "SYLL" ] = s0055_words_nouns[[ "SYLL_START", "SYLL_ULTIM_nouns", ]].apply(lambda x: "-".join(x), axis=1)
s0055_words_verbs[ "SYLL" ] = s0055_words_verbs[[ "SYLL_START", "SYLL_ULTIM_verbs", ]].apply(lambda x: "-".join(x), axis=1)

s0055_words_nouns[ "WORD" ] = s0055_words_nouns.apply(lambda x: x.SYLL.replace("-", ""), axis=1, )
s0055_words_verbs[ "WORD" ] = s0055_words_verbs.apply(lambda x: x.SYLL.replace("-", ""), axis=1, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[30]:
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_words_nouns,  ]
df_info = [ "s0055_words_nouns", ]
df_head = 40
df_tail = 40

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[31]:
    # output
    : ===========================================================================
    : s0055_words_nouns
    : ===========================================================================
    : idx count: 1654
    : row count: 4  ['SYLL_START', 'SYLL_ULTIM_nouns', 'SYLL', 'WORD']
    : ---------------------------------------------------------------------------
    :    SYLL_START SYLL_ULTIM_nouns        SYLL      WORD
    : 0         sud              tor     sud-tor    sudtor
    : 2         sut              tor     sut-tor    suttor
    : 4          se             znor     se-znor    seznor
    : 7       ro-se             znor  ro-se-znor  roseznor
    : 10      mo-se             znor  mo-se-znor  moseznor
    : 13      wa-se             znor  wa-se-znor  waseznor
    : 16      ro-ka              łek   ro-ka-łek   rokałek
    : 17      ro-ka             biań  ro-ka-biań  rokabiań
    : 23      ro-ka             diań  ro-ka-diań  rokadiań
    : 29      ro-ka             siań  ro-ka-siań  rokasiań
    : 35      ro-ka              gla   ro-ka-gla   rokagla
    : 36      ro-ka              zja   ro-ka-zja   rokazja
    : 37      ro-ka              dża   ro-ka-dża   rokadża
    : 38      ro-ka              sha   ro-ka-sha   rokasha
    : 39      ro-ka              kra   ro-ka-kra   rokakra
    : 40      ro-ka              pra   ro-ka-pra   rokapra
    : 41      ro-ka              kła   ro-ka-kła   rokakła
    : 42      ro-ka              fta   ro-ka-fta   rokafta
    : 43      ro-ka              sma   ro-ka-sma   rokasma
    : 44      ro-ka              nie   ro-ka-nie   rokanie
    : 45      ro-ka              wie   ro-ka-wie   rokawie
    : 46      mo-ka              łek   mo-ka-łek   mokałek
    : 47      mo-ka             biań  mo-ka-biań  mokabiań
    : 53      mo-ka             diań  mo-ka-diań  mokadiań
    : 59      mo-ka             siań  mo-ka-siań  mokasiań
    : 65      mo-ka              gla   mo-ka-gla   mokagla
    : 66      mo-ka              zja   mo-ka-zja   mokazja
    : 67      mo-ka              dża   mo-ka-dża   mokadża
    : 68      mo-ka              sha   mo-ka-sha   mokasha
    : 69      mo-ka              kra   mo-ka-kra   mokakra
    : 70      mo-ka              pra   mo-ka-pra   mokapra
    : 71      mo-ka              kła   mo-ka-kła   mokakła
    : 72      mo-ka              fta   mo-ka-fta   mokafta
    : 73      mo-ka              sma   mo-ka-sma   mokasma
    : 74      mo-ka              nie   mo-ka-nie   mokanie
    : 75      mo-ka              wie   mo-ka-wie   mokawie
    : 76         ka              łek      ka-łek     kałek
    : 77         ka             biań     ka-biań    kabiań
    : 83         ka             diań     ka-diań    kadiań
    : 89         ka             siań     ka-siań    kasiań
    : ---------------------------------------------------------------------------
    :      SYLL_START SYLL_ULTIM_nouns        SYLL      WORD
    : 2338      na-zy             ście  na-zy-ście  nazyście
    : 2340      na-zy             śnie  na-zy-śnie  nazyśnie
    : 2342      na-zy             śmie  na-zy-śmie  nazyśmie
    : 2344      ka-zy             dzie  ka-zy-dzie  kazydzie
    : 2346      ka-zy             stie  ka-zy-stie  kazystie
    : 2348      ka-zy             chie  ka-zy-chie  kazychie
    : 2350      ka-zy             ście  ka-zy-ście  kazyście
    : 2352      ka-zy             śnie  ka-zy-śnie  kazyśnie
    : 2354      ka-zy             śmie  ka-zy-śmie  kazyśmie
    : 2358      ko-ży             dzie  ko-ży-dzie  kożydzie
    : 2359      ko-ży             stie  ko-ży-stie  kożystie
    : 2360      ko-ży             chie  ko-ży-chie  kożychie
    : 2410       o-wy             dłag   o-wy-dłag   owydłag
    : 2411       o-wy             gnęg   o-wy-gnęg   owygnęg
    : 2412       o-wy             wkag   o-wy-wkag   owywkag
    : 2413       o-wy             trag   o-wy-trag   owytrag
    : 2414       o-wy             kłag   o-wy-kłag   owykłag
    : 2415       o-wy             dkag   o-wy-dkag   owydkag
    : 2416       o-wy             słag   o-wy-słag   owysłag
    : 2417       o-wy             snęg   o-wy-snęg   owysnęg
    : 2418       o-wy             snąg   o-wy-snąg   owysnąg
    : 2419       o-wy             bkag   o-wy-bkag   owybkag
    : 2420       o-wy             śnyg   o-wy-śnyg   owyśnyg
    : 2421       o-wy             śneg   o-wy-śneg   owyśneg
    : 2422       o-wy             dłog   o-wy-dłog   owydłog
    : 2423       o-wy             dłyg   o-wy-dłyg   owydłyg
    : 2424       o-wy             dłeg   o-wy-dłeg   owydłeg
    : 2425       o-wy             ckag   o-wy-ckag   owyckag
    : 2426       o-wy             ckog   o-wy-ckog   owyckog
    : 2427       o-wy             ckąg   o-wy-ckąg   owyckąg
    : 2428       o-wy             ckug   o-wy-ckug   owyckug
    : 2429       o-wy             brag   o-wy-brag   owybrag
    : 2430       o-wy             rtia   o-wy-rtia   owyrtia
    : 2431       o-wy             dium   o-wy-dium   owydium
    : 2432      ko-li              pia   ko-li-pia   kolipia
    : 2433      ko-li              bia   ko-li-bia   kolibia
    : 2434      ko-li              nie   ko-li-nie   kolinie
    : 2435      ro-li              pia   ro-li-pia   rolipia
    : 2436      ro-li              bia   ro-li-bia   rolibia
    : 2437      ro-li              nie   ro-li-nie   rolinie
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_words_verbs,  ]
df_info = [ "s0055_words_verbs", ]
df_head = 40
df_tail = 40

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[32]:
    # output
    : ===========================================================================
    : s0055_words_verbs
    : ===========================================================================
    : idx count: 1367
    : row count: 4  ['SYLL_START', 'SYLL_ULTIM_verbs', 'SYLL', 'WORD']
    : ---------------------------------------------------------------------------
    :     SYLL_START SYLL_ULTIM_verbs          SYLL       WORD
    : 0          sud              nyć       sud-nyć     sudnyć
    : 1          sud              nić       sud-nić     sudnić
    : 2          sut              nić       sut-nić     sutnić
    : 3          sut              kić       sut-kić     sutkić
    : 4           se             chyć       se-chyć     sechyć
    : 5           se             pieć       se-pieć     sepieć
    : 6           se             kieć       se-kieć     sekieć
    : 7        ro-se             chyć    ro-se-chyć   rosechyć
    : 8        ro-se             pieć    ro-se-pieć   rosepieć
    : 9        ro-se             kieć    ro-se-kieć   rosekieć
    : 10       mo-se             chyć    mo-se-chyć   mosechyć
    : 11       mo-se             pieć    mo-se-pieć   mosepieć
    : 12       mo-se             kieć    mo-se-kieć   mosekieć
    : 13       wa-se             chyć    wa-se-chyć   wasechyć
    : 14       wa-se             pieć    wa-se-pieć   wasepieć
    : 15       wa-se             kieć    wa-se-kieć   wasekieć
    : 16       ro-ka              wić     ro-ka-wić    rokawić
    : 17       ro-ka             piać    ro-ka-piać   rokapiać
    : 18       ro-ka             ziać    ro-ka-ziać   rokaziać
    : 19       ro-ka             fiać    ro-ka-fiać   rokafiać
    : 20       ro-ka             giać    ro-ka-giać   rokagiać
    : 21       ro-ka             siać    ro-ka-siać   rokasiać
    : 22       ro-ka             tiać    ro-ka-tiać   rokatiać
    : 46       mo-ka              wić     mo-ka-wić    mokawić
    : 47       mo-ka             piać    mo-ka-piać   mokapiać
    : 48       mo-ka             ziać    mo-ka-ziać   mokaziać
    : 49       mo-ka             fiać    mo-ka-fiać   mokafiać
    : 50       mo-ka             giać    mo-ka-giać   mokagiać
    : 51       mo-ka             siać    mo-ka-siać   mokasiać
    : 52       mo-ka             tiać    mo-ka-tiać   mokatiać
    : 76          ka              wić        ka-wić      kawić
    : 77          ka             piać       ka-piać     kapiać
    : 78          ka             ziać       ka-ziać     kaziać
    : 79          ka             fiać       ka-fiać     kafiać
    : 80          ka             giać       ka-giać     kagiać
    : 81          ka             siać       ka-siać     kasiać
    : 82          ka             tiać       ka-tiać     katiać
    : 106    o-mu-ka              wić   o-mu-ka-wić   omukawić
    : 107    o-mu-ka             piać  o-mu-ka-piać  omukapiać
    : 108    o-mu-ka             ziać  o-mu-ka-ziać  omukaziać
    : ---------------------------------------------------------------------------
    :      SYLL_START SYLL_ULTIM_verbs         SYLL       WORD
    : 2037     ska-bo             chić  ska-bo-chić  skabochić
    : 2038     ska-bo             czić  ska-bo-czić  skaboczić
    : 2039     ska-bo             skić  ska-bo-skić  skaboskić
    : 2067     ska-bo              wać   ska-bo-wać   skabować
    : 2073     sza-bo             znąć  sza-bo-znąć  szaboznąć
    : 2074     sza-bo             śnąć  sza-bo-śnąć  szabośnąć
    : 2075     sza-bo             gnąć  sza-bo-gnąć  szabognąć
    : 2076     sza-bo             szić  sza-bo-szić  szaboszić
    : 2077     sza-bo             rzić  sza-bo-rzić  szaborzić
    : 2078     sza-bo             stić  sza-bo-stić  szabostić
    : 2079     sza-bo             chić  sza-bo-chić  szabochić
    : 2080     sza-bo             czić  sza-bo-czić  szaboczić
    : 2081     sza-bo             skić  sza-bo-skić  szaboskić
    : 2109     sza-bo              wać   sza-bo-wać   szabować
    : 2115     spa-bo             znąć  spa-bo-znąć  spaboznąć
    : 2116     spa-bo             śnąć  spa-bo-śnąć  spabośnąć
    : 2117     spa-bo             gnąć  spa-bo-gnąć  spabognąć
    : 2118     spa-bo             szić  spa-bo-szić  spaboszić
    : 2119     spa-bo             rzić  spa-bo-rzić  spaborzić
    : 2120     spa-bo             stić  spa-bo-stić  spabostić
    : 2121     spa-bo             chić  spa-bo-chić  spabochić
    : 2122     spa-bo             czić  spa-bo-czić  spaboczić
    : 2123     spa-bo             skić  spa-bo-skić  spaboskić
    : 2151     spa-bo              wać   spa-bo-wać   spabować
    : 2157      o-mel             czeć   o-mel-czeć   omelczeć
    : 2158      o-mel             szeć   o-mel-szeć   omelszeć
    : 2159      o-mem             szeć   o-mem-szeć   omemszeć
    : 2160      o-mem             czeć   o-mem-czeć   omemczeć
    : 2161    za-ę-ła              być  za-ę-ła-być   zaęłabyć
    : 2277        smi              nić      smi-nić     sminić
    : 2320         zy             cieć      zy-cieć     zycieć
    : 2321         zy             mieć      zy-mieć     zymieć
    : 2332      na-zy             cieć   na-zy-cieć   nazycieć
    : 2333      na-zy             mieć   na-zy-mieć   nazymieć
    : 2344      ka-zy             cieć   ka-zy-cieć   kazycieć
    : 2345      ka-zy             mieć   ka-zy-mieć   kazymieć
    : 2358      ko-ży             mieć   ko-ży-mieć   kożymieć
    : 2410       o-wy             dzić    o-wy-dzić    owydzić
    : 2432      ko-li              sać    ko-li-sać    kolisać
    : 2435      ro-li              sać    ro-li-sać    rolisać
    :
    :END:

*** DONE Prepare illegal bigrams regex

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

tmp_illegal_bigrams =[
    "aa", "aq", "av", "ax", "ay",
    "bb", "bh", "bq", "bv", "bx",
    "cc", "cq", "cv", "cx",
    "dd", "dq", "dv", "dx",
    "ee", "ev", "ex", "ey",
    "fb", "fc", "fd", "ff", "fh", "fq", "fv", "fx",
    "gg", "gh", "gq", "gv", "gx", "gy",
    "hh", "hq", "hv", "hx",
    "ii", "iv", "ix", "iy", "jj", "jq", "jv", "jx",
    "kk", "kh", "kq", "kv", "kx",
    "lq", "lv", "lx",
    "mh", "mq", "mv", "mx",
    "nh", "nq", "nr", "nv", "nx",
    "oo", "oq", "ov", "ox", "oy",
    "pg", "ph", "pp", "pq", "pv", "px",
    "rh", "rq", "rr", "rv", "rx",
    "sh", "sq", "ss", "sv", "sx",
    "th", "tq", "tt", "tv", "tx",
    "uq", "uv", "ux", "uy",
    "wq", "wv", "ww", "wx",
    "ya", "ye", "yf", "yh", "yi", "yq", "yu", "yv", "yx", "yy",
    "zh", "zq", "zr", "zv", "zx",
]

tmp_illegal_bigrams_regex = "|".join( tmp_illegal_bigrams )

print( tmp_illegal_bigrams_regex )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[33]:
    # output
    : aa|aq|av|ax|ay|bb|bh|bq|bv|bx|cc|cq|cv|cx|dd|dq|dv|dx|ee|ev|ex|ey|fb|fc|fd|ff|fh|fq|fv|fx|gg|gh|gq|gv|gx|gy|hh|hq|hv|hx|ii|iv|ix|iy|jj|jq|jv|jx|kk|kh|kq|kv|kx|lq|lv|lx|mh|mq|mv|mx|nh|nq|nr|nv|nx|oo|oq|ov|ox|oy|pg|ph|pp|pq|pv|px|rh|rq|rr|rv|rx|sh|sq|ss|sv|sx|th|tq|tt|tv|tx|uq|uv|ux|uy|wq|wv|ww|wx|ya|ye|yf|yh|yi|yq|yu|yv|yx|yy|zh|zq|zr|zv|zx
    :
    :END:

*** DONE Remove impossible character (letter) combinations (reject bigrams)

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

tmp_nouns_illegal = s0055_words_nouns["WORD"].str.contains( pat=tmp_illegal_bigrams_regex, regex=True, )
tmp_verbs_illegal = s0055_words_verbs["WORD"].str.contains( pat=tmp_illegal_bigrams_regex, regex=True, )

print( "="*75 )
print( s0055_words_nouns[ tmp_nouns_illegal ] )
print( "="*75 )
print( s0055_words_verbs[ tmp_verbs_illegal ] )

s0055_words_nouns_legal = s0055_words_nouns[ ~tmp_nouns_illegal ]
s0055_words_verbs_legal = s0055_words_verbs[ ~tmp_verbs_illegal ]

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[34]:
    # output
    : ===========================================================================
    :      SYLL_START SYLL_ULTIM_nouns          SYLL        WORD
    : 2           sut              tor       sut-tor      suttor
    : 38        ro-ka              sha     ro-ka-sha     rokasha
    : 68        mo-ka              sha     mo-ka-sha     mokasha
    : 98           ka              sha        ka-sha       kasha
    : 128     o-mu-ka              sha   o-mu-ka-sha    omukasha
    : 158       eć-ka              sha     eć-ka-sha     ećkasha
    : 188       ep-ka              sha     ep-ka-sha     epkasha
    : 218       do-ka              sha     do-ka-sha     dokasha
    : 248       so-ka              sha     so-ka-sha     sokasha
    : 278       na-ka              sha     na-ka-sha     nakasha
    : 308       wu-ka              sha     wu-ka-sha     wukasha
    : 1247     kub-by              nek    kub-by-nek    kubbynek
    : 2230      at-to              pys     at-to-pys     attopys
    : 2231      at-to              pęs     at-to-pęs     attopęs
    : 2232      at-to              pos     at-to-pos     attopos
    : 2233      at-to              pąs     at-to-pąs     attopąs
    : 2234      at-to              pes     at-to-pes     attopes
    : 2235      at-to              dos     at-to-dos     attodos
    : 2236      at-to              dis     at-to-dis     attodis
    : 2237      at-to              dąs     at-to-dąs     attodąs
    : 2238      at-to              dęs     at-to-dęs     attodęs
    : 2732         we             ssko       we-ssko      wessko
    : 2780      ro-we             ssko    ro-we-ssko    rowessko
    : 2828      mo-we             ssko    mo-we-ssko    mowessko
    : 2876    bieź-we             ssko  bieź-we-ssko  bieźwessko
    : 2924      wa-we             ssko    wa-we-ssko    wawessko
    : 5065       wzro              pie      wzro-pie     wzropie
    : 658     u-sh-bu              nek   u-sh-bu-nek    ushbunek
    : 913      bap-ka              sha    bap-ka-sha    bapkasha
    : ===========================================================================
    :      SYLL_START SYLL_ULTIM_verbs         SYLL      WORD
    : 1247     kub-by              kać   kub-by-kać  kubbykać
    : 2230      at-to              wać    at-to-wać   attować
    : 5065       wzro              mić     wzro-mić   wzromić
    : 5066       wzro              cić     wzro-cić   wzrocić
    : 658     u-sh-bu              cać  u-sh-bu-cać  ushbucać
    : 659     u-sh-bu              jać  u-sh-bu-jać  ushbujać
    : 660     u-sh-bu              kać  u-sh-bu-kać  ushbukać
    :
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_words_nouns_legal,  ]
df_info = [ "s0055_words_nouns_legal", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[35]:
    # output
    : ===========================================================================
    : s0055_words_nouns_legal
    : ===========================================================================
    : idx count: 1625
    : row count: 4  ['SYLL_START', 'SYLL_ULTIM_nouns', 'SYLL', 'WORD']
    : ---------------------------------------------------------------------------
    :    SYLL_START SYLL_ULTIM_nouns        SYLL      WORD
    : 0         sud              tor     sud-tor    sudtor
    : 4          se             znor     se-znor    seznor
    : 7       ro-se             znor  ro-se-znor  roseznor
    : 10      mo-se             znor  mo-se-znor  moseznor
    : 13      wa-se             znor  wa-se-znor  waseznor
    : 16      ro-ka              łek   ro-ka-łek   rokałek
    : 17      ro-ka             biań  ro-ka-biań  rokabiań
    : 23      ro-ka             diań  ro-ka-diań  rokadiań
    : 29      ro-ka             siań  ro-ka-siań  rokasiań
    : 35      ro-ka              gla   ro-ka-gla   rokagla
    : 36      ro-ka              zja   ro-ka-zja   rokazja
    : 37      ro-ka              dża   ro-ka-dża   rokadża
    : 39      ro-ka              kra   ro-ka-kra   rokakra
    : 40      ro-ka              pra   ro-ka-pra   rokapra
    : 41      ro-ka              kła   ro-ka-kła   rokakła
    : ---------------------------------------------------------------------------
    :      SYLL_START SYLL_ULTIM_nouns       SYLL     WORD
    : 2423       o-wy             dłyg  o-wy-dłyg  owydłyg
    : 2424       o-wy             dłeg  o-wy-dłeg  owydłeg
    : 2425       o-wy             ckag  o-wy-ckag  owyckag
    : 2426       o-wy             ckog  o-wy-ckog  owyckog
    : 2427       o-wy             ckąg  o-wy-ckąg  owyckąg
    : 2428       o-wy             ckug  o-wy-ckug  owyckug
    : 2429       o-wy             brag  o-wy-brag  owybrag
    : 2430       o-wy             rtia  o-wy-rtia  owyrtia
    : 2431       o-wy             dium  o-wy-dium  owydium
    : 2432      ko-li              pia  ko-li-pia  kolipia
    : 2433      ko-li              bia  ko-li-bia  kolibia
    : 2434      ko-li              nie  ko-li-nie  kolinie
    : 2435      ro-li              pia  ro-li-pia  rolipia
    : 2436      ro-li              bia  ro-li-bia  rolibia
    : 2437      ro-li              nie  ro-li-nie  rolinie
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

df_list = [  s0055_words_verbs_legal,  ]
df_info = [ "s0055_words_verbs_legal", ]
df_head = 15
df_tail = 15

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[36]:
    # output
    : ===========================================================================
    : s0055_words_verbs_legal
    : ===========================================================================
    : idx count: 1360
    : row count: 4  ['SYLL_START', 'SYLL_ULTIM_verbs', 'SYLL', 'WORD']
    : ---------------------------------------------------------------------------
    :    SYLL_START SYLL_ULTIM_verbs        SYLL      WORD
    : 0         sud              nyć     sud-nyć    sudnyć
    : 1         sud              nić     sud-nić    sudnić
    : 2         sut              nić     sut-nić    sutnić
    : 3         sut              kić     sut-kić    sutkić
    : 4          se             chyć     se-chyć    sechyć
    : 5          se             pieć     se-pieć    sepieć
    : 6          se             kieć     se-kieć    sekieć
    : 7       ro-se             chyć  ro-se-chyć  rosechyć
    : 8       ro-se             pieć  ro-se-pieć  rosepieć
    : 9       ro-se             kieć  ro-se-kieć  rosekieć
    : 10      mo-se             chyć  mo-se-chyć  mosechyć
    : 11      mo-se             pieć  mo-se-pieć  mosepieć
    : 12      mo-se             kieć  mo-se-kieć  mosekieć
    : 13      wa-se             chyć  wa-se-chyć  wasechyć
    : 14      wa-se             pieć  wa-se-pieć  wasepieć
    : ---------------------------------------------------------------------------
    :      SYLL_START SYLL_ULTIM_verbs         SYLL      WORD
    : 2158      o-mel             szeć   o-mel-szeć  omelszeć
    : 2159      o-mem             szeć   o-mem-szeć  omemszeć
    : 2160      o-mem             czeć   o-mem-czeć  omemczeć
    : 2161    za-ę-ła              być  za-ę-ła-być  zaęłabyć
    : 2277        smi              nić      smi-nić    sminić
    : 2320         zy             cieć      zy-cieć    zycieć
    : 2321         zy             mieć      zy-mieć    zymieć
    : 2332      na-zy             cieć   na-zy-cieć  nazycieć
    : 2333      na-zy             mieć   na-zy-mieć  nazymieć
    : 2344      ka-zy             cieć   ka-zy-cieć  kazycieć
    : 2345      ka-zy             mieć   ka-zy-mieć  kazymieć
    : 2358      ko-ży             mieć   ko-ży-mieć  kożymieć
    : 2410       o-wy             dzić    o-wy-dzić   owydzić
    : 2432      ko-li              sać    ko-li-sać   kolisać
    : 2435      ro-li              sać    ro-li-sać   rolisać
    :
    :END:

*** TODO Calculate =Levenshtein= distances

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

# INFO: Due to the length of each run this step is performed in a separate session

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[36]:
    :END:

** Proc 90: Save
*** DONE Save

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0055.py

DEMO_MODE = False

if not DEMO_MODE:
    df_to_xlsx( df_data=s0055_nouns_hyphen_sel_uniq_merged , df_name="s0055_nouns_hyphen_sel_uniq_merged" , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0055_verbs_hyphen_sel_uniq_merged , df_name="s0055_verbs_hyphen_sel_uniq_merged" , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0055_words_nouns_legal            , df_name="s0055_words_nouns_legal"            , df_path="data_out", add_time=False, verbose=1, )
    df_to_xlsx( df_data=s0055_words_verbs_legal            , df_name="s0055_words_verbs_legal"            , df_path="data_out", add_time=False, verbose=1, )
    print( "="*75 )
    print("Saved *.xlsx")
else:
    print("*** Not saving any *.xlsx files -- DEMO_MODE is ON!!! ***")

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[37]:
    # output
    : Saving DataFrame as: data_out/s0055_nouns_hyphen_sel_uniq_merged.xlsx
    : Saving DataFrame as: data_out/s0055_verbs_hyphen_sel_uniq_merged.xlsx
    : Saving DataFrame as: data_out/s0055_words_nouns_legal.xlsx
    : Saving DataFrame as: data_out/s0055_words_verbs_legal.xlsx
    : ===========================================================================
    : Saved *.xlsx
    :
    :END:

* DONE Stage 0066: Levenshtein (~OLD20~)
** COMMENTARY

   Procedure:
   - Tangle
   - run =ipython= (=cc-anaconda3=)
   - use ~% run -i stage_0000.py~
   - use ~% run -i stage_0066.py~

** Proc 00: Load
*** DONE Load

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

DEMO_MODE = False

s0055_words_nouns_legal = pd.read_excel( "./data_out/s0055_words_nouns_legal.xlsx", ignore_index=True, )
s0055_words_verbs_legal = pd.read_excel( "./data_out/s0055_words_verbs_legal.xlsx", ignore_index=True, )

s0055_words_wyggy_legal = pd.read_csv( "./wuggy/data/orthographic_polish.txt", delimiter="\t", skiprows=0, encoding="utf-8", header=None, names=[ "WORD", "SYLLS", "FREQ" ])

s0055_words_nouns_legal = s0055_words_nouns_legal.replace( np.nan, "", regex=True, )
s0055_words_verbs_legal = s0055_words_verbs_legal.replace( np.nan, "", regex=True, )


s0055_words_wyggy_legal_data_type_conv_dict = {
    "WORD": str,
    "SYLLS": str,
    "FREQ": float
}

s0055_words_wyggy_legal = s0066_wuggy.astype( s0055_words_wyggy_legal_data_type_conv_dict )
print( s0055_words_wyggy_legal.dtypes )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[26]:
    # output
    : WORD      object
    : SYLLS     object
    : FREQ     float64
    : dtype: object
    :
    :END:

** Proc 01: Prepare =Levenshtein=
*** DONE Re-initialize (copy) =nouns= and =verbs= variables

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

s0066_nouns = s0055_words_nouns_legal.copy()
s0066_verbs = s0055_words_verbs_legal.copy()
s0066_wuggy = s0055_words_wyggy_legal.copy()

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[27]:
    :END:

*** DONE Fix data type for



*** DONE Checkup =wuggy=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

df_list = [  s0066_wuggy,  ]
df_info = [ "s0066_wuggy", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[28]:
    # output
    : ===========================================================================
    : s0066_wuggy
    : ===========================================================================
    : idx count: 834141
    : row count: 3  ['WORD', 'SYLLS', 'FREQ']
    : ---------------------------------------------------------------------------
    : is FREQ sorted: False
    : ---------------------------------------------------------------------------
    :          WORD          SYLLS          FREQ
    : 0           a              a  7.055835e-03
    : 1          aa            a-a  9.869880e-06
    : 2         aaa          a-a-a  1.165449e-05
    : 3          ab             ab  4.002688e-06
    : 4        abak          a-bak  3.627288e-08
    : 5      abakan       a-ba-kan  4.709878e-08
    : 6   abakanach   a-ba-ka-nach  9.827998e-09
    : 7    abakanie    a-ba-ka-nie  1.728216e-08
    : 8   abakanowi  a-ba-ka-no-wi  9.827998e-09
    : 9     abakany     a-ba-ka-ny  2.169720e-08
    : 10   abakanów    a-ba-ka-nów  1.694952e-08
    : 11  abakański   a-ba-kań-ski  9.827998e-09
    : ---------------------------------------------------------------------------
    :               WORD          SYLLS          FREQ
    : 834129  żłopiącymi  żło-pią-cy-mi  1.761479e-08
    : 834130      żłopię        żło-pię  2.236247e-08
    : 834131     żłopnie       żło-pnie  1.220184e-08
    : 834132     żłopnął       żło-pnął  9.827998e-09
    : 834133        żłób           żłób  1.789452e-07
    : 834134      żłóbek        żłó-bek  2.200111e-07
    : 834135      żłóbka        żłó-bka  2.000225e-07
    : 834136    żłóbkach      żłó-bkach  9.827998e-09
    : 834137      żłóbki        żłó-bki  2.407104e-08
    : 834138    żłóbkiem      żłó-bkiem  5.730481e-08
    : 834139      żłóbku        żłó-bku  1.891512e-07
    : 834140     żłóbków       żłó-bków  1.694952e-08
    :
    :END:

*** DONE Checkup =nouns=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

df_list = [  s0066_nouns,  ]
df_info = [ "s0066_nouns", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[29]:
    # output
    : ===========================================================================
    : s0066_nouns
    : ===========================================================================
    : idx count: 1625
    : row count: 5  ['Unnamed: 0', 'SYLL_START', 'SYLL_ULTIM_nouns', 'SYLL', 'WORD']
    : ---------------------------------------------------------------------------
    :     Unnamed: 0 SYLL_START SYLL_ULTIM_nouns        SYLL      WORD
    : 0            0        sud              tor     sud-tor    sudtor
    : 1            4         se             znor     se-znor    seznor
    : 2            7      ro-se             znor  ro-se-znor  roseznor
    : 3           10      mo-se             znor  mo-se-znor  moseznor
    : 4           13      wa-se             znor  wa-se-znor  waseznor
    : 5           16      ro-ka              łek   ro-ka-łek   rokałek
    : 6           17      ro-ka             biań  ro-ka-biań  rokabiań
    : 7           23      ro-ka             diań  ro-ka-diań  rokadiań
    : 8           29      ro-ka             siań  ro-ka-siań  rokasiań
    : 9           35      ro-ka              gla   ro-ka-gla   rokagla
    : 10          36      ro-ka              zja   ro-ka-zja   rokazja
    : 11          37      ro-ka              dża   ro-ka-dża   rokadża
    : ---------------------------------------------------------------------------
    :       Unnamed: 0 SYLL_START SYLL_ULTIM_nouns       SYLL     WORD
    : 1613        2426       o-wy             ckog  o-wy-ckog  owyckog
    : 1614        2427       o-wy             ckąg  o-wy-ckąg  owyckąg
    : 1615        2428       o-wy             ckug  o-wy-ckug  owyckug
    : 1616        2429       o-wy             brag  o-wy-brag  owybrag
    : 1617        2430       o-wy             rtia  o-wy-rtia  owyrtia
    : 1618        2431       o-wy             dium  o-wy-dium  owydium
    : 1619        2432      ko-li              pia  ko-li-pia  kolipia
    : 1620        2433      ko-li              bia  ko-li-bia  kolibia
    : 1621        2434      ko-li              nie  ko-li-nie  kolinie
    : 1622        2435      ro-li              pia  ro-li-pia  rolipia
    : 1623        2436      ro-li              bia  ro-li-bia  rolibia
    : 1624        2437      ro-li              nie  ro-li-nie  rolinie
    :
    :END:

*** DONE Checkup =verbs=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

df_list = [  s0066_verbs,  ]
df_info = [ "s0066_verbs", ]
df_head = 12
df_tail = 12

df_checkup_bulk( df_list=df_list, df_info=df_info, df_head=df_head, df_tail=df_tail, )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[30]:
    # output
    : ===========================================================================
    : s0066_verbs
    : ===========================================================================
    : idx count: 1360
    : row count: 5  ['Unnamed: 0', 'SYLL_START', 'SYLL_ULTIM_verbs', 'SYLL', 'WORD']
    : ---------------------------------------------------------------------------
    :     Unnamed: 0 SYLL_START SYLL_ULTIM_verbs        SYLL      WORD
    : 0            0        sud              nyć     sud-nyć    sudnyć
    : 1            1        sud              nić     sud-nić    sudnić
    : 2            2        sut              nić     sut-nić    sutnić
    : 3            3        sut              kić     sut-kić    sutkić
    : 4            4         se             chyć     se-chyć    sechyć
    : 5            5         se             pieć     se-pieć    sepieć
    : 6            6         se             kieć     se-kieć    sekieć
    : 7            7      ro-se             chyć  ro-se-chyć  rosechyć
    : 8            8      ro-se             pieć  ro-se-pieć  rosepieć
    : 9            9      ro-se             kieć  ro-se-kieć  rosekieć
    : 10          10      mo-se             chyć  mo-se-chyć  mosechyć
    : 11          11      mo-se             pieć  mo-se-pieć  mosepieć
    : ---------------------------------------------------------------------------
    :       Unnamed: 0 SYLL_START SYLL_ULTIM_verbs         SYLL      WORD
    : 1348        2161    za-ę-ła              być  za-ę-ła-być  zaęłabyć
    : 1349        2277        smi              nić      smi-nić    sminić
    : 1350        2320         zy             cieć      zy-cieć    zycieć
    : 1351        2321         zy             mieć      zy-mieć    zymieć
    : 1352        2332      na-zy             cieć   na-zy-cieć  nazycieć
    : 1353        2333      na-zy             mieć   na-zy-mieć  nazymieć
    : 1354        2344      ka-zy             cieć   ka-zy-cieć  kazycieć
    : 1355        2345      ka-zy             mieć   ka-zy-mieć  kazymieć
    : 1356        2358      ko-ży             mieć   ko-ży-mieć  kożymieć
    : 1357        2410       o-wy             dzić    o-wy-dzić   owydzić
    : 1358        2432      ko-li              sać    ko-li-sać   kolisać
    : 1359        2435      ro-li              sać    ro-li-sać   rolisać
    :
    :END:

*** DONE Define =Levenshtein= function for ~DataFrames~

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

def levenshtein( df_words, df_corps, corps_num=20, words_new="OLD_20", words_col="WORD", corps_col="WORD", verbose=0, ):
    df_words.drop( columns=[ "index", ], inplace=True, errors="ignore", )
    df_words.reset_index( level=None, drop=False, inplace=True, )
    df_words.insert( loc=len(df_words.columns), column=words_new, value=None, allow_duplicates=False, )
    ll = df_corps.shape[0]
    for ii, item in enumerate( df_words[words_col] ):
        # print( "Comparing: " + item + " with:..." )
        dist_vect = np.empty(( ll ))
        dist_vect[:] = np.nan
        for jj, corp in enumerate( df_corps[corps_col] ):
            # print("    ... " + corp)
            # print(type( item ) )
            # print(type( corp ) )
            dist_vect[jj] = levdist(item, corp)

        dist_vect[ dist_vect == 0 ] = np.inf
        dist_vect = np.sort( dist_vect )
        dist_vect[ dist_vect == np.inf ] = np.nan
        dist_vect = dist_vect[ 0:corps_num+1 ]
        df_words.iloc[ii,-1] = np.nanmean( dist_vect )

    return df_words

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[31]:
    :END:

*** DOIN Verify =OLD20= from =wyggy= against =sgjp=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

df_words  = s0005_exp_00_wuggy_all_DONE[0:5].copy()
df_corps  = sgjp.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num ) + "_sgjp"
words_col = "MATCH"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
tmp_levenshtein = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=tmp_levenshtein, df_name="tmp_levenshtein", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( "="*75 )
print( "="*75 )
print( "{:.3f} s".format( t1-t0 ) )
print( "{:.3f} min".format( (t1-t0)/60 ) )
print( "{:.3f} h".format( (t1-t0)/3600 ) )
print( "="*75 )
print( "="*75 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( "="*75 )
print( "="*75 )
print( tmp_levenshtein )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[32]:
    # output
    : Saving DataFrame as: data_out/tmp_levenshtein.xlsx
    : ===========================================================================
    : ===========================================================================
    : ===========================================================================
    : 23.770 s
    : 0.396 min
    : 0.007 h
    : ===========================================================================
    : ===========================================================================
    : ===========================================================================
    :    index     WORD    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION OLD_20_sgjp
    : 0      0  podmiot  podsiut          N    2.5        0.45     0         -3           2/3           -15                32             _pod[siu]t_           2
    : 1      1  podmiot  pojbiot          N    2.9        0.85     0         -3           2/3           -14                30             _poj[bio]t_     2.85714
    : 2      2  podmiot  pojsiot          N    2.9        0.85     0         -3           2/3            -9                17             _p[oj]siot_      2.7619
    : 3      3  podmiot  pojpiot          N    2.9        0.85     0         -3           2/3            -9                24             _p[oj]piot_     2.80952
    : 4      4  podmiot  podbiut          N    2.0       -0.05     0         -3           2/3           -29                43             _pod[biu]t_           2
    : ===========================================================================
    : ===========================================================================
    : ===========================================================================
    :    index     WORD    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION OLD_20_sgjp
    : 0      0  podmiot  podsiut          N    2.5        0.45     0         -3           2/3           -15                32             _pod[siu]t_           2
    : 1      1  podmiot  pojbiot          N    2.9        0.85     0         -3           2/3           -14                30             _poj[bio]t_     2.85714
    : 2      2  podmiot  pojsiot          N    2.9        0.85     0         -3           2/3            -9                17             _p[oj]siot_      2.7619
    : 3      3  podmiot  pojpiot          N    2.9        0.85     0         -3           2/3            -9                24             _p[oj]piot_     2.80952
    : 4      4  podmiot  podbiut          N    2.0       -0.05     0         -3           2/3           -29                43             _pod[biu]t_           2
    :
    :END:

*** DOIN Verify =OLD20= from =wyggy= against =s0066_wuggy=

    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

print( type( sgjp["WORD"][15] ) )
print( type( s0066_wuggy["WORD"][15] ) )
print( type( s0005_exp_00_wuggy_all_DONE[0:5].copy()["MATCH"][3] ) )




    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[24]:
    # output
    : <class 'str'>
    : <class 'str'>
    : <class 'str'>
    : WORD      object
    : SYLLS     object
    : FREQ     float64
    : dtype: object
    :
    :END:


    #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle yes

df_words  = s0005_exp_00_wuggy_all_DONE[0:5].copy()
df_corps  = s0066_wuggy.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num ) + "_s0066_wuggy"
words_col = "MATCH"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
tmp_levenshtein = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=tmp_levenshtein, df_name="tmp_levenshtein", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( "="*75 )
print( "="*75 )
print( "{:.3f} s".format( t1-t0 ) )
print( "{:.3f} min".format( (t1-t0)/60 ) )
print( "{:.3f} h".format( (t1-t0)/3600 ) )
print( "="*75 )
print( "="*75 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( "="*75 )
print( "="*75 )
print( tmp_levenshtein )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[25]:
    # output
    : Saving DataFrame as: data_out/tmp_levenshtein.xlsx
    : ===========================================================================
    : ===========================================================================
    : ===========================================================================
    : 2.477 s
    : 0.041 min
    : 0.001 h
    : ===========================================================================
    : ===========================================================================
    : ===========================================================================
    :    index     WORD    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION OLD_20_s0066_wuggy
    : 0      0  podmiot  podsiut          N    2.5        0.45     0         -3           2/3           -15                32             _pod[siu]t_            2.52381
    : 1      1  podmiot  pojbiot          N    2.9        0.85     0         -3           2/3           -14                30             _poj[bio]t_            2.90476
    : 2      2  podmiot  pojsiot          N    2.9        0.85     0         -3           2/3            -9                17             _p[oj]siot_            2.90476
    : 3      3  podmiot  pojpiot          N    2.9        0.85     0         -3           2/3            -9                24             _p[oj]piot_            2.90476
    : 4      4  podmiot  podbiut          N    2.0       -0.05     0         -3           2/3           -29                43             _pod[biu]t_                  2
    : ===========================================================================
    : ===========================================================================
    : ===========================================================================
    :    index     WORD    MATCH LEXICALITY  OLD20  OLD20_DIFF  NED1  NED1_DIFF OVERLAP_RATIO  MAXDEVIATION  SUMMED_DEVIATION MAXDEVIATION_TRANSITION OLD_20_s0066_wuggy
    : 0      0  podmiot  podsiut          N    2.5        0.45     0         -3           2/3           -15                32             _pod[siu]t_            2.52381
    : 1      1  podmiot  pojbiot          N    2.9        0.85     0         -3           2/3           -14                30             _poj[bio]t_            2.90476
    : 2      2  podmiot  pojsiot          N    2.9        0.85     0         -3           2/3            -9                17             _p[oj]siot_            2.90476
    : 3      3  podmiot  pojpiot          N    2.9        0.85     0         -3           2/3            -9                24             _p[oj]piot_            2.90476
    : 4      4  podmiot  podbiut          N    2.0       -0.05     0         -3           2/3           -29                43             _pod[biu]t_                  2
    :
    :END:

*** DOIN Time it on 10 words

    #+BEGIN_SRC ipython :session *iPython* :eval query :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

# df_words  = s0066_verbs[0:101]
df_words  = s0066_nouns[0:11].copy()
df_corps  = sgjp.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num )
words_col = "WORD"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
tmp_levenshtein = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=tmp_levenshtein, df_name="tmp_levenshtein", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( "="*75 )
print( "="*75 )
print( "{:.3f} s".format( t1-t0 ) )
print( "{:.3f} min".format( (t1-t0)/60 ) )
print( "{:.3f} h".format( (t1-t0)/3600 ) )
print( "="*75 )
print( "="*75 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( "="*75 )
print( "="*75 )
print( tmp_levenshtein )

     #+END_SRC

     #+RESULTS:
     :RESULTS:
     # Out[24]:
     # output
     : Saving DataFrame as: data_out/tmp_levenshtein.xlsx
     : ===========================================================================
     : ===========================================================================
     : ===========================================================================
     : 53.770 s
     : 0.896 min
     : 0.015 h
     : ===========================================================================
     : ===========================================================================
     : ===========================================================================
     :     index  Unnamed: 0 SYLL_START SYLL_ULTIM_nouns        SYLL      WORD   OLD_20
     : 0       0           0        sud              tor     sud-tor    sudtor        2
     : 1       1           4         se             znor     se-znor    seznor        2
     : 2       2           7      ro-se             znor  ro-se-znor  roseznor        3
     : 3       3          10      mo-se             znor  mo-se-znor  moseznor  2.90476
     : 4       4          13      wa-se             znor  wa-se-znor  waseznor        3
     : 5       5          16      ro-ka              łek   ro-ka-łek   rokałek        2
     : 6       6          17      ro-ka             biań  ro-ka-biań  rokabiań  2.66667
     : 7       7          23      ro-ka             diań  ro-ka-diań  rokadiań  2.90476
     : 8       8          29      ro-ka             siań  ro-ka-siań  rokasiań  2.80952
     : 9       9          35      ro-ka              gla   ro-ka-gla   rokagla  2.47619
     : 10     10          36      ro-ka              zja   ro-ka-zja   rokazja        2
     : ===========================================================================
     : ===========================================================================
     : ===========================================================================
     :     index  Unnamed: 0 SYLL_START SYLL_ULTIM_nouns        SYLL      WORD   OLD_20
     : 0       0           0        sud              tor     sud-tor    sudtor        2
     : 1       1           4         se             znor     se-znor    seznor        2
     : 2       2           7      ro-se             znor  ro-se-znor  roseznor        3
     : 3       3          10      mo-se             znor  mo-se-znor  moseznor  2.90476
     : 4       4          13      wa-se             znor  wa-se-znor  waseznor        3
     : 5       5          16      ro-ka              łek   ro-ka-łek   rokałek        2
     : 6       6          17      ro-ka             biań  ro-ka-biań  rokabiań  2.66667
     : 7       7          23      ro-ka             diań  ro-ka-diań  rokadiań  2.90476
     : 8       8          29      ro-ka             siań  ro-ka-siań  rokasiań  2.80952
     : 9       9          35      ro-ka              gla   ro-ka-gla   rokagla  2.47619
     : 10     10          36      ro-ka              zja   ro-ka-zja   rokazja        2
     :
     :END:

*** DONE Execute =Levenshtein= function for =nouns= (and save the results)

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

df_words  = s0066_nouns.copy()
df_corps  = sgjp.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num )
words_col = "WORD"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
s0066_nouns_levenshtein20 = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=s0066_nouns_levenshtein20, df_name="s0066_nouns_levenshtein20", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( (t1-t0)/60 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( s0066_nouns_levenshtein20 )

     #+END_SRC

*** DONE Execute =Levenshtein= function for =verbs= (and save the results)

     #+BEGIN_SRC ipython :session *iPython* :eval yes :results raw drawer :exports both :shebang "#!/usr/bin/env ipython\n# -*- coding: utf-8 -*-\n\n" :tangle stage_0066.py

df_words  = s0066_verbs.copy()
df_corps  = sgjp.copy()
corps_num = 20
words_new = "OLD_" + str( corps_num )
words_col = "WORD"
corps_col = "WORD"
verbose   = 5

t0 = time.time()
s0066_verbs_levenshtein20 = levenshtein( df_words, df_corps, corps_num, words_new, words_col, corps_col, verbose, )
df_to_xlsx( df_data=s0066_verbs_levenshtein20, df_name="s0066_verbs_levenshtein20", df_path="data_out", add_time=False, verbose=1, )
t1 = time.time()

print( "="*75 )
print( (t1-t0)/60 )
print( "="*75 )
print( df_words )
print( "="*75 )
print( s0066_verbs_levenshtein20 )

    #+END_SRC

    #+RESULTS:
    :RESULTS:
    # Out[198]:
    # output
    : ===========================================================================
    : 7.125602904955546
    : ===========================================================================
    :     index    MATCH   OLD_20
    : 0       1  pojbiot  2.85714
    : 1       2  pojsiot   2.7619
    : 2       3  pojpiot  2.80952
    : 3       4  podbiut        2
    : 4       5  podwiut        2
    : 5       6  poddiat        2
    : 6       7  poddiut  2.52381
    : 7       8  poddiet  1.95238
    : 8       9  podpiut        2
    : 9      10  podgiat        2
    : 10     11  podtiet  1.95238
    : 11     12  podtiat        2
    : 12     13  podtiut        2
    : 13     14  podkiat        2
    : 14     15  pojwiot  2.47619
    : 15     16  pojgiot  2.85714
    : 16     17  pojziot  2.71429
    : 17     18  pojfiot  2.85714
    : 18     19  pomwiot  2.09524
    : 19     20   sudtor        2
    : 20     21   suztor  1.95238
    : 21     22   sidtor        2
    : 22     23   siztor  1.95238
    : 23     24   suńtor  2.09524
    : 24     25   sułtor        2
    : 25     26   siłtor        2
    : 26     27   sekkur  2.04762
    : 27     28   suttor        2
    : 28     29   sujtor        2
    : 29     30   seńtyr  2.28571
    : ..    ...      ...      ...
    : 69     71   tabwód  2.71429
    : 70     72   tadwód  2.66667
    : 71     73   cagród   1.7619
    : 72     74   capłód  2.57143
    : 73     75   caśród  2.19048
    : 74     76   caspód  2.80952
    : 75     77   cabwód  2.80952
    : 76     78   cagłód        2
    : 77     79   cadwód  2.66667
    : 78     80  rozcior        2
    : 79     81  romziar  2.33333
    : 80     82  rommior  2.85714
    : 81     83  roznior        2
    : 82     84  rozsior        2
    : 83     85  romsiar  2.14286
    : 84     86  rommiur  2.90476
    : 85     87  romgiar  2.66667
    : 86     88  romtiar  2.71429
    : 87     89  romfiar  2.66667
    : 88     90  rodbiar  2.61905
    : 89     91  rodsiar  2.04762
    : 90     92  roddiar  2.80952
    : 91     93  rodmior   2.7619
    : 92     94  rodmiur  2.90476
    : 93     95  rodgiar   2.7619
    : 94     96  rodtiar  2.80952
    : 95     97  rodkiar  2.80952
    : 96     98  rozbior   1.7619
    : 97     99  rozbiur  1.95238
    : 98    100   pogrid        2
    :
    : [99 rows x 3 columns]
    : ===========================================================================
    :     index    MATCH   OLD_20
    : 0       1  pojbiot  2.85714
    : 1       2  pojsiot   2.7619
    : 2       3  pojpiot  2.80952
    : 3       4  podbiut        2
    : 4       5  podwiut        2
    : 5       6  poddiat        2
    : 6       7  poddiut  2.52381
    : 7       8  poddiet  1.95238
    : 8       9  podpiut        2
    : 9      10  podgiat        2
    : 10     11  podtiet  1.95238
    : 11     12  podtiat        2
    : 12     13  podtiut        2
    : 13     14  podkiat        2
    : 14     15  pojwiot  2.47619
    : 15     16  pojgiot  2.85714
    : 16     17  pojziot  2.71429
    : 17     18  pojfiot  2.85714
    : 18     19  pomwiot  2.09524
    : 19     20   sudtor        2
    : 20     21   suztor  1.95238
    : 21     22   sidtor        2
    : 22     23   siztor  1.95238
    : 23     24   suńtor  2.09524
    : 24     25   sułtor        2
    : 25     26   siłtor        2
    : 26     27   sekkur  2.04762
    : 27     28   suttor        2
    : 28     29   sujtor        2
    : 29     30   seńtyr  2.28571
    : ..    ...      ...      ...
    : 69     71   tabwód  2.71429
    : 70     72   tadwód  2.66667
    : 71     73   cagród   1.7619
    : 72     74   capłód  2.57143
    : 73     75   caśród  2.19048
    : 74     76   caspód  2.80952
    : 75     77   cabwód  2.80952
    : 76     78   cagłód        2
    : 77     79   cadwód  2.66667
    : 78     80  rozcior        2
    : 79     81  romziar  2.33333
    : 80     82  rommior  2.85714
    : 81     83  roznior        2
    : 82     84  rozsior        2
    : 83     85  romsiar  2.14286
    : 84     86  rommiur  2.90476
    : 85     87  romgiar  2.66667
    : 86     88  romtiar  2.71429
    : 87     89  romfiar  2.66667
    : 88     90  rodbiar  2.61905
    : 89     91  rodsiar  2.04762
    : 90     92  roddiar  2.80952
    : 91     93  rodmior   2.7619
    : 92     94  rodmiur  2.90476
    : 93     95  rodgiar   2.7619
    : 94     96  rodtiar  2.80952
    : 95     97  rodkiar  2.80952
    : 96     98  rozbior   1.7619
    : 97     99  rozbiur  1.95238
    : 98    100   pogrid        2
    :
    : [99 rows x 3 columns]
    :
    :END:
